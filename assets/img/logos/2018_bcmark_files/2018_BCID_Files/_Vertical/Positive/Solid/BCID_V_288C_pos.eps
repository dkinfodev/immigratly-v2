%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: BCID_V_288C_pos.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: Calvin Jones
%%CreationDate: 2015-08-05
%%BoundingBox: 0 0 555 524
%%HiResBoundingBox: 0 0 554.3091 523.0463
%%CropBox: 0 0 554.3091 523.0463
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.1 x54 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 288 C)
%%CMYKCustomColor: 1 0.8790 0.2699 0.1878 (PANTONE 288 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmp:ModifyDate>2015-08-05T14:23:51-07:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-08-05T14:23:51-07:00</xmp:CreateDate>
         <xmp:MetadataDate>2015-08-05T14:23:51-07:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>244</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA9AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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&#xA;kpYhzFDJGjP8X2iCcEMsocllEHmp235e+XLbSDo1u19DpRK0tE1C+AVVRk9NX9b1FjIbdFYKdtsJ&#xA;zSJva/cFEBVKnlbyH5Y8qh00G3ms4ZAedubq6mhqSCWEU0kiBvh+0BXBPLKfNYwA5IHzD+VHkbzH&#xA;eG81yym1CepKmW9veCcjUiONZgka+yqBkoZ5xFD7giWMHmyTS9NtNM0+CwtBILW3XhCsssk7hewM&#xA;kzO5p0FW2G3TKpGzZZgIrArsVdirsVdirsVdirsVdirsVdirsVdirC9b8k+br/Vbi8svOl7ptrMw&#xA;MVjFBA6RgACis256V3y6OWIFGILExPegf+Vdeev/AC4Wof8ASNbf0yXjR/mhHCe93/KuvPX/AJcL&#xA;UP8ApGtv6Y+NH+aF4T3u/wCVdeev/Lhah/0jW39MfGj/ADQvCe93/KuvPX/lwtQ/6Rrb+mPjR/mh&#xA;eE97v+Vdeev/AC4Wof8ASNbf0x8aP80Lwnvd/wAq689f+XC1D/pGtv6Y+NH+aF4T3u/5V156/wDL&#xA;hah/0jW39MfGj/NC8J73f8q689f+XC1D/pGtv6Y+NH+aF4T3u/5V156/8uFqH/SNbf0x8aP80Lwn&#xA;vd/yrrz1/wCXC1D/AKRrb+mPjR/mheE97v8AlXXnr/y4Wof9I1t/THxo/wA0Lwnvd/yrrz1/5cLU&#xA;P+ka2/pj40f5oXhPe7/lXXnr/wAuFqH/AEjW39MfGj/NC8J73f8AKuvPX/lwtQ/6Rrb+mPjR/mhe&#xA;E96J07yH5ztdQtbm489X13bwSxyTWj28CrKiMGaNiNwHAoaYDliR9IURPeznKGbsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:f9108cd4-ef9c-49f1-b016-b80058d615b5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:f9108cd4-ef9c-49f1-b016-b80058d615b5</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:7ce5db5e-e729-b242-880c-9ca93c1ec233</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f43240a9-9b91-4ff6-b051-fe26cfb21d45</stRef:instanceID>
            <stRef:documentID>xmp.did:f43240a9-9b91-4ff6-b051-fe26cfb21d45</stRef:documentID>
            <stRef:originalDocumentID>uuid:7ce5db5e-e729-b242-880c-9ca93c1ec233</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CCB02B0D0C2068118C1480B0D7E125E6</stEvt:instanceID>
                  <stEvt:when>2011-04-27T15:20:49-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CDB02B0D0C2068118C1480B0D7E125E6</stEvt:instanceID>
                  <stEvt:when>2011-04-27T15:23:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65C4186C1D2068118C14EE7C1CEC54C0</stEvt:instanceID>
                  <stEvt:when>2013-11-15T15:29:16-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6AC4186C1D2068118C14EE7C1CEC54C0</stEvt:instanceID>
                  <stEvt:when>2013-11-15T15:37:04-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f43240a9-9b91-4ff6-b051-fe26cfb21d45</stEvt:instanceID>
                  <stEvt:when>2015-08-05T14:22:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f9108cd4-ef9c-49f1-b016-b80058d615b5</stEvt:instanceID>
                  <stEvt:when>2015-08-05T14:23:51-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <dc:format>application/postscript</dc:format>
         <pdf:Producer>Adobe PDF Library 9.0</pdf:Producer>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>7.698737</stDim:w>
            <stDim:h>7.264533</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 288 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 288 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>LAB</xmpG:mode>
                           <xmpG:L>18.823530</xmpG:L>
                           <xmpG:A>8</xmpG:A>
                           <xmpG:B>-47</xmpG:B>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -523.046 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 523.046 li
554.309 523.046 li
554.309 0 li
cp
clp
155.72 330.429 mo
155.72 333.109 155.886 336.906 157.455 338.543 cv
159.027 340.255 161.506 340.629 163.984 340.629 cv
171.339 340.629 176.958 337.652 176.958 330.206 cv
176.958 324.324 173.652 317.475 160.514 317.475 cv
156.051 317.475 155.72 317.923 155.72 319.411 cv
155.72 330.429 li
cp
155.72 313.156 mo
155.72 315.241 155.803 315.391 160.018 315.241 cv
168.446 314.943 172.992 312.71 172.992 305.712 cv
172.992 298.415 166.959 295.663 160.679 295.663 cv
158.861 295.663 157.621 295.81 156.877 296.108 cv
156.051 296.331 155.72 296.706 155.72 298.043 cv
155.72 313.156 li
cp
148.944 303.256 mo
148.944 297.747 148.556 296.286 144.837 295.99 cv
142.251 295.81 li
141.829 295.475 141.949 293.984 142.334 293.95 cv
146.794 293.552 152.415 293.354 160.1 293.354 cv
165.306 293.354 170.264 293.725 173.984 295.439 cv
177.537 297.001 180.264 299.978 180.264 304.745 cv
180.264 310.105 176.793 312.86 171.834 314.943 cv
171.834 315.688 172.497 315.913 173.405 316.059 cv
177.867 316.806 184.479 320.526 184.479 328.493 cv
184.479 337.13 177.372 342.938 162.496 342.938 cv
160.1 342.938 156.051 342.712 152.58 342.712 cv
148.944 342.712 146.135 342.864 143.077 342.938 cv
142.581 342.712 142.415 341.522 142.911 341.075 cv
144.4 340.851 li
148.778 340.18 148.944 339.362 148.944 331.545 cv
148.944 303.256 li
cp
false sop
/0 
<<
/Name (PANTONE 288 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .878996 .269871 .187747 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
241.914 310.584 mo
241.914 303.843 241.773 302.762 237.608 302.445 cv
235.844 302.317 li
235.42 302.063 235.561 300.918 235.985 300.726 cv
239.515 300.854 241.914 300.918 244.879 300.918 cv
247.702 300.918 250.102 300.854 253.631 300.726 cv
254.055 300.918 254.196 302.063 253.772 302.317 cv
252.008 302.445 li
247.843 302.762 247.702 303.843 247.702 310.584 cv
247.702 333.224 li
247.702 339.963 247.843 340.854 252.008 341.299 cv
253.772 341.489 li
254.196 341.744 254.055 342.887 253.631 343.079 cv
250.102 342.952 247.702 342.887 244.879 342.887 cv
241.914 342.887 239.515 342.952 235.985 343.079 cv
235.561 342.887 235.42 341.871 235.844 341.489 cv
237.608 341.299 li
241.773 340.854 241.914 339.963 241.914 333.224 cv
241.914 310.584 li
cp
f
281.075 333.351 mo
281.075 340.028 281.207 340.98 285.042 341.299 cv
287.159 341.489 li
287.555 341.744 287.423 342.887 287.027 343.079 cv
283.256 342.952 281.009 342.887 278.363 342.887 cv
275.718 342.887 273.403 342.952 269.17 343.079 cv
268.774 342.887 268.642 341.808 269.17 341.489 cv
271.551 341.299 li
275.32 340.98 275.651 340.028 275.651 333.351 cv
275.651 304.923 li
275.651 302.953 275.651 302.891 273.667 302.891 cv
270.029 302.891 li
267.186 302.891 263.548 303.016 261.895 304.479 cv
260.308 305.877 259.647 307.279 258.92 308.867 cv
258.39 309.249 257.465 308.93 257.2 308.422 cv
258.257 305.562 259.25 301.492 259.712 298.947 cv
259.912 298.821 260.771 298.756 260.97 298.947 cv
261.367 300.981 263.548 300.918 266.592 300.918 cv
293.375 300.918 li
296.946 300.918 297.542 300.79 298.534 299.138 cv
298.864 299.01 299.592 299.076 299.723 299.327 cv
298.997 301.936 298.534 307.086 298.732 308.996 cv
298.468 309.504 297.342 309.504 297.013 309.121 cv
296.815 307.53 296.352 305.178 295.36 304.479 cv
293.837 303.397 291.327 302.891 287.688 302.891 cv
282.993 302.891 li
281.009 302.891 281.075 302.953 281.075 305.052 cv
281.075 333.351 li
cp
f
309.419 310.584 mo
309.419 303.843 309.278 302.762 305.115 302.445 cv
303.35 302.317 li
302.926 302.063 303.068 300.918 303.491 300.726 cv
307.02 300.854 309.419 300.918 312.385 300.918 cv
315.207 300.918 317.609 300.854 321.138 300.726 cv
321.562 300.918 321.703 302.063 321.28 302.317 cv
319.513 302.445 li
315.349 302.762 315.207 303.843 315.207 310.584 cv
315.207 333.224 li
315.207 339.963 315.349 340.854 319.513 341.299 cv
321.28 341.489 li
321.703 341.744 321.562 342.887 321.138 343.079 cv
317.609 342.952 315.207 342.887 312.385 342.887 cv
309.419 342.887 307.02 342.952 303.491 343.079 cv
303.068 342.887 302.926 341.871 303.35 341.489 cv
305.115 341.299 li
309.278 340.854 309.419 339.963 309.419 333.224 cv
309.419 310.584 li
cp
f
341.051 343.731 mo
334.749 343.731 330.772 342.077 329.346 341.379 cv
328.444 339.978 327.47 335.464 327.32 332.474 cv
327.694 332.029 328.82 331.904 329.121 332.284 cv
330.246 335.528 333.322 341.757 342.027 341.757 cv
348.331 341.757 351.407 338.26 351.407 334.446 cv
351.407 331.65 350.732 328.533 345.252 325.543 cv
338.126 321.6 li
334.372 319.502 330.02 315.877 330.02 310.662 cv
330.02 304.621 335.575 299.723 345.329 299.723 cv
347.655 299.723 350.356 300.107 352.306 300.552 cv
353.283 300.807 354.332 300.932 354.933 300.932 cv
355.609 302.46 356.285 306.02 356.285 308.691 cv
355.984 309.074 354.784 309.263 354.408 308.883 cv
353.433 305.829 351.407 301.697 344.203 301.697 cv
336.85 301.697 335.274 305.829 335.274 308.754 cv
335.274 312.444 338.875 315.115 341.652 316.577 cv
347.655 319.756 li
352.381 322.236 357.034 325.923 357.034 331.965 cv
357.034 338.96 350.807 343.731 341.051 343.731 cv
cp
f
378.82 322.348 mo
375.537 322.348 375.399 322.476 375.399 324.383 cv
375.399 333.351 li
375.399 340.028 375.742 340.918 379.574 341.299 cv
381.558 341.489 li
381.968 341.744 381.832 342.887 381.421 343.079 cv
377.726 342.952 375.399 342.887 372.731 342.887 cv
369.788 342.887 367.461 343.015 364.793 343.079 cv
364.382 342.887 364.246 341.871 364.657 341.489 cv
365.819 341.299 li
369.653 340.663 369.788 340.028 369.788 333.351 cv
369.788 310.457 li
369.788 303.78 369.31 302.7 365.75 302.445 cv
363.971 302.317 li
363.561 302.063 363.698 300.918 364.108 300.726 cv
367.461 300.79 369.788 300.918 372.731 300.918 cv
375.399 300.918 377.726 300.854 380.667 300.726 cv
381.08 300.918 381.216 302.063 380.805 302.317 cv
379.505 302.445 li
375.537 302.827 375.399 303.78 375.399 310.457 cv
375.399 317.769 li
375.399 319.741 375.537 319.804 378.82 319.804 cv
398.391 319.804 li
401.676 319.804 401.814 319.741 401.814 317.769 cv
401.814 310.457 li
401.814 303.78 401.676 302.827 397.639 302.445 cv
396.34 302.317 li
395.927 302.063 396.065 300.918 396.476 300.726 cv
399.625 300.854 401.951 300.918 404.755 300.918 cv
407.424 300.918 409.75 300.854 412.83 300.726 cv
413.241 300.918 413.376 302.063 412.966 302.317 cv
411.529 302.445 li
407.562 302.827 407.424 303.78 407.424 310.457 cv
407.424 333.351 li
407.424 340.028 407.562 340.854 411.529 341.299 cv
413.171 341.489 li
413.582 341.744 413.447 342.887 413.036 343.079 cv
409.75 342.952 407.424 342.887 404.755 342.887 cv
401.951 342.887 399.488 342.952 396.476 343.079 cv
396.065 342.887 395.927 341.871 396.34 341.489 cv
397.639 341.299 li
401.814 340.663 401.814 340.028 401.814 333.351 cv
401.814 324.383 li
401.814 322.476 401.676 322.348 398.391 322.348 cv
378.82 322.348 li
cp
f
109.781 357.052 mo
115.405 352.676 122.571 350.528 130.583 350.528 cv
134.745 350.528 140.599 351.371 144.221 352.37 cv
145.146 352.599 145.686 352.754 146.377 352.676 cv
146.456 354.442 146.84 359.278 147.456 363.963 cv
147.072 364.499 145.917 364.578 145.376 364.117 cv
144.221 358.896 140.753 352.906 129.582 352.906 cv
117.793 352.906 107.777 360.353 107.777 376.246 cv
107.777 392.37 118.025 401.276 130.66 401.276 cv
140.599 401.276 144.991 394.826 146.763 390.295 cv
147.303 389.913 148.459 390.066 148.767 390.604 cv
148.229 394.596 146.225 399.663 145.068 401.124 cv
144.144 401.276 143.22 401.583 142.372 401.888 cv
140.676 402.505 135.129 403.658 130.199 403.658 cv
123.265 403.658 116.638 402.274 111.013 398.511 cv
104.849 394.289 100.072 387.303 100.072 377.4 cv
100.072 368.875 103.925 361.582 109.781 357.052 cv
cp
f
192.182 383.222 mo
192.182 372.729 187.308 361.41 174.555 361.41 cv
167.61 361.41 158.597 365.924 158.597 379.852 cv
158.597 389.262 163.404 401.474 176.557 401.474 cv
184.57 401.474 192.182 395.75 192.182 383.222 cv
cp
151.919 381.886 mo
151.919 369.168 161.934 359.439 175.689 359.439 cv
191.114 359.439 198.859 370.057 198.859 381.249 cv
198.859 394.095 188.577 403.446 175.689 403.446 cv
160.867 403.446 151.919 393.332 151.919 381.886 cv
cp
f
274.188 376.418 mo
274.188 372.477 274.054 365.163 272.907 363.255 cv
272.437 362.492 271.224 362.045 269.538 361.918 cv
267.853 361.792 li
267.449 361.345 267.583 360.521 267.987 360.265 cv
270.549 360.392 273.043 360.456 275.672 360.456 cv
278.503 360.456 280.324 360.392 282.751 360.266 cv
283.289 360.585 283.221 361.41 282.885 361.792 cv
281.267 361.918 li
279.582 362.045 278.3 362.62 277.897 363.447 cv
276.954 365.544 276.954 372.858 276.954 376.418 cv
276.954 383.605 li
276.954 389.138 276.009 394.987 272.236 398.803 cv
269.336 401.79 264.348 403.446 259.36 403.446 cv
254.708 403.446 250.058 402.618 246.755 399.947 cv
243.182 397.151 241.497 392.507 241.497 384.94 cv
241.497 369.931 li
241.497 363.318 241.362 362.238 237.453 361.918 cv
235.767 361.792 li
235.363 361.538 235.497 360.458 235.902 360.265 cv
239.272 360.392 241.564 360.456 244.261 360.456 cv
247.024 360.456 249.249 360.392 252.552 360.266 cv
252.956 360.458 253.091 361.538 252.686 361.792 cv
251.068 361.918 li
247.159 362.238 247.024 363.318 247.024 369.931 cv
247.024 383.667 li
247.024 393.906 250.395 400.648 260.708 400.648 cv
270.482 400.648 274.188 393.397 274.188 383.732 cv
274.188 376.418 li
cp
f
358.647 391.918 mo
358.647 394.229 358.795 397.505 360.211 398.919 cv
361.626 400.396 363.862 400.718 366.097 400.718 cv
372.727 400.718 377.793 398.148 377.793 391.726 cv
377.793 386.651 374.813 380.744 362.967 380.744 cv
358.944 380.744 358.647 381.128 358.647 382.412 cv
358.647 391.918 li
cp
358.647 377.016 mo
358.647 378.816 358.721 378.943 362.52 378.816 cv
370.12 378.559 374.218 376.633 374.218 370.592 cv
374.218 364.298 368.779 361.922 363.117 361.922 cv
361.477 361.922 360.361 362.052 359.688 362.308 cv
358.944 362.5 358.647 362.822 358.647 363.978 cv
358.647 377.016 li
cp
352.537 368.475 mo
352.537 363.721 352.239 362.5 348.886 362.244 cv
346.501 362.013 li
346.23 361.768 346.085 360.48 346.576 360.444 cv
350.6 360.145 355.667 359.933 362.596 359.933 cv
367.289 359.933 371.758 360.253 375.113 361.729 cv
378.316 363.079 380.772 365.647 380.772 369.759 cv
380.772 374.384 377.645 376.761 373.175 378.559 cv
373.175 379.201 373.769 379.394 374.59 379.523 cv
378.614 380.163 384.575 383.376 384.575 390.247 cv
384.575 397.699 378.167 402.708 364.753 402.708 cv
362.596 402.708 358.944 402.513 355.815 402.513 cv
352.537 402.513 350.005 402.643 347.246 402.708 cv
346.8 402.513 346.65 401.487 347.096 401.104 cv
348.439 400.912 li
352.387 400.331 352.537 399.626 352.537 392.883 cv
352.537 368.475 li
cp
f
413.239 419.775 mo
142.587 419.775 li
142.587 422.975 li
413.239 422.975 li
413.239 419.775 li
cp
f
205.398 320.594 mo
204.117 320.594 201.554 321.073 201.554 319.37 cv
201.554 307.17 li
201.554 302.403 201.706 301.72 207.433 301.72 cv
214.14 301.72 218.286 305.126 218.286 311.395 cv
218.286 314.12 217.305 316.642 214.818 318.346 cv
211.955 320.322 208.864 320.594 205.398 320.594 cv
cp
231.124 341.49 mo
229.359 341.337 li
229.002 341.299 228.686 341.254 228.384 341.206 cv
225.801 340.747 224.768 338.448 223.552 336.315 cv
217.448 325.685 li
216.394 323.913 215.263 321.528 212.85 321.189 cv
219.106 320.439 224.759 316.828 224.759 310.627 cv
224.759 303.47 217.674 300.269 210.514 300.269 cv
206.219 300.269 202.304 300.385 197.933 300.385 cv
195.521 300.385 192.654 300.269 190.242 300.269 cv
188.903 300.269 188.886 300.542 188.886 301.29 cv
188.886 302.398 189.354 302.088 190.771 302.167 cv
195.864 302.454 195.668 303.404 195.668 307.763 cv
195.668 335.633 li
195.668 339.622 196.013 340.814 191.825 341.19 cv
191.825 341.19 191.184 341.254 190.82 341.293 cv
189.046 341.475 li
188.622 341.856 188.764 342.874 189.188 343.066 cv
190.13 343.031 191.803 342.964 191.803 342.964 cv
194.121 342.896 196.44 342.718 198.758 342.718 cv
201.089 342.718 203.32 342.898 205.612 342.964 cv
205.612 342.967 li
206.426 342.993 207.284 343.021 208.227 343.055 cv
208.651 342.864 208.792 341.847 208.369 341.466 cv
206.583 341.297 li
206.219 341.259 205.593 341.203 205.593 341.203 cv
201.363 340.915 201.622 339.723 201.622 335.633 cv
201.622 325.141 li
201.622 324.526 201.546 322.891 201.998 322.415 cv
202.376 322.004 203.053 322.074 203.656 322.074 cv
209.385 322.074 209.309 322.619 212.022 327.388 cv
219.407 340.677 li
220.009 341.7 220.462 342.993 221.97 342.993 cv
228.385 342.993 li
229.194 343.019 230.046 343.045 230.983 343.079 cv
231.407 342.889 231.548 341.871 231.124 341.49 cv
cp
f
206.781 370.148 mo
206.781 363.472 206.642 362.454 202.236 362.135 cv
200.486 362.007 li
200.066 361.752 200.206 360.611 200.626 360.417 cv
204.544 360.544 206.922 360.608 209.719 360.608 cv
212.447 360.608 214.826 360.544 218.324 360.418 cv
218.744 360.611 218.884 361.752 218.463 362.007 cv
216.785 362.135 li
212.658 362.454 212.518 363.472 212.518 370.148 cv
212.518 392.279 li
212.518 396.284 212.727 397.937 213.986 399.145 cv
214.755 399.844 216.084 400.609 221.611 400.609 cv
227.557 400.609 229.026 400.356 230.146 399.783 cv
231.545 399.018 233.363 396.729 234.762 393.486 cv
235.183 393.169 236.511 393.423 236.511 393.867 cv
236.511 394.569 234.552 401.054 233.573 402.769 cv
230.006 402.643 223.359 402.579 216.155 402.579 cv
209.719 402.579 li
206.781 402.579 204.544 402.643 200.626 402.769 cv
200.206 402.579 200.066 401.561 200.486 401.181 cv
202.585 400.991 li
206.642 400.609 206.781 399.718 206.781 393.042 cv
206.781 370.148 li
cp
f
394.172 370.273 mo
394.172 363.534 394.036 362.454 389.982 362.135 cv
388.266 362.007 li
387.854 361.752 387.991 360.611 388.405 360.417 cv
391.838 360.544 394.172 360.608 397.057 360.608 cv
399.804 360.608 402.139 360.544 405.574 360.418 cv
405.985 360.611 406.122 361.752 405.709 362.007 cv
403.993 362.135 li
399.942 362.454 399.804 363.534 399.804 370.273 cv
399.804 392.915 li
399.804 399.654 399.942 400.545 403.993 400.991 cv
405.709 401.181 li
406.122 401.436 405.985 402.579 405.574 402.769 cv
402.139 402.643 399.804 402.579 397.057 402.579 cv
394.172 402.579 391.838 402.643 388.405 402.769 cv
387.991 402.579 387.854 401.561 388.266 401.181 cv
389.982 400.991 li
394.036 400.545 394.172 399.654 394.172 392.915 cv
394.172 370.273 li
cp
f
339.293 400.975 mo
338.939 400.939 338.282 400.884 338.282 400.884 cv
337.556 400.812 336.909 400.709 336.394 400.148 cv
335.502 399.202 335.578 396.503 335.578 395.424 cv
335.578 367.558 li
335.578 366.342 335.281 363.713 336.171 362.768 cv
336.618 362.268 337.544 362.186 338.37 362.137 cv
338.37 362.135 li
338.871 362.096 338.883 362.096 339.324 362.074 cv
341.088 361.949 li
341.513 361.694 341.371 360.548 340.946 360.357 cv
340.004 360.391 339.146 360.378 338.332 360.405 cv
338.332 360.408 li
330.828 360.408 li
330.011 360.408 329.269 360.408 328.824 361.285 cv
313.535 393.129 li
300.029 362.365 li
299.582 361.285 299.509 360.408 298.098 360.408 cv
290.288 360.408 li
289.475 360.382 288.577 360.391 287.634 360.357 cv
287.21 360.548 287.069 361.694 287.493 361.949 cv
289.257 362.074 li
289.622 362.105 290.281 362.148 290.281 362.148 cv
293.209 362.337 293.391 362.99 293.125 366.074 cv
290.826 395.963 li
290.624 398.964 290.458 400.549 287.317 400.841 cv
287.317 400.841 286.651 400.926 286.287 400.964 cv
284.522 401.155 li
284.098 401.535 284.24 402.553 284.664 402.744 cv
285.595 402.71 287.248 402.661 287.248 402.661 cv
288.84 402.583 290.464 402.441 292.087 402.441 cv
293.838 402.441 295.592 402.605 297.344 402.676 cv
297.344 402.678 li
298.158 402.704 299.017 402.731 299.959 402.767 cv
300.383 402.576 300.525 401.559 300.103 401.177 cv
298.336 400.987 li
297.872 400.949 297.352 400.899 297.352 400.899 cv
292.816 400.589 292.916 397.384 293.2 393.469 cv
295.353 365.67 li
295.872 365.67 li
310.493 399.877 li
310.64 400.348 310.862 401.16 311.606 401.16 cv
312.275 401.16 312.496 400.417 312.718 399.943 cv
329.194 364.858 li
329.715 364.858 li
329.715 395.424 li
329.715 396.637 329.863 399.135 328.601 400.081 cv
327.941 400.569 325.798 400.865 325.798 400.865 cv
325.502 400.912 325.192 400.953 324.842 400.991 cv
323.077 401.181 li
322.653 401.562 322.794 402.579 323.218 402.769 cv
324.148 402.737 325.798 402.683 325.798 402.683 cv
328.19 402.619 330.621 402.441 333.053 402.441 cv
334.8 402.441 338.227 402.608 338.227 402.608 cv
339.042 402.632 339.971 402.721 340.915 402.755 cv
341.339 402.565 341.481 401.547 341.057 401.165 cv
339.293 400.975 li
cp
f
435.444 385.41 mo
427.185 385.41 li
426.897 385.41 424.6 385.678 424.6 385.003 cv
424.6 384.801 424.743 384.397 424.815 384.197 cv
429.771 371.922 li
429.914 371.585 430.417 369.902 430.992 369.902 cv
431.422 369.902 431.997 371.654 432.141 371.922 cv
437.023 383.385 li
437.023 383.52 437.525 384.598 437.525 384.87 cv
437.525 385.612 435.874 385.41 435.444 385.41 cv
cp
453.981 401.149 mo
453.745 400.957 li
453.392 400.918 453.08 400.876 452.784 400.829 cv
450.033 400.215 448.96 396.902 447.946 394.543 cv
433.794 361.048 li
433.654 360.647 433.372 359.78 432.811 359.78 cv
432.04 359.78 431.831 360.715 431.621 361.246 cv
418.1 394.678 li
417.609 395.943 416.349 399.014 415.437 399.947 cv
414.74 400.663 413.83 400.799 412.862 400.899 cv
412.862 400.899 412.098 400.973 411.735 401.013 cv
410.072 401.181 li
409.648 401.562 409.789 402.579 410.213 402.769 cv
411.157 402.737 412.83 402.676 412.83 402.676 cv
414.679 402.651 416.529 402.417 418.38 402.417 cv
419.937 402.417 421.494 402.583 423.051 402.652 cv
423.051 402.652 424.723 402.711 425.665 402.746 cv
426.089 402.556 426.231 401.538 425.807 401.158 cv
424.042 400.965 li
423.691 400.93 423.083 400.871 423.083 400.871 cv
421.458 400.692 419.432 400.4 419.432 398.613 cv
419.432 397.412 419.992 396.011 420.412 394.942 cv
422.513 389.94 li
423.565 387.538 423.144 387.269 425.946 387.269 cv
435.474 387.269 li
438.836 387.269 438.346 387.269 439.819 390.674 cv
442.06 395.744 li
442.411 396.612 443.039 398.081 443.039 399.014 cv
443.039 400.69 441.209 400.801 439.499 400.947 cv
439.499 400.947 438.932 400.996 438.44 401.031 cv
436.743 401.156 li
436.319 401.536 436.46 402.554 436.884 402.745 cv
437.827 402.71 439.499 402.643 439.499 402.643 cv
441.493 402.57 443.497 402.417 445.422 402.417 cv
447.876 402.417 450.331 402.583 452.785 402.652 cv
452.785 402.651 li
453.589 402.674 452.909 402.704 453.839 402.737 cv
454.262 402.547 454.405 401.53 453.981 401.149 cv
cp
f
364.371 206.064 mo
369.751 208.295 li
381.679 199.975 li
364.371 206.064 li
cp
f
163.94 196.773 mo
149.802 191.799 li
150.511 190.066 li
166.434 195.375 li
166.502 195.337 li
168.604 194.145 li
169.442 193.62 li
152.079 186.234 li
152.813 184.418 li
191.566 200.093 li
192.845 199.562 li
154.41 180.832 li
155.267 179.072 li
195.996 198.028 li
196.559 197.742 li
157.067 175.343 li
157.878 173.66 li
214.908 204.691 li
215.374 203.828 216.352 202.256 216.855 201.409 cv
195.172 181.024 174.249 165.718 174.249 165.718 cv
174.249 165.718 195.767 180.128 222.323 193.524 cv
223.2 192.43 223.919 191.551 224.856 190.512 cv
176.204 147.68 li
177.511 146.339 li
216.778 179.805 li
180.399 143.374 li
181.76 141.964 li
222.605 181.437 li
184.584 139.239 li
186.038 137.927 li
221.178 175.556 li
189.105 135.143 li
190.487 133.888 li
231.599 183.919 li
232.662 183.002 233.544 182.313 234.657 181.46 cv
222.221 154.549 208.639 132.657 208.639 132.657 cv
208.639 132.657 223.094 153.934 242.598 176.218 cv
243.788 175.548 244.997 174.904 246.23 174.3 cv
246.024 174.165 li
217.211 116.664 li
218.925 115.911 li
242.795 161.65 li
222.713 114.243 li
224.504 113.447 li
247.587 165.345 li
228.142 111.976 li
229.981 111.306 li
248.468 159.358 li
233.868 109.873 li
235.62 109.227 li
254.841 170.604 li
254.804 170.765 li
254.851 170.746 li
256.129 170.318 257.43 169.939 258.736 169.583 cv
257.273 140.103 252.912 114.885 252.912 114.885 cv
252.912 114.885 258.312 139.881 267.994 167.752 cv
269.343 167.586 270.699 167.446 272.068 167.353 cv
272.025 167.289 li
272.193 167.289 li
272.096 167.149 li
266.922 103.042 li
268.792 102.983 li
273.79 154.336 li
272.931 102.857 li
274.888 102.791 li
276.849 159.557 li
278.81 102.79 li
280.769 102.857 li
279.909 154.336 li
284.908 102.985 li
286.777 103.042 li
281.603 167.149 li
281.505 167.289 li
281.534 167.289 li
281.519 167.309 li
281.604 167.309 li
282.943 167.393 284.269 167.528 285.587 167.686 cv
295.255 139.842 300.646 114.885 300.646 114.885 cv
300.646 114.885 296.298 140.028 294.829 169.454 cv
296.149 169.803 297.455 170.185 298.742 170.607 cv
317.894 109.445 li
319.649 110.091 li
305.046 159.576 li
323.535 111.524 li
325.372 112.196 li
305.927 165.563 li
329.009 113.664 li
330.802 114.46 li
310.718 161.868 li
334.59 116.129 li
336.302 116.882 li
307.593 174.178 li
307.642 174.198 li
308.824 174.773 309.983 175.389 311.128 176.024 cv
330.547 153.811 344.919 132.657 344.919 132.657 cv
344.919 132.657 331.431 154.398 319.032 181.179 cv
320.14 182.016 321.223 182.88 322.276 183.778 cv
362.905 134.29 li
364.29 135.547 li
332.213 175.959 li
367.356 138.331 li
368.808 139.643 li
330.787 181.841 li
371.63 142.367 li
372.994 143.778 li
336.615 180.209 li
375.882 146.744 li
377.187 148.082 li
329.13 190.432 li
329.158 190.46 li
329.996 191.395 330.804 192.36 331.597 193.341 cv
357.986 179.997 379.31 165.718 379.31 165.718 cv
379.31 165.718 358.589 180.874 337.02 201.114 cv
337.611 202.101 338.566 203.784 339.111 204.801 cv
395.332 174.189 li
396.144 175.874 li
351.265 201.327 li
397.944 179.604 li
398.799 181.364 li
355.322 202.551 li
356.156 202.842 li
400.396 184.947 li
401.132 186.765 li
360.009 204.256 li
360.779 204.574 li
388.18 195.439 li
392.31 192.557 li
393.681 193.603 li
402.699 190.598 li
403.408 192.327 li
395.606 195.072 li
406.878 203.674 li
410.49 205.687 li
395.999 145.11 341.507 100.072 276.489 100.072 cv
210.328 100.072 155.067 146.706 141.761 208.894 cv
141.932 208.811 142.098 208.733 142.268 208.649 cv
143.919 207.901 li
144.933 207.429 li
163.94 196.773 li
cp
f
140.982 262.917 mo
140.982 262.917 161.307 258.858 178.273 258.858 cv
222.975 258.858 284.812 284.028 329.68 284.028 cv
362.595 284.028 394.697 274.999 412.192 261.834 cv
413.558 254.046 414.275 246.037 414.275 237.857 cv
414.275 226.779 412.959 216.01 410.49 205.687 cv
391.785 195.256 li
369.837 210.647 li
355.074 204.898 li
350.076 207.424 319.24 228.045 319.24 228.045 cv
307.404 219.477 li
294.707 216.963 li
277.775 204.636 li
258.353 217.97 li
258.353 217.97 236.683 230.552 235.939 230.552 cv
235.192 230.552 209.795 210.419 209.795 210.419 cv
198.094 198.092 li
196.102 199.35 188.143 203.002 188.143 203.002 cv
187.733 203.11 li
180.032 200.727 li
170.678 195.767 li
142.268 208.649 li
142.098 208.733 141.932 208.811 141.761 208.894 cv
139.763 218.233 138.702 227.921 138.702 237.857 cv
138.702 246.415 139.489 254.79 140.982 262.917 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 19.0.1%%For: (Calvin Jones) ()%%Title: (BCID_V_288C_pos.eps)%%CreationDate: 2015-08-05 2:23 PM%%Canvassize: 16383%AI9_DataStream%Gb!9sl],PeOY6>1oa^e1!!u+2(@S'u8NE+nG)di,1ug;#%YRl*[AM8LFpWS\jek$^iqn=Cn&8StOU$UM5uMnP2]!>?`]\p'o/FGZ%q#/fOI.d.SIdut.r7TP3Z.Go";G9lkNi.,T2h1EXs6Zk:IfJg6W:IBOUW_$Z2UrE%q#7^^*p8TE\$`V'J,-PqhgPP$rp0$%rQWB,%n%\hpq;[6khgG=-2h1GjIk8A3ql`2rs8.l7]RKk9ds-3F/B$HEiqooCI.>DK?[r+TS"Dj//C=#NrRnr5qtV>js6N>W=hsEKs7eVu%^Nok8GB6dArp8l/III"/Dnl2EMU+HajOZWrj_oYAbJ/C]]g"[[FH67]J,$usaSbGSnM[`e7[sF>kPpm_q:5($r?)'oGpi<toG$Hf%s5\+UIsD"Lq_+Q?iPW^nJ,[:8.6mZ9k+D$*5PadJr;I46IJ_hZT7?Uca05N`:Mk0fIK0/a&"e@GhXK7VL2`sZoN;WAH^q!QJ`'TC%GrUXXkDJGK5Kfb7mIMEl@N05YcLE?;p,8.?lo45ahZ*)qq`k&Gl+aq3r/:=,fP19]S*tgtec.K=>Y9I7Nd73BVRK'ug&Cushg]nN%c+eZ)eTZc4TE!rUA,3$`?bHF.Z`!#nr;DDsoec;*!WRZ%Dp%NtqtW1#GlQSFViMq6(G,LNW?:oa4S>&es8615/D(2VouHf6s7YKf%l<6EQit.)@:T5ji28O!Fo,C1a-LiOBoDH@fnEHU<%lV&D,r>')D'$s*-iNu.S$2h\e^m%_/0Ehf9RS*Iof>rVUCl0DI.Pl)MoJqJ%lLmHRZa]o*hnf?Hi[5e]qsOF7fZYW.kC5P?lLFS?IPY'pG@,jir:*bsjkKTL^R4*Pod$aP+9,_uo7,?+bb'Cb8)'%&qsT"0EK:%`%CROe=0D.!sGJF.HrVY,/I.Qn*5Q9]p?[dCoPFm?pnb;LEIP$KRk3HB&4oaKuT76=TpYYuIdr.I"r:&15gB%)5bp%Z8ju`I"_W;SP%5QC#05Q1W+\,81sn'"#qs5b3GT7?Y*eK;O$r/^mWe[sXM2LkJiScADUpuE^IDr.[#oO%FoJ,.^2H)HG->O1[KquZs!-W^$B`]*ni%rO_M^IPX"A(JhgBrVrDf11sJ#o(:[T5(>M0f)0_6o-7pu17(5NiEuOKe3<,a7Ji,NSGr/U0A4h3IIYimgOjEmEm/J$o_E_"rr(rZ%hgbNi^\76Kf9bSKm.5/0qpWT(r^2e@`V[uJ8H09Wq]G:ik:_`Kk[-QVh9uo'^]*4sa+O?VU6:k"@>"N7AcDMupE)VIp$M&h]bBJY%F.lsSqsaSDJ,]/RpTK'l[_I7jjkRn5<@IM.^Ad*iLQ?pI>t,e-,BitCo<1CYk3gl/PdWcJJmhA%"5eV&DkEIq0_a[1?Vc[>kr7LL%p"fMaHTo1C;3\hnhu*B7IseH3k/cHTK]RDV?C`CjB:o,K;5JciWsV1Ao93Oqs-$Au#X<`Y4T0[,pYYuBk5.)1RJ=6Uc[Yatk<Jmj%$2W+LIeot?s8G6CV_;TA5JR#q:[ROd/5JDK;[j's4M=MJ;<-E1)Pe&AjUPPPp=-F#f+_G^:[kbElrWenJ%1uLamXt6\eqN&h#4iB%LaFk,Qa]K0jg#lMnFG^7rBknc>KcSmqR3c1gtC3QD)k'EE/PlKRf#))`fHuX[6k,KPe-soH8qL4hO8f"FbFr!Ve:B0*O0$uU39re%fm[8N<:mGT*.n9%4W8bjhtD$iS;n<RWE@Ta"=*^9,:=m^g)U%i<'BcVfM]`AUNQW9#Zs@\!=0OI[IsDTMLfOKh&"FgJ>qrM3'tI`%VP5)ZJieAO+=7k6#&6f7Go_R>hN/\:pr(X\pg@@I:dX1I8*1%(\CF,DcF"UqpW+TF3Bq@^n;O3/[g.^T&:BT;b1h=9aFfDZ$5jcf%EEP)K3>J\?EbTTH;6,7<W2.tekD5jhnldbBbmhj`"I]DVVbU54^_&T6VZ:*X!T.\57)^r0kZgRfWGmGgY_X'Cf%U?>6%[%MS-H_0%4=qk\Cs9eB111B]o4qobH=abuDJap.-?.Zfgfil]8QLEG;X=83;6[4Y.Q9*N&AE9,NK]YF0N'n7(D%49BAQjQSTL/h4ItZl;o?/$%C$YBbE>25r58osM]Mcd9n0B"s-K^80PoRrq(:2>:JJQDl\-"UKm!EdX,L"Pc3KJCdEl$5-`Rr:382p2Yj)d">714\QhP)pul^+G;%5G3j^P'UuX6Luri#N*eB)pmaiGVrY6jOX9HF4:BhN1k.:8P_hVYfZjMl^8+5@\;i%e]e3*,Fu/1],*dhXT1>#62m.?YE$*^L`"le%j["s<.j">M97J^)aJA)]1d>i$#(3jH(^d,G_I[$[c2ik`*dY3s2X_#]3CX!91)/=Rmuak,-@f#9S0/[EaJ?g5Xpa11P5dg=\)>iH%0^1#FL^9UEK^sr!1Dq&k&n[dnD"5ICKYK_2pM'+HLYDQNA[.!_l5T/BR-?=ahlmGh#a15*2a9/G('E\15tpl@L+cr?&s-&W8&i$V%W<HZYJAmal$GBstONEe:!_O>*+QRKSAB@+MRRJnI0ZA\KbRO-a.F5%LIr;\?P&BP2EIu)Z.<="$1[4+8!nVo7BRcb,A'<UUjqE9/%"\.]t3H\"L'c8XH11crsm0V"M:oR"=kj(Q)-i,;<UbX5&kUX1R2HS[;!m]rlSm=,i@=`>E!@qlY=Lcf.W)M"34]bmTdAZh7E3"sb%6X7,$7V=e?E]^ZTl6__CJWDhb#k90J$s8MoI&QrE0Qj[aP-[s2gB"NcJGaS*M4h8=NKm1F5<@Db8V'U'C'9,l)]`G1%n4f%m:_Lg%o`/q<E,K+0gCbh=I;fA';GTt_*bAJLQ)Tf/.l`9CSb*#U2-2*F\"VG>28gC.pV76Z^<&\iRfj#Y)iD4$3Webm'jPa1'Y@`H5ftOm%h5R^!<\[%"!sV,aQg&3W1Q,3[-$K8r,)O76+p'k3pK/sKEWR6h@&8[=F)*o01'UKO`ANL,.k>)fC_smP9am&B6W7jnQ/If,E>]^7%RJ\U0.=$:T.382//uA.%@*s,!p@A0iYUT$lb90]5$S.s`YC#j2k&tX0!=k,0STo_Jbc^K:N8K'ol^5\)NXZD+C/!Of':`GR#_K@"%Acfk`^dalmTKp&*j;>bN'gi$S]IY;)No)5Ip:Y2X6@_^A>M""LO%qR_GkD3i,<HMtASsM)6#9tXhJ&F[H31!A8]d:'VEFZW+cX(,%-X[a7C6\mgQ`3$1C;r+&C&pKocR1k:CFlk2VSX>+0etY'.bpu9^A[)6F_K<!i8L$.KVFCi;t[/TMeOqLS"PZ\7SU'3,NkXmEnUj1%@pscmr+Va2V!ql`?jchqH:2Zo\UL'mLB*fS!`Q-`f&U[4r/QUZ+;^7rbMf=H0Hut$H&At,>9Rrho9>3_]^Q5jX,:3CMNbcpUt=NO%EARDGQ.9SMiG:s>g?kGgD'_/1drm*X1#aN%_ZX@?eSHh0+Sl63.fmr7A6u&=00g3*^e)!.megR*2kA2GCX#"$b:%,"H'=Ff2'htc%].8=UY9q6q>mmb8"l^Ne\Au,`WfqK]K5rVUBY*g7<Sgm/nc9`,;<l,S6i&pBYj!LEjMZ\7!D]N48L?81O4$UlU?9l\<-5eR4FE$C%UB\"u4bN3^C*'69R8KU]T+^hH3E?jq_noi6X.S'naJPnZ&\(6RE7B!7CITKkKS6V._h%[@AVGg_1JNc[rglNQq8aF8CN$a8dlk;3%Rm\#RN5]u1'Y&cEP+D;i1:rb\0\61Mat*_K`CNRr9i,Y5,VQnS?lUP$<WY2r()*[.*9=#=m-q8YjiWrubTYV(1%SrXQ_Dlg;OsG6%OFXB`[E?P4iD);#<CXQFW&C5'`.NG@aiK!r8OfGY2?LkN!q"06o$lM,hO,dT_LQC\(cON#JWnu"!`^O,5mn-h<OGZLFi6:o$`[s#%@fk7:WiBVsTn2fl2&sXL21Fq52sMHYcI2b:DWe+'8++U'GPP>bF[pn<5#JRqZ*-"'0,_\_)7I^<C@%Yq(i@SfWI-DZ!.tg`H5(#`%Z24a"3sm11>BC%@Q.FMdfq9+$=kYCF-tM)n12mt%@-ESVFQ&5[6FOe>mW(94QsmZK_ul:93U>Y1ned;<,+O0)N&`fniK,-Ui5cG6%q\M)jM,n'pY%RhspPRI)"IKH/G:tg!3dbK?NZ<K\&7U]_0(pjHq(h>!/8Tpo.91,WQ4iD\R/1_!Pj1$?mS>F6EU;+QBtO^JS<X9m%c/s;d0%d8B"5JEq1'Jg<\aZ#!UhDLfMj\n#?Im0@D4LPo+ZjUGI\S+jZBi*+!0t7/Agf-SKk%7nIF6u6E6nm;]`8(:oE<U%:ec=6%(hl59X"^^.jgb,kONaDD>ld_]qaCVk^B33=!*(F3I0"RP/jj&LkrOYAM>Z[;E7Asu$8>a3h(G/sZ[7u`pnLkg3$qRWl`hB6Ib"hb%a^<QJrush.U<PYjDGN0nF?97u;;oifMPiC4,Ai2sgb8j."lVE\a5+G,6aUS@EE`9N3:CQNF9:h#'9'RHJ0hsK$q`D)Ep`ULhC/6,%W?fXT&#qS2'*K_@!/52]rpu]l=qJAeA;.W^/1%OXk&V`j^^4$eVRHRbg^s/2YoOuT6n=oNW?--`:@5WV3Fk`p&ZLQ?S/b_tE;aMO%G,.h+P"9<eH(g:AhAC]kq)^'j2?CD`9<!a]["C!#$L\P*]C>No3DB%.[es5W\dX:h$U;425F=(*=K;Af>'tqi5(YiZOIN148PkRM%oD!o>oGP]!'^F[-.="l$'NHs45X3Z(joGjsRtY]E0h\'>%_@"OB>9O]>n_8l*2dooq"H+3?(]rJ5J.*#O@:SLk.DV,1@0ms[4?IB%(cnUY7Z.E%F!Ni8QL^5FcJd']P\\3;%VGb7P?UJrH=3G84&IX/iLWD"#Yn3$Po;)P9V?B$bSn!CaU.2T*[!(<m;T&YN4NRO%BDsl%+i*;JcC6Dm3o$[Ma.iA0D!V.[Mdk<0bjs[-P0YXb,j1].n1)5m/3K6`^CY;*QlpbR^KLp/"lSV'+EGtJKXJnKpc7HN>gV>T>'c*8%oPiMjh$7aGYtT.JmMF^jS_&M5WF4:$+b+MmMnM:W:90s9Gt?%)aItDQD0W%XP<fW'oHBf74)48W:Nd5UUmX#*J>YXpcZ"cPI[j\\%S03)6<eL;M_Ic<FHRh9/[JS(5T+b.<5If2@AE=V+1FA(IHdYRk:VBI!$orbM6;1<uQlHof8$n\!,t%"XN?.d7P2sEj-Uts/I_T\m%3/1sq'p)F^JcTR?[G)!sjAG2o%9P,$H19>iY\/94g'I]TKj`P1!c4I4!SpM#NsKndX$A$<')l*YVs;q:9V!/i$ODNCHn$.f1@+K@%#4nff[P#^V>N>"Uf:RDC=<1ZEIVhbH5^JA_E,pMt#p_e4#T/[^.(PuIi:Zi(2JY4+M?&9!,Lrd<#nH\t63YnXAN+qQi2Z!]'_fqi%*Q7bZ\nKV,&YOdiI(-fB"DQ:LL";V@@RgK3+M.Ff:*9WQh0=\UC"[Xh0q<dNM_;a6k$nci]+qs>!fV$/oV;6u7V"'@6>XE?BMg\W%NjcA]Dc\k&e-g6=J7,k=%.9(Tafkg)-c?eML\m$GX54]JRAdkR!)IK.[R)$!fhPas/t(1?fsg)$[+mAsRanLDC"k(27714F@]Dj>%k#&04f:BQrbF><&"(D0r^t9t)ReV^oJK$f<iT(,7.72t3k`SWZibBh&4;X[^2Q/_D[io!tPW;++B^$ltP%UG)p`p:l;*!4p*utbh%6o4X?5_*'?kLg+*6[[S5_9&0.b3%s3J\;\$"6nNe@cg:X:k`u-1`uSRk8Bl:_th(c*KcNYF@^U+JDcdt^V$M6F7flZp\9kcoIg49%X@6PW:1..=41RWk`]uIfbe.;,TAqsD%(DF9&L\"G&[>!_/]5SY!P&ct18KjRW>EQD10>YXQ\d0IA]5XYr@5WFV@tY8=e'n91Y_"m%W;Q;qOfK(K29!D$*'-;k:+AldH5m)Hn`/QY"'oAf3KjilrtFnD]!XfO/J&9V'nO<iPg#+ZU:Qa%Zbp:GD)'T"'YMA,&Eg=UR80>'%hW&rh0S(h(Np@-ZICSSZ$9T\D33OsV2GA:H/"#T:%uEM:hKh:h_'LnuK6n]dNbWh8F_%<.FV5_)HCPVSe#V=W*EC+f'osm1EXZrV%-Ga\(O:<\t-#sSk'4>S)DY26T\oq$9]+%Y2KkorPCDjb4MLntXEJ<C&'BoK,DN@;1p'Hfu4A.R_OHP48F,9E3A?%QojsdMT(^g:X%Lm*oV<FtinfE?40Go(KX"`XUqXqH2U/\;3\MmbqdIoUNTBp*B55'Ke/0TWdF)-N+B\$QptS,9Q#c.5uK=V`i,.U!NQon]L,dY?C:%P7YPkRobh6Wfo;;1<49U@<\2EJ<Rbn2ka9f"K')-bT_[Veo[G1F$)*;,dD`Lk=,X#WjE6OXA0e(J=0:%F;6-il@mG$D$=Q:m'-+Z%!D\WFKK'OnPnetK&E5>,"Kl>X\H=hY>0em[&?I=NK(Ea/ia[[#UL$Uj<"-G!P@F)d_9.EKRaEKJN>I3>fSN>\dSj/hYR.W$BVHfK%!SjhKa>.@+2S77jkqL(.m7DDOKBkipd[5F$:TPL&^o(QVFSdGT+NYW)B3&ln:_O'iFsh>=3-(lZ9P0pTFVM(BAD5<=gkTUK*L(ak%R0l1#P7]-5TVWAM@.t.3Na.=h0Ld]LBP4InfN$9"L$gf)2KmL\*L)8^H;JHY@u+K!-W&"mNQhRc@SPn[bla-b8=/4H5bbm(.2.qh%8)1A[Z`8lT]J^><iG*[k(+6a&bO*ME']tkmq&FEc<2d>#IcTS\-[F"E,4:/:ocS*o#`p1-ToP"@ql,NJS_XsCS*LLMjF2mi3)=3/%f01((,%5f13JATdi^^Z%U'ubA]3E:L.1H\iLiu)GJdFTrLtmLK\L1!<0@3Ku=]X_$%&l3,FNte'Ujg65("Mb&RDICP42rm)"<MPg%Wb:U23]!*[<['LkYQ3Le`fm67;RubS5aiW5ApK3DjO%(0[C812Q)j%JIlHfdb/6Q9TNarg5mIj*ZEhM`7=iliOeP,%Klra4fC*3X%=(_.50R_1I[bV6GMi;Bn+%CcRH?^L9J7Bb[.S"JrfKBPa+s:*5lDjicVY`u)Ea+p"qCN8mK*Sb_?15<C9==OWCF7bRFR;%F$\HQV%E1rE^Pk?[qcPeD#XqfEER6:306%1!0M-"utbC1)VO\*'[.m&orqWd!^cE2=7fMcZX2dJk&ePl<sR?uNNZ(5.Ud]01/l3FYK5S(Uh%"Um7]FGPtNg,-iTJ]#1tT]PLPpg@CDeRms(Idj3="GL>O.o*%BB.ZjifQ(eRmY?C"19"XE"lPXSLXNLOV$sVj3$?qO_BQ;T9f\Na%gHAWERk(*%VBt&k'j#cca&WK4g-"`Vbo-D;rA&5`>D\1;Q^3FUT-.r&LI<4]clq<Q&s=bc'TA#14D=j6eXqG5%/tJi]nI_-pS&@r%7:nc!/W^"2HK/R;OinPrSOHM5456gg7Eg>5E1m9Lfa[-WQRX/J8A&-#UB$]-gauUf1Pq':_QE1^IQi>Ds.*TT8T,6(]fXh+nj&(Q%\%Dp75XN&((a@dEM@iW5R"+P3"*ar@HV\%?]Yj>`4*/":3%f*(;GNi&1i!fJDk2?lSWqgq?*-Qp^*U?-P*Lb-n=4g,+^G,?S10jU%UUL&m/r50S)65;&1gnq>jATZW;N"82VG>'meI(,^!];j`YQ`)E"O^]GG.BVaAi&+B8EVaNs$@05OpHW-0`c]T3=$;"INYS0VHXc!%?G^dVT:b\3%mNDNa*Y`1B(,pumR>\Hb]@-/X?%QpOGXt&G/d)Kq'ojhO,%L9\m^&9=XY#VJ[-JqU'r$4]13W3[g7abOK%&N3KANh%A4l:kb;t^5r]T@=^gVe&OQEg&_Iu7WV?n*dp"1hX7,iWKY*&U\,]Ut7'*g%Q&k\Zgd+ln"/LB]di&(Z^.O(":Vr*n@,J_[=C:_m]%1Vp-E5\$l"9\F?sV'>1qc^)q&ZVOE][m_KeaSD'oIotE(aN:!9c#OqCJon:<-N>gE`3YA7Qn)\K='C\T/o6,28!WY/EOd&O>A76p%$D`BKKj-H$'P?J+Oj"QESnqO^Z;q);c3Z[U/BcP3"cMlT5UYc0"fkU$F"t1YRReGLUlsnHl3*=B:E\ajZfF"HL;E8OhV#].$bKj'%km!5%<7UA9dnm)\W811JWQVH',gZB#n8aD[TLL76DUiIp3.RE3QcJXW>>)r8(*uQ3WZRhS%c>2bok3@t4AtbHWMUfS6.4QsgR+B[%^dW<C`T"TW,43B->Yg5.0+iqC0b%4'RtbYDpC^nX#<BGf19%U*qBcnIc-qTHAV*q4Us>PJT9gu?NGb6E%Z2!9R_W/Y6VYG]8-d7p%E+pq9M8jj^"=ZI#nSJLHBnT4MiSYKMS-sRQX;s<2MWFLDq;")Mk6a=m?LMcRD`0o`Ec[ZcZ>m8r^dp884UC]FX\-*<^<N01$ctIT%#]Ks..2]A_5k#2#9;E?kV<(R`)p!ICWYNq6"Sm/)VW87qQ#,*'dfj\Ejn]OT*;Sd]Sj8C],Eu:&QGb#,BGF&HZqf#=OkJ1/?K59d%.AOu[g):k6cCXl>R1$1U^a[VO6@k_XMh3flJR@U"!J)d\ScpL\2c`)<B;EQ)&'+G8j5t[1dmq]T!;gaiq8\Z1Ct?b)6WQF-Cg8u@%2!)()VGM,cK6!@,Dilq@\]eB7(7!r0hc"KWD_C\Fmp3OLT9QVKqdI';*iFruC2K\;po<u%WAgBrQRu3?J9cBEabWS(-W_31q2qU]%3W"@pD`p3?Xgn[8jpZ]lSgtr+SCbXjK2\2,H<6k\&(DPZ]&HoCHd@.WL-6:8.=U*\\Ti?b.!qJ_g?Qs61hfh#2`mMJQ'oGHY5"<K%g,j%/?_eL:dlD`'hnZt%G/9*e%i@p>B*eo<BMtqo0cH4)Tr$c?(*jWnV*er7Tje`Oe!*+8S!W8[\W(`-@Xq2EK@Y[?l3VD5;mh(7%`Ypus@XsgjTL^[haYQp:K.+F6Jrcp&l).9)ZqSFAoQ8)J3g`<BaSJkIV7g#:pFF-D:IT<%gh/$Ugjj5eGO<c85!2?`]9T>.>eL2K%d"\]c3C9=O/)[8qd'+24HK7.t9akf5H;PpE-4&%?L1?@-,\'KEC&j<GA4W"OXf\eapJ)Yq'D8RZf:EquD)IoB!f(!<d]^^!PN]ll%8kc.HbLJq_`AH#u1_"ukq2O</.dc$H7rI06^s+[$qr,KK4:bRMLoHUGj_!-3+e+AQ>FnOkfCefXCE7UTEuj?/dZ\a69`+=racQ+l%BNJ+Dc:+&o=<eWC"BEcqO.Il4g[LPK@I`h]B"ZRL<ECOjZcU0FegTYYn@OG^gF7]OG./g2HJE-*.SI\t0+4G.Yb*\XML1Cq&Y6C*%RFVb^.s0pA:tJ:CD5gn7HkQtdl0LQi\d>T%1L:&n?<Lp5MU8\`7r597<=iP0R2:O).]0@W>Z\a6L'#m$,DHe-Hm+Jl&SN7b0NV"'%XYY0%2A>KVn0G&C]:Zmi>d`fDKr(o90^.l7Z*rBPFOR5m=<p!FD-h>Z$/2Mt?&5(/35LMsBLU&O^maSe;^f0_n=1SV,ZX5Y;1Pj8%g+1E(,+TWt9cLd/Zb+X?J]nPdY.$u0O29&.-$,R*RrA\&2o^.'MT8&OO9R@hU#0NH-UJ1^Sa/b^2X^bRc<HF1,]-a8GpjRb$#hp&%$:Bd+@>5AN`hNs6*=.l;nF.]oDPj4(E4@2A(NKsrn,daL1?l&El7SGR=[!g@2>[Gb^".-]UbikPM8CH8)*.@/C6k-%^m.kl'hPR(%X!1l0.j&!iRR_^>4!Viu4_%^8n']UDj;=P<fo8_@!6fQFm[gWh>X\[,W+/>%#Ho`p9f[nuop#Q*74m1AHuAL$0:c=7'e8FsE9O!6%X4Y"iaAiQ";`57_(a3#m`$P->d_QuN?tQV9S=qSkFj$MK5g@\6b^(Ig[,USnK[PG+jL2;S-KEN#:9)TO^S5&Mlt<X35p^^-GfT'2%kdDs9:c`.rh<`j',i[*'s1`-SH"DSpSG+Q[1(O)0aXgMSp\rQSF/Rc4[-5.QqmDj'AUPcL`==(_'6reH0Gp(:r\:"$h-csARUC,k%@lPp(;ca<K<#>jI3G?WhDZ,fZ(]q$kK\IR_9sfNk@\#CX.7QM*P]EWg8im*XbH(.+81t!^0%;s0kcU'mKP_CpPD>5kf1kg?N]Ut(%QQZSh0S(UN(k]:pOSAl240`qKJoo$%HnSSK;o#$\R9jDLi8h^/BcZmKE.o$XN#i)p8nDC0;pRiCUCt6Zfi((U<]';E'r+Z/0nOl)%4.u$6lISVeP"[QkHIL#1H-NsJiFmJ\3d\mQOC[5(9A-@Y%ZV8^lDpXk8?FJoOYmb<:l8Xdgl0AeI'4pNaI4FV*kY;&L2+=RCj8@q%hgl*Y-%6#BPm1>JU;@6RB&*LlQB&kJ+*-ZZ/6`XS0`RS`:ad@<#d*s;_M#gsqmNj!RHK3.mf^_Sm`m]kTeHF_5K-%f.e=W-e"SdJ%-GcR`$?ncGgEmD+:QpemKBWj5=74VPM;>h:2X04/"'!WB\kLF\Q3&\P?SpO"5/qIVS`#t8qQc0EiZ[hi0t4**ml!!bnSY(K74SVr%MEm^L:=MC$[D`GQW>'OQQ/m\]&V*XDp2oSor@j==OKBs#i'"\E1M?YfN+Gb/B,b(V:(cT-GS;#O1,+g)`.h7/,@u>.%tfh3[Qrka%O'M'MW[@$?4oq.[Fn^/P>CoO;GRV2]'<&nPp;ISo1coY^hY`>\h$AC>Yc$LA^RD-50TU0DG6i0=iP(s.$9Qp#_\UZS_Xh;=Tr(RX%k+gURR+:dTi;">f'R*]*DaXFte8'?6fi&stHi71f0([[G=eFDV1\!#u,$YI08p05LMtO<TcEL>CA3KQY%hfua`m08YG4cq3TBM)6%#2'.1_bP!WdqPo5eoAil]e3"&eUMj#Spp7ZVgnU$k<E\Dm(`GoMjqH65H:8t^1jJcSpp[ZI8B7@KPafXV!UFf$1G&V@-P%uLAn_b%p(lj*]^4fm?Ys)B1tS=c;dS%:a&sbcro6_C9+>oIdaOiH$oaqT3o:roNc"<(@:G"\Ll$;VAS;C324pV1W&XDUhC2gSOs*u#XN_g+%W\?Jn4De,@cfSk3i2QKT=c1qfg@-OWJPn/'JgfH^*SnNW-c:<:@pNGRZ#5.!LeGWF<Aq7-*+FG>\XIVX5Y9LP#?/Q=*b@Q>R/!)G%C1sdP!E)iHJn][@o-`BLm%O>]]3lf=-\5c=*<N#QCS'hTFsI]FRHj3%*4EkG$lhtrQ,'!f)t[X=:eC";lNhleEsi2X/YJ=*W"[pA%8GFWLpFb-eLWV6VnnqbgTs6&GK09/I-\^AQ:Iddof/H*a*^\1:Bdl5(H@/ea`V(V./oc]qRG8Q(Wh;6);l:.T?[VYp+F`L.WqtCX%&QQiLW],k+(h%rlkF;iu!'qNR#S+M"O\B`gYsgDoCo?-s8HL0QIn**d$"I@ECB]l5?prN71t9bNEXR*Sb3e&VlNu>3>W]M(DNB_=%HHSD<pY]o(chhR$KARf+Vfb<MJciZW$fQQ?lY*k.`p"$boeXI\bLAT*6"6<gLIX$9#.Thp83lKE'7oU[@p:Ia]<TqZ;7l;4O/qY/%79M>&j:^q>f4d[<3ru+p7oJ<qK;78+)":)W(^.Rj/HSgG@i&QE)]N9SMZAQaHb(nA)-JN5)ICC'U;;QKlWKE&VF$?1S'm$B'Nb$>%Z*(q:_E>D7]8O24ZM0^_rl4j7[oBc3^IPZBU[-_>f\u92Y.(<L3Pasc/pcDqN%Ju$nY%NR5LCe@MX_P3E;%`(>@K6CJ)Xp"\jY<=%[_8-ACV7@MpT3>>?Qads:;,"\A>\(iiZF%9(92m6(nu)o87$N3DJ0PBG\A@Gj=&MSrb%OVLm8$d7i8//U*3o\FXD(=nDt?m]^gV8%b#g4T`*:e1?I.@Zr%r0TM7-A:ZiT<2:E,4)m24fCigCpa/]$fiqe0J(NbQ6)&]jf*ds`Q!j66tJgi:_2FXfRPd9?R,if[U-GAhAu%1GNig,3*uXN^Glchcp6Ir,[*+i9Ak2KC"R,'XYId3G.u-[\]ZhKENf?c5UQg:9_dn$Jnm94i6jSRX/`]+s4AFR(9#O.FWTMiA`,X%S^,`.8k"R"D_=FQQYdoGH;KYKhW57)TBWr)>L)_gMekE!Q8dW@Z!5e&gAdHaG-pjkbdJe--/K[A*oVEl.[L7M5LqX2hQk-Q'AYCu%]u3!rjZ:p2$Ke-3>45*BS?Kn@m5J+F@&Z)OD;:__Hq:sK[s&PsF=Of5/9)!?llR/3XJrI,RkMo7-sAREQ[C:l%JET;rt]Q&B6cMS%,=tGSa`0&AB2G.:CH@g(SM.6cp<IOn>'i6#mQ#nAlfGK;+g:;OcLkS]E4.mq!P@*+`[q_7kI1+9G\qq''jLN[6u+lqgf!VOIueQ^%4dG=>?4V2cQRsTBZ2BT#GT^-:A^ZDW:6?X?3cm'`ko4s3k>,.],7TF/5ob&eJ)NB'l"])0UXhJCX<>No"E[O7!"Wj;rZ-3hklgGP%(gtu7[-!r\,O+X'G!]PC^K2K?h.cC.8NoT^9U=2-NhbaKE(.*jm'a*qAYdM&H_3&8L7sOaFSb+[ICWbfb8Mt1_6BE))A8sWn9dC`%:PiZf&*%t87Z5&Ykn:[m6/Q>@3'`eDf&;2*?m-S[/^0oYA=3uZ4VPegM<CpQQ4J7RmISXM]A<B>'&&)j1E<N[+otS%b]?-(:1=MN%IG*'K%YG:sI:hLE;@.590XT4[#FedVh:n.D(/B&--d%?qN$u?1f3aihh1V7PnT>.mCD&SXKnAONAh=2LjqcBe^:USXk?:PehOa%?%o$$"K%@r)Y2H2*U<8o^A7+PItfApc'@./X2QFST+FHsmUplOn["TBg#BjB^?f8JU(=jrt#D&M2r2;U.:>?nZ1n>A`F>9p&mAC?4-%"%S>[O]J",UH3uJSX#PWdek[sm1B$ufi%fGrEUFcH]`?2l:kshalrAp$dd]]7sc)Y><Q%_G?5@Ode?hIB_NsAM.uLQ65/W0U1FZM%F%3qgB<PJ?d+.hnqX)pLp9&9O($-ARM6jt4KqTB4cEB#V0W<%uk=+rq'9t[ZLASF]:plo0;(!i?'=4SUU65`^8JN:M6^IXeZmhCQ%B51Oj+LI<$L_bEo/,5B)C>h0J7\Ou8W&^>Q!L;-[:U-7&N;?"hP,(!Z002UF<^PgJF.^`hCgM_>>Xj6Mdn)IX^fs!D*\0+TL6fF#%c0IY[Ai(;L>Q^(5C#KlHmZ1b"=P"e25P]YH=@'5ejDl3uHk6bC7S^EIem47%Q6sbbFR:!W]12V!_7rG$>I)rri0@=b.-3Cs<)o+5%)[07p1fO:K>loDqPF58I)l'u2Ag/JV_;iUNQX+c%P0B3++l?i#XF!k.=;SZ+p8Q,WpPQa"%R",?_BrT=!VTH?d>96QepfX6bN\5B%_h[OFFgnQ@bKAXYEVKOk];)@l,]l5fk'i]*f$Di;cNUCuD)$!jX62PI/f$@)j!c%SrlX$kN_VISJXVLCZDDQ$*,)uM%-b4u)dE-E%@ptGNh3KcZ@\Pr=]4K5g2LacUMmg'I]I!C0p"52gK:W3?6srYgkusdk_`*N-T_4u?8"_BpUKi]2]SjW<gaPSm,p@KC*))'rc20bA%r4Dk<,R^.u8Q*4anDi(46hmU&kHNbs+:klf8Coej1%Jsid?S#nTD.I\a]<+uHT[uFqiO!I.p$kF;NfW_X*H&-N"qkMq,jhEhW91,%G+CDJn/N#jJ@WiMBqNO1OU_gc2P(Krh6:R*4[jP'FKI(,I)<P+ABCneOo(*+D=5XrnoQL+\>@j6C*2hZK7V(Q\n:SNF+8@Y6BBr-%\?YY<Q#49f(Ki\?IG#-r&B\')aIAGJ_O-<n-h+480'Y(4bJb`t"nY'+3)t&]&._(\2(GM/&k\.)h@=JD.E*Ygl/]1?FJ,juC*a@d%ZTj'ee(L@u10jBJ[*raU-G0iHI=*'IV5Ap(35KIn9s!EPe+LF:XiIaEZA8<FWO:MEB(f?^@XNAVpLe_tYig,&D4]99,AWpa[EnHu%AVBI!O_t^'Pe+4pEk3Sch&l!O@^i_LVkOX>IJIKucl$-!1B4JDGT]nmib'd?mR>js3M,J[Hb[%[@*^[<r+4'.G5'qRS_;i%lV5#.%F(YNfQ'?W`\rjc-<N3jss'_qs`+5Vt+iST-pD/J`0,_S9`6Yp.e'J&X8]$`GaI?$F]@45hO8@&dT;`!a!0$P]8XVq%8k@P!mMRRP%CEj<$bH8*,TU_8/\>om*DsiM'kY-Z)jA%2a[AfOMci=YS#.g>[Lg.SlG8ACKiX(<C+YNaVNHLV/j?E6=W*D3(Ib7R*\!aZPnC`Yk%DDHf$(@dgd:pB@fB?U:3n-:GSoFJ/TD_c/[HafNuU=OVEf][GZi^g=-SXHme:[8u'b._njO_N8RHbl#V(R4>?>@J-3\S?J96rM5A%pTK:V#G?;V:_)(Q3p9eS9GpDiTVeZqj9KHrGZd(3UT_enNEbCH9=G.IP7Vs?T4Qb<Quc`B+,n>]j!RoU5?-?Sp2CWO"oX04X0>DI%=R/\0"IIg+$,s*'()lkr:=C8"ct&<Z,S./8K,V0#L#,9'<lSW08rX+sV'1r_^=A"2a"H/MCoE'*S#!V7N-fs@F?#H8(miZKOMOIS%]V=_ceo[_u@Wk+14.<dCkOY/p_F_/e_qCX@Ad=B?]>r)X$Eo7k=abY&hd)?"A_Jr(72b99:D"Q1P4'j9JP'<"m*odR1?aYdre?*)%$sLTN06.DW?N@OK;jruh')-tr6;,ip/0I#k!dKLRdobT#(g@ds0:G%:93k-b%^h5[:Y4W[KF>X<)nad<k?WG<=*/eW0,OZabnfJ1%mcJo*-b7pKUCI5_Idlbq+S!qYkRgJ4VmF(Ipu)M;"?)pdqe&00+Xc5tD8]u#Zs*(*Q1/eYX<Wa&m=1e.3/NWeOtd9bK5';1]Pd=f%:7+&<j.-Ht-,,p@q6Yk!Fs"'/b7/H"F1k<&H[!#qcYp5tH[52hjDKudZ\M'Jh.,RgM>*r3VZcE@s,Kh?=N[3a#4IdqQq,:mo^9CU%UG_<\ai%d33[@<1BXtHLIJ.!G-^m%C`SHX(apJffe!GlT'G#ECRl=U0pI4]1l[#0Fo:ucM^[ASD)F*&-DSNF!-E_]"H"$S#[CLY9%jZYn&\aCN$Qh"2'!920Do?:-=g)iC1b'id7\2omb!^/8t:WNV4%NF??:1I?1"M$niSl$1p>.@'r]$['J@F8dFqG!:@c,l-\"R^L2%r%L"n6FF!YC_87g0<I)Hn&TNQIbmXtb86'%Niq+Jn6XcHhHX+Yr#efJ]^t$k^/i'$N*](8VffCG[i73ofHeC^Q-"C0,;Y1OGWTn-%-rI'Rqg#r6QVV2Egl\>oW85bC^4]FhZh)pKR+-Le064F;pZ;p7YB7f:GL,M`Dlu5\5G7oZ[q'iXmPb"$/1Vce]ZUo7giTt(:GFmb%:A'aZF#6[>.MTlS?/ft'^M3+,22+T5$j8ui$9T/'&?c9"(*DQM4jr.q"=+n!UC;H!Zsfs144H0AU2tur^`"cbE\coUR0k>=rs"2L%'WeP:NE8CTM*"RZ'.PU#ML>s`qUs_9E:@[^"-nSdGb)mt@g53d.Co4oA=l\NmucORfGApP0mc%e*mU=3M2-.l7W#h>4,;#Hi@O09%hMlSrq-6'KH=loCT[W`)-t,J"%n'`Jh+,BP$)eSGJ$NPuA6@Q$G;k7Y\$0Qm&YUof?N"RgnSDq":'J]%rO,C*PhX\4PGpA+kY37P%e:&<]1jc_'T"7$IiCo(YET;dgII*B9SR%lVJc_Q_"Mlrc,PMR&e"p'6\[2bbn8,7X:V=\NYR427f<tqS:i3sVlkQ+J""<X;G.`,L%3t@GB69I4`ER:\^Ugqe36ekecZ4s)`#[7$\59+%3ED,W9,9-6G-37t""c,WldelMFROVLrQ_L$?,-^/l#c2l@/',hBZEg8kgPrA:%B@tJ7oHgP^fGE2d.4K3`)0RRq&c:9;\joG6b<WP<p;3-!h"k(I\5MpamN:5Hh0n#6]\P/Nf?jPVjLlPOUGLYqn!4S=6t<$7&][QK%\r,pXOFO&;m$*8I9ha,_luMu0h`Tu&><]].'p%"iQ2t9Z'sHNNXlTGm>i>!DJ&E)1*+[6.2LOad!2G.-c8eA%i.Y;C%3ah"!^k\T%;NjK;A<I(X@K951T&bFQ.T6CuRON(\5so^,M#qsB=$Sif=[Q]U%M%VJ77TFO-NlY,$2!=[M!,Ru4:2!q9#A8*J;Da]4]ZO$ZhM!n%P%[^k6F""Z=;<ZZ5,Y@S_bHH>;V6!c%cO$Veh6JM*mQVY[uK*I,CCR-]0.q\r*@Tl9*r4)4PK9G2%S*E#nl[CM7_-p,HkZ(a4<4p%Uus\3-)AN(/+\OueYPaed2B;!J'&%+Y8$/-cg;P`RJ7FtqZ&5-=ih`3CenI89'J.9D+u`2S@9EZ[6cgYVN)A!_Cu'k,4T?4GD[Bs%Un4Y9A+8)":[uNeiJphf/Y-b$'mIjEEDfSB2t7L\mfOoQ-D97iqKgm'7BMrUVeB<Fm'5I@ZA8>PlY4*qbWN]#(?+#3\X]B7mNjL/%_nCeD\$=e,=EkcNhT)'DERNUJ>qslXo^rir]g#^Dp-+"R,**`fm>12RgN^b5%aRU&Ch:[fhE8R+hS#77O0@gA5&[V'Q:l&iac;T-%Oo>92>V=L=*.rLJ]45JN\.b;m!IN,.q>R(MHf2:QA@S#HebjR#F5i+V1&bDpHW>:95*kJ+o^_[;&e5JtLjGH]/j0CW>T;&F>CqtO%dEo7qN`:E.TeA]EY8N5edRQ70"g,A\A-uBL$_B;?J1g_&pYt/J_d[gh`9[dK!E\p;jYO^S)f]iFUp#!b%Wku-O0Q0',j&.s7%IQg%]_!WfS"8ip*PrmHEfuBY&#77cb#?j0rQ0;_=b=ukY#*9b"k:a]23P@O`ZnE6JUm#^.>Efed,HDtl/2c:qgp0LP4nrPrkaH_RIQlU%=MN\NZlp9sj/$9]@0bYX#LT=ef_[\dme1';6<e:G^"<OFQXb!<jB)K52St'2dC_3^0I#j;Q(GgZm-QEBT[R&j,A"a*UK%TK!lPpB%6g(bddC28NUs!e\(X,DSFN\mLjkEeu;n1`QA*:o2aV$=4,1r(%*GI6fisoFl\.*<tSAP47*pn*.PR@Q'X?1M;Y8a4l;>9`)4S#+?%$>t$pV3/;;,`N]2"1Ga3mTB:J<qSF+hs`_2r^n_h,NMI!>8"T3lgo;-0+YJSMCNW)d/$Y>D(HR*dZ#!NoBLWE.^#-lP9WjVW!!sK%GM=_+5l#$()'3L=bpkEH_SY.JQ)&tO=ma+ogk,^@9].oef8jd8FkHh;EUM,=o3P!s9/H=CI2%h`hAdUi'pe^eiQ&LCFO1gd"W*g*%*L>A1036%:?Ig3o\aP58ko7`lOb%L5dIm!0BCap@PqarJ<T"f\QfUDkh-FW;IIlr<gLX[!^n';D,'S2Rg+@;O0#I4'Yn&LT7,7;Z%:XWlrf[,M:8sFCPOll2T7^lnt^[C]jj@,r*1_FY;A&\BI`Ce"\h>0AND[nD-H,WmePi-lea8KIS*eq<\'6sMrojc7nH+U-^flOX/%I_T=ZXS\3M:<QkA^Q@7BI_@C!-KsisYT*f&A@kuG4[&(OYT(N,]o@HdV:QbL^ZSP;h">0LLi$Lri5.CE/*@.Or2jeJBRGI$l7Z/p%m&O9MrA,m?8bS``T(bm+J8FJtVMeOG'ps7nII_N_@Uem7n\LRS1mSF/H:Wn%-:^W6W[m(thksY3#1kD7;`LiN7]c=O"CU>A(O\Hh%,V;PM7]MJ&Di(0+n7giP=g'^df.'7`Vq3QbXl1M(<X-7BOa*3gel6i.k^6Q$URgZKZqdasMnMX[)&gkk0r#9:n_K'aKKjWY?M<mb%k2CJ*+m'Ps`9j*i`s/hrqsS8KmZ#@bg7L=6]i_[If,`"@hE3ol:EJS#f)qE`<+g1Nl!#:+b\mGT+#hP;2;[tehu_7Onf7*(n?m%S%:E=Gg"(;_OX*:If[snO,o\l"MbCg6IX0-9&.&j*B5dsk8TB1'GTWVbOR?0rd>;WgH$Gc#C06ki6?95<VN#I0iS"=qC!-RjCD?q5e%j#d*$8!G<c6E5eQ/e56j_ZH0U^^6VG+++N'U/H@Mrd"t`NN*Z+j<<a$Sq[OVD'_Bj,3GsX>u-#[k/Si=:O[L@U!UW[lDc%>Y?3<V%-V8.\N4-i?%D$qZNt?8c/2EGOr^Rr7=lksI530Ht?@Ca#,Ge/J`$Kbq(N^I&8P&,8<+ErraKG4?J'I0!'"P8/qI14lKeh^I.oh1e%$Tcr1AaY?GD9k7Wa3^S:^'\Dm,93YW^(SXOJ*H!2_\@B#jNKF%5??k097o,<mQg;[=[YgY`UIR/A:S*I*>5-[EAsIQ+^+50m[*s"%4PPMD*;Z"o\n5.T5<+QkCh^f'2SAGY?ek5!/[p.Uc`]H>b<<:eZdG<hg=P#iVTE>0ra)NT<M!H2D!'j,IL/-dbicba1?Yf<W/QU"%\op'L9tVNV^EVd1:US<fA!!MG8a:ENY;[@qijBp)k"`Q9J%k[<*L0PSBQrimeAC/@Xj:!V0*<8WJ^t$rafspKc1L'\E;C%IDn>bV%TM:X\s#e2o=,]Ah!Pc4E?h]=Fch7!QRtX#^`7<'0cl[_CY_Oj^*pn(mMhd,c_H_p=%djmt0CVriq0f>W/J0[;q]M`\-N_bq(Sb$f%fCN(U:)"<`V/M0K5hU&X]9K7U.:>K0Mfb`icuctmJrrZffdQ,tBRC0UDSm"@95SofH-cfq?ME<&VFOlsh%+nmBqq,'&]SNDa;p'f%."QL/k&n:>54Nj-m*)ii0SV.e\`YlsHbt&Ro*Lq*:?TGb4ui3EI9^HB$bPFnA3q5![cM`QmeC-giu[5TNVg/s4m\*]q=O!H!S`7g%mFBA6$%+`66TEAjqu1d**djEn9&-hcrCN;GT*]O(lI6WIRc+-rk8@sa='hk+PO!>6i_%e/n^!<$p(4]_lbe26&,o,04sdB.YgNk!%o&Hs7$->4IfdC9Mh-%$ipdm?$=)4]EqjHurKarC/;L#9e74q&oOr'M]cCI+sGOW/e5=5n,oLN!VeM6W'5P*U*4aJ`7=/GIJ#c=dS%Qu@2,IO,^l$;B];f[^mIOfS7c5;>)G:/LVmOqcP0V'LJ1/d+Q(/M63sUAUUsJ_mLkV$!dMGsD4.?(?6=[28#?a/j)WQ+>Xa'*krh%(9HC(qtV"Prjc8OmoaX[F/3:2O@`nAGli#Q#<dfl7;k,K,WDckSj5m=1fu^2?(4OdD<#[Z)6[@AB^qF;Mt#ND?7/S+E"%,36SmdM%:itdY<-fjm96C;>,LX.tS2'lBM"JeLZ:`Rb?'P1]hLT"?/k%_7f3lSP)4PN:\rq*Q!,R31YIjL=UT;%9j.:=;Dc=L$lt+;q>b::6%MAn>I,;DO\]!SI:Y@L!PGFR>(c6A-&<Jc=s+AYKP!#-u/W>ek=@Hfi#T$pYXDdEl:c_fF:p_'/d']bNT>uj]oh:2]f[UBNJMLrPK%Ph'W<4Y6"T^n_l'IBq-[baZGAS`VS"0T)<9%5llYjJH.%;GCc-kjdls[dPo$En^n\?A9f7W`&+HJb"1;4!84+1YZbSDaNEsd_&5h%ck%[5Y>lQU+ghdGe#ig"#e/pa,>P>0*G=8Ja`\u,OHK4>G8L<pV!2jH>FFK-8W+O_lR#O![mI++>bXsP6%-:*8$\>WnoX[h9[La-%Bk07;UTa3l;p2>j9W=/SdT;Zfj#)2KRAT]C"L2O8;2h1_(7UfF;JIF*f[q.HP]eiGWbip"c5pl6l^^_4AX42_^;Bu6K+:]K%q9t:%i4/kKeRIIXZoG>$D.Ya3$s4#$+`e*c8=N\E!-H1RXHmOH[Cu5nG4<WC3!Kla8=^E9P?80h!nQjOZ[OIa:?mbpb1]b!IYR<i$HlYj%\coej.k.8rmHJc9$P(CpT%s,tmFaV51-YMGUrbFGllf4i-"?>ShX*&S3EGuhcHH4ifRq2<CkWn=TU7*E!IoV70aSoE2QkU"r,E[>%heT[g%mY+ab5;V[@uVnE(Nu;%_n;EC=!6H<]j5)X1rH3Gc(KhCmB=H]jB-r/ik+cLa=aa'$(E_BT;Nd(M`!RXW>uJ>?.hP8$4LMg%kh%HFZ7^ncG/(MmSg3!(=giosqU<),rG=M(`gD=qq("U`+2If^'Bqn[oga/$qgDMMP,#Q!C^J5Sj!JZ5"X:D<qnl]g>Q?(G8rl[Z%(3dPN9&5rS9sF6j&+#70`[>ed.iqXS`hFe6gS^96'0<3iE3P91!>\VNVHB.]WAa!O``;]Ba`iBp[<\S\C7/K*V2c!Y(7k(hQ`jZn%VV]3=Dfcth@,g:P"e^^1/RXI4@(W81n;7;:OkAmY8gme=gs#TRTk^ZJ#Om6%#YA;V_Tbmc)hi%Vm4@8b5a+cNqH@JT=qA,OPa@0T%(F1d.0X_do-]Qhl,#luUrak`uN$tOYQEd,#;,oPUKJN5(C0h5`ML69s(8`Z4__E^"kgemNm'T,n\KZQkR1_``"!D0u1bm3JXX#;-%;RQV7MJ2*mHDW#e@^8L;F_NAD=4kfl*e`2$aI!)5f2o&F\Lb\IeC9iP*\>^-WX?m?@WQ1FW&7S]mGi.MRuF^Q&5h[1>o7h87(.'-%Q9o_bUgo<O`3qW*El-mB7F@]qRJMf2cto6[T#rUN(:jMoBC&Y`':K(G-8:i&ndZ<Qe\H5h7NnN$!Y*$KQ3%a2[;AWc,BR1G`/M/3%Ar&*6EN;8>3LsSnjrB1>DqUO\D"`38kB-l^7GrgnV"I2(`"f`e+D)l@:%)VIQ>W(`d<&o=;4@u[KluJbBoo_,^(W+4K-"l5eDqrj%)e03%5p?aQS)C=ant*C;N@%Kh2k<2T8MBAc&[?'e;VrZP<\^f?@G$`Uf8ZgWH"o&)pX8&):$fEA$Jli:Laau_m#$?5YoHk2,2]3*%D15+Ja5r9AeTtJna[F',d\5rJp]7I).OH/DCo3q#nt#ea:I#pN:G<bnF[opRH(!O7:2Hf,?eO)BmZKDH910PeNt11<CWLDF2!uH)%L%rT#oH9r72gB4oA1Q6s@*(rT`H:p$FYs=p,?7pnX^b9aH*9DRerM,^IPf#LHj$0@QrKSRX."+6-Hg`KmA6<gAb_]U:Pf8'_oQX;%Z'lX%#I+/@`X#P&HuXJ$m!rSBbgm]4$ftD(M`FpQ^YS/2b%+-*S[H2>_7/"leumn6l[Q<@ia9G!qX`>5?Ta$]j,ic%O?_/H0q"qq%MeSPNF3_8ZYbHu2:!j(*R4RjN%9Oj%;XaX+1W]agBp,[)arBN^ZpBQ]6l%VUg/T"kE"L`%E,!1X'ptm*AO,QVTtj%<_%\kL="gXL%+MQj:*[HSf/$)FH6UB:W<aeokB`O#6D*P5t@$H7#)#&VbVtIh?%#J=@YXos@JQ_m6m.R:DE5bP;mTqm\P=l[?<3Shq%'1GtJ3&Me%P9E5"_O;3?_Q`^QAGuX_(6RD[XAc2<0TX"0EAiSann"FYYU.)`:[Zl**E,_VOKc@I@p>-;Bk1iTTh6FbiuFPVrX,7f9@kJq<'mD]%7QZE@geiXF]6OtAIp9aALXo/BT>2fN*WXc'Lm`(YWcV'N(Y=a8e`%.5U^.0``328e?D\E3B0R2SFA/\Cd"!#Behu!&<6cpNTl"Pu%)-FX5Mf%f+PJb[2OHmB.8[A;/Ma:67Y_ETIL?M3S$J*:WJlS"^!Ed6Y#&]2?9ZG4$:nW-4%63UM(iYA*"A/snC6O6j3C*H20U9m`%Tj6-f7O?Cf'I!cU\@tZfl[$S>djUTl2NZR"#ndoM2Qu*@e_<-(Wd@k!"IE/a%8Cm9?3&R;4U'0lD4"et(`9<WC?bP97JR)2+%2`$%hjU"lCq]riW_jW;-I?Qf=f/D=1NoT9d?+i",SZ;89m]3WC/JJ4PE:sD[')365O?`cR>amJg@IX^<r9'c^"3p"m5f9>%W#/2n+=JB%UYbPJ:1R=FhC4!a=Gh%*<5%DqFDQ0E)$8;bcoP2]`;P?LX0!*IHh$jXcm$&q?dPD;.aQu[;_XT9H0E%gfHZEr+aUr*8qR,$9qXb"%FNaHsYcB$.GlFmR]/166JD8ub2;;.X[$NS!,?2NXp@X3@/4/\>gnGH[`/5g2nt:)!,PnAJo4]&O`_7#4-9TjYlim^rQ3-"B-i^lG%r[Y@=K]M_FHch7!VbWAaraRNfWlc/o'kMQB%d]%Z3cC[W4A*&BfG/0&6P<`?*7=LZ8#rCbVs"[_iZ9qXLk/XKE&u9Ege["N&V[Br%g6O-c%PCCU@'HVN2FCl@dM,Bn.U%ha7SFe*C*HZe5bOpd-nt?5r:aC+BX_Q'@0u7WeUTZe!oVS-EIku(Q^icnd\o\#pm?f1m:6!K%RE9/>L>6U3ZdCFW\3oW"bA+Ac5SV;T'o[<dZaC*^'R"cT;o)D9c592<S5B6b^rYCTYmauip@J@.Km\^-52UUnki;rtpFmB'jogm1%@;H_YCd<,G)R,D.DT*Ak"_$^6f`DmPjJ>2UA@ig*5U'f?9*6CH7*Zo`"@OA+3eV)i&Z`DHc8,YU2;\(<4&g/-[OD6;L,E+9_15F)%%?VGN37\4bi1^f'(9gUMH?n4\ruJ=Ac"1MB:%h1J=K@Muge339WI6u>f'OB3=K,hKH8hc-CW`5'NMF'/>Rpg+/u$AZJU?$rCT`0k%B::&tm>4Xo#s%(@-31*f-!Y>7U<trBbM]VeS?oKKO32WmJAGSh!/_APZ__>=fK?KL\<2PbirRu]S2r]3K12[,%9"ljUiI,GDk1Q@%,>1k:m9sNG>"m(p21>s/WXW2IQjT*Wa]BI=i.21A.H-AdTah-nC(H)=p<rp63DburmNTtJNXG_ih/iip6ciP);`_=8!QPP[:e[fR%8jsN^oSPnCG*#4q8!kZ'*!<&>"t0>DRuc#H]VGto.(B[g*r:0%XQmL7*PiV,6T;eq!D$u[%$jGja06Zd3![`/MVuT!+r"`/fuP:r%!%Dst8dS@WbtOA.J3noGakcC,TapZ:-pLbkp'Pbm:s)i.Ks<@@XAe[uFY!md3UedFVL0oc5H<,^r:\nT``gDr"U:T,MA`][H.q5-%\liQP05ii((kT+faD9X_eZ'.(]/('d\!WPf=ufkd!nEJ_!=kXq&jR$Vfr[?=Z.1s-#SNC1@*9G36O:dnAMPff@dJj7n'e"afFMZ_%)@]R])3Qu$,#9sR=)R>Y96<7X=c9\H76+R:!Uo`sB]5&Q8Q4aV=c\5N'D2!]9pHF(4"0ZXL:3*.@J=F?&)UKh)/;DUfe6:FeGF;7%[T-1VJq(Y]1oI%S`,M/Q?n?"h0B8^[IS`Hrd,i)#X96JXEDjh/3ajiYbk.m32F%(U3!Qc3B[afS=Z!6.[>5,G'Ol<$NCpoI9ATtM%^4Hop*u/+Eq_R0`,^W`brDVF;Mn4SQ^_Nr)fe3>@6]MH_11,F'ih1*ZCug9<7IquWE/`:Oaln'5Wc#Z>:Y%U!LMHH&^nNn(L%e-o%Pmm&,VVolsbE@3#5na@KQQb%48r`D@iECZ7'OLa*-:lh!El2)RKl6ed1"7\C(s'GjA5N\f<cR!OkVE8K7W__MP"gb>L74>Ph"M.h%3>0+RQjPI/-5>7a(/-70-FaZ3@lS(2X9@(</KJVY%$Otk=C=>Pl%L"X_%6OZ&*!tj5Z\:D/P]5P#\L1EUH10<l5lENM?TjhUTudf%#B<"nhIBsX-u_#b`()2M&A__haFRVKU*R@Z2PphW)'tt]B,'A*W^+G>kJ5`1S!/t@Uqi*K7NO-?7h%&9,RShZfH.9LC$,\8*p0NP%(_g8LZ7osb#t8nB<$rt%\%1X@MZVlbcj;%C?G$lR!1+0Dh31af;2g_LH^PP_`8>>?eMD[3_-6#U(;:tX.<mNn*;l*pd7l;Hpok-C%MF)FG*k#I8/LI)"oWI$;!,DCnX=.F9k-UGQ5paZEGui`pFVu[FHj*R!@reEV)8CO<n#>\2o3]-1XDo-\oA&IBjVVOtcr_seZ3A;"%/.lO*lsBcg]f-$@op6Lh\:>&Hbs[,"d,e'[.,]+[Jjg?#+ZLI3[V&?tIAg1Fm$;4i';^-`QfTo`oEqfdNIdkR;\EJgj"=.MNmbj$%R=5l%+KGn<h*RVm!>r9GiH>N.LbH!phS:8-D#V/Z96G\6W%obdD=1nkZ\GFn#]I,j9'tka"]*[I!^$X=Nh&*JI]IuoYm/EOBPWBh%/RXJufZ05&"ZT2GW,a[R6%M*mr"nHO6&]?#<I'KTX&6jc<gE`/\k/fn*?5=Rge9<onAWg`eOXrJ%Ud@Neu*Xie_aSq7Ah`Jj'.sa%AP08MJuI3K&ZV+n@Iau;f9n&l_&?u;\AU]cUp^=ccl=0,`,b/D_NcbfLuZD8'aoWB>+eIOW)5@%o[JGW.\$9epj7<U-b'k>X!aWW%,Rn;jam+4a[bI1/[DfCENFG)N(C0+u1oP8j2l&nKcd@u<$BRcLm='"\9tE3@RroTOe-*B1l&h$7ol04:I0'\2N'7V1[^c$;;s"5I%E8;PCSbugcJrLHjb(4JR(`D'!b[@,#ADnRlrI(e%/^)X)*&1P\7)H)MX4)snRTZ<!.GDQHZD:Q@>&C!C=3R-"gPJp?1-qsnEF=dc%Tm$!t4!(es=0\Dp#aUH<k+u[lJQ#^@=Q2jY=<(QWbugK.J<cYe#UG)8YAkGr3kq%+;]C"\J.MC8JJa!n"VPN3GSmHR6T#^j-BdaL%`EuGr3-6@meV.%r[L62LB9,*YjrMC("!T6?Q=Mq!\CC"H-]!eb[-P]CD6UqF^-RBRdaE/V#DP7@@^W#bm/e'K1l'Kn[o0ft/>NRJ%<u'p&i7M:9%4Ns7hj.)qi5P<i3:ulZ=G@(l-fQ@RZD_b<-j%6%/cZBC[\h"^Cl6>$FXU5P]Etir_qpY+477s_lJZHh!3T#*TQr:'%:\6M`8CXUoAmPtf"1e"-V#%!G9$d:G$1#L7Hs[k\qi.>I?SYDY:p)^J[]<TT*Cj[C;9U.8[k@tVagcEYoO-Smg&`Ag-b.5LQLCe<%(Z^q/E?,ZXVs:B)T3_Pq0g#[@p!Gg;kEAmk^o@(UeM"(A6X+[(+^'3@J@3ibV$6Z!9KB[e7EM4qGT$E#L.5^_;CpC,;NcD9d^8<A%a93fg(G7TU8=$9T^UAZ4csoNY9G]B2Kt9,U_]D-pfKC>sUbcb0Vi##%(pLGDmom0,`X13t+XdZA;kdd^TQE8Cetoq\.pL!F:gpMX%)(Dck0s:@XNcn];U.gf-Zn?>;Lp=c:E)nIo8ei)n@?M$4eZSk<nf^jmW`n5Y.<V`3CUX]0b(@Y?kHRW+_CNE\WC;_U$Lh03hP5Th%KdS]FA$i,lRF;AOfE?+0lOMi%WsW5P/h]q9o:OL$-q%JNM9OWcY*kU8n!9#_8]s9<o4hEmY5m0?T,!kJ;>U((3#"M9!_,=ENER/Z%a_cci7KYQu@KS-.(q&Q/"-NOld-@;sGU*F5"09(E;FBX[`Kkd<"Is-k,#3s!ZlmU..DX@KbY\h%'D._)IuWB]D8f\jfOI;LaKSn<%OW2Yr"pXL\<ZX&N1`Xe4-g+nl#gBiY]>LR$VSP]4&!d`aotCDG@It'DM&[HOGRBSK!&_^/cY4Ud$/u,K>_0V^@*:='PQ4A=>"==V%9u,R_Z6T]_Y_?O@C;Z_7H7AT=n$lSN-@ans"(*N<0fG.J/K\^pXJFk8=WFANGpPEb,!kc@"Xk'F!2MBJWM,h)dVtGNR77sc3>2C=%ps0RB'QsU'G%CV5_fY+\L,C,b,WMn(BtJh39H&aA4C=9e4t%7A[9='k$O;=Ji$3U%cge:fk7Mob<Z+gt1a8VZa,Z*!WabP)Rt<F<%DVfRFWP8Ks'fo#$N3Te.P%PN,!>57dSAfNtEZh%rp)]'MN@%=%#esYXU;1@A6tgN_-ghH_)Y1`M4IF#A0/tjD2l!5U?mqGP9jIHu%)Uh>S'-)t#C7s/p`\a2`On9CM$/`sSO,fc&7?KDL2_5XVhXXbP1;P6FL:j4'L@V,OWc7%WVr4PSh)uXHrb;PacK^>l8#\s->^a)[%YlK4H)Mk]V2dcQglm)\qmO0NPP;5lk/E"e[(rk#qQJMrtC]n)^/dURP(RWsp_A"moF[+gB@lstgll7L%qML)K_1>FR^^bM%B``3!%CTQ'$X,tr6EA_$f"e%iK(aT6^NC4Ku_i]?K:!tr(KieM7!3lO3*5Oh(#@\1b\rIEIGq5gtAdnuGcn/TlJ7+c7n1G),5r7=e/@*2m%6oq"EEt4oET`n#.@=jhSX!=",?GRG.)'b;jRDp[jiY3;Q0HaV(1-oe*Otg=$jR6',Po":bJoU8u^o+&$7Dj%;2Nj8C:^1nJX7',_%#/%cp.K`2+rY:!M8n^RUTNlC@6Wnu+WYj(b@`^/YGt#aa`a.s5L-%uQb8d!'=It>2;(#$lAGU(_@4\S\2GTTnb=[b%.r$j_jR0fV%fK09BIs14^]lbRi=#(7&"5Wm(0Dj-M4q3-5Ep9P/CY&d:3=J==FYkD_?jJ\;b6W@s\6G8-Z=[i)J3k8MaaF*u2UW;D>f<!-eGQ1W%GY26j(s0E'Hmg:3V-G^HQiL.'9&5b$&-W8FJehj-ML"0jb%(VpbRr@[&"A0]hmNoC<2rWYf0lH-WMK""ZjNTe$Jk%3(S@T"fa%.0%Z>#=ck.:?4&]e4<*lqRgJh4eJP@o>`,ro-IPg7u3G=ON5qRQarYZabrOo+(ZVUBr.(i``n7(,fKTqi3$O29'\gpR?4(^%nuV%HR/%RWO:HTU*`&XBJdlS#`i@]NI`7ZDb\lXs'^]Tn+Y()W]O'J@j*u"4o-KnI"b6KdpVWBpDI`LRQ18qan<dkeZ^uhYUB)o3iV#H,)jP%2d8n\P[KqG<OFESZF)6[@H@2m?l"Bl%"T!J4^;F"r:H6dEug.C8-Z#PRk\RC`&Uq_P`k`0S>ASe46#@bG<@]T_MD+]hM?8ab0,g.%H1S5O-dn'>^ekmD$Lf`l,Y$pK$4pgW#X-@%'qdtu[IHTH,rh,4W=0nZ0>eG,!n3J>LscfGr9Eb4M/LX2YVm]rm'o2?Cd><4Dd`/Q%5]#ZnphEhujk+C(K-m:\1J0](>IL"Jd3>P^^sc9.OJ<QpQ;q(ALZISurk.2tP?%0nrQ%u#*CB:`U"%%`,)me^P\E.q&>CB\L6mkD%:qR9!g%8daU^)U7Adm:6!`U&##;>@.lUFX]@fjbVBfO]1INY&o]K=Ni9GM6d/5[[E=diD1H?RJ$>r,A`3_")S!To7Rbp!k32#Yr%%A*r23PgXWQhZ@Yp1o0R=.5?d=EZZm$+,"4u;mK_g8jgD@P?m5j,6>5<XeV>UX-:,glZiS1WG%uQ*GaeQC.=!*:Fq$l]4suUaiP-)%Bd'L6QkO]GOdC)S+Rgk_n1FT+LqX$`5j]*2E#1"IbB3Aa/rpd)]^."k=a\kLUJfoR_rASEX1)BXo?B>;e16aH]-@@_9e/dj11P,U%eq0VFHGE+aTd]e/adiXYnHWIi$C:DoYcNL5D?Xd)3?)2<J+]f-LbCKa,g`]c4tVQ9r&m/GZ;rI+BGY3k.P7h-e:b(])3Kam1:M=^%I[4%D;QU?Y7uQ)X(7=dS.VU^N+bQ(!4d]ia<u(I2]N;8m+)X&t-"dbNBF@Y+(P@FBkpWsC_LgWQJe0c%Q=*MIA#?(t?ncb04j9-#%9.k\5%ZlU8Nb+=WqA#hM^b?f^O"FSG=pk#9S$_pG!A0Ui"K&"1R?W/&K+S:YZBU!n8lGsh8J>K?`KFX!)8BP?8QmY>_J/7A%:H@@%6fbPY?u`NSV7B$"fZ7k\eHda.>rc56NR/ZXWA.-&7KtOTc^%Z*F4g$TF\AaB5VPA-GIA@dk1*(:&$6\r?(E2q(,"aLNa]#4&n%KF%D/,??XCJ=HBN"uefuS&!pB[(=U5oZdaKd!g]7eoIH]2.ELP>4cU`U#X?Up;$Ou:rIIHt:b6^kY21GQWj3Jb#46Q7"C-+d:(QBu:W%OQe>5PqAJ;;aerI!2=d,JJF%Z?Zjh9!L9B!,(lU4rC&"d1FTCF?t=N4EJ[W%1GUNW,nWa6V4D]6NX'^a@+&f"b+m7f_OQ[NYA<EO%#t#lg:2\V04jIU;DWM9/"_dUVjJRt!AVXUO0Fa)"K8M^J0c34k0PV1];i5]!e-q3tL^c0T=1]:)-V3Y`c"7qj+B.72o+p^7a>cMa%-7)$A]%9Z6)j#p%g'3@sSdd`lV8eBU%jk]1.r\\BJA4hu46*DABsuo3HZ95W3hoG!5gKj7"=,G<Q`Qi)(`29-/InLm2?3N'UJ0LD%#(s1XfsU/+XjP+N&MoWCRjaVsE)oRI7Os0-?jXXs(k^d4L0R2V&XTj+Wr@Ds6\sr^iP,oI3JL$uC?hMbb?Meo*@\D^&tOK@2.SX"%Cn.1f37WO9]B#BLKD/*@"*jpSUU#l5*#'M.X<mNBfhJ%5,S<2l3IrIbX7+;TS2&fO)7cbh*;#LOl.XQTNg&/4nCWgt<UT'<f7Du?%AJY_g($%nd@\>T4H3N]#"pTp;p;9=aGi#Hu6$jB1GhFiE,7[-$`2f=e,tfA8-0@=B"*I7GAmMeFiRo"Db>J>C*"8o#MaGSo@5_Ul%B[)?P2C+Ro&0]nfIV]?"h$Xc4F#n>Q3(:D*5hQmFS[JZ"4kc*XLFgeT_gpr]&Cbn<!'K<cLhrmhe/36"n5Sr%d%$U^#a;N?OJTUO%O]Uot@1u$^j_IhfF0^Z()etXE!fR;s61(R`5>Rk),<nsD$AGC'U1;3T#j,IXrp,@g]/Uc^]V.SD-anI)!aMGCaGP'[Rog5l#(147%$,oL\6k1=O,:>-R\H1+d2`/b(=W);nL2/99:<KLCq/t8o8nXK%m;$5KA2"tc;6ftHY\l^e2;a(>H)ssD@0J.;81q0q$-:o@>c_eW%XT;Rb'A,H&6;tCd0`goLNSMnCb*AC19@;',%'cgZ^B\)qXcDXYg_k63fTE"_A'qnUX-u`u?LAg+Yfu/KBb**G>flQV&rKnn'e05t%;/+-rCXdhF5a:tSPsSZDW>9$gBqG_7G,F#.\V\.%2c/Gk+h^d@?SA$<I\6Pp_I'V"DNo+r^pC(rgd3`]:=W/S`siFbY9[/=8$<.q%@-AGQdL?jAHg,h`Ir7iBkttftV8?pNRs(%$&mg85J0o&DTi39>1NIZBlUM>,rQfuWnOpcb$Bnc%i*H_E%o\p`noA%@^\E0Wo/1J`%OVd#6+_/f0KSXG9Fr%X!2D)^:+N:QAFA$aR.3qBe+I3%j2leDq+dLn:i4A#\%18*hUOH@>.!_n;-KI[Pa7M5_6uYD::ph&B0AEJ0%p^oB=b*/.@]E6=4rF&tra>?d<h\i"kI@UML9TEEp=1&Rb/"k;=2GiV<^`Ka[37m9T[!&kFK49R/Wj62s!X%dm7N*peJ+cksA##HU%e<UhCpG&o%._k=?T/MH7+t/K6mSK5sHk#M,*50"gZPH)^:e*CnJN7*n0/=H.6=`@Dc9T(cX!'h(qFH/qVB7+)g3Cap5e-?qGT]Mf%[6`_DDZeX*EJ="YF-F+kcQibDo_)D#qgs'YTVH:c0lu9S+d94U*)Y+U&-e5Ia=E*ZM:h9tkd;CG`E::'5tB%f%aoS_0i(!'Iif%2%Y+t/e8V?'kKcJMb)D`MsRb/ED(tL[6SR&@IPE#eLH(37JOg"n2JUA_SY8O+HV*eD29AN"UU,41.TTd>^qFR(U,M!36m2td_XCROs%";;GV@GP0sZF<Gm_R.S%4pEX<71mPLjf"%qhh^o'.sN1VPR0'bK#ji>/;7*(5XJDS%YC2NjnZ1`GQ;6_5eE&Qar.g(P[s+B@M=RX%O9I!:.WMOG1NQOSl4Bj4[+hZ2p[@VKmL+j?QpqTI#K/+m6sC9<mVr9s4XBbu8ZPj1N"prSgoG(3ruhIllB?V`rM0!+T"usCfM9?_%$j&gTKK)G2GP>G`$",)rl;InHr_c:hJin8]/sRQ`kXQFc\,b`)Z<"P`mPfZUV9X=>QMo/N-Co>_$_<PG^?e@RbIS?ar)V7eg'*`:%&Hl?@nfbTEq'X\8`QWj;]N?>`K:OHqKcVsn%'Q:Mp2qACJ(*'IX+NR$l032u]Of0kp+[O(beki:'JKfS^Mh1e]ma`K6JjXtI\\j#%Y>Fb9Mbr^rpLGkmI-/V+/DiN!.$pCmAO*7skHroIf^^@5YL%eEX_JF-qRLoAFYt8b3uA&Sj7ase=.&7NYumJN"!Y-J2b'?@cHSbN%.&K.J#I(3shkZ4C@#"5GWr+(L"3%9g-1aO\ZG"lJnc7plRKlh.pi_ZdS<+he,PU.ROaP]eQDGnP6\krtpt<i6%a6Mr%(-/R0SP="%-Kd%76#3OCgIsMD]BGOWf/_EnGtja@-/b-4N)d"E.J7_\0`#A>eiW,qgVq`GkUI(i&nkVFUH)'=P1sZD$;ON*5>^P8$c'uBMUj!=%ANpK6cX*,lnC9&)4]9[p7qrr2[_BT_Zp%VR6)*ePg_BlC'jR?ho16']:29T:f**_RUqrWSg.'LQctFo(=i"6DaO8,@&SUtY=uk#s%=:^KMfg@3n19!k2X?("->JOD[2<SG2FfpZ@S?$$q4'>KeLL+5D.&W\Y@0g:TJa/nGdobA(c24rAIs+GX)QM-4[WRmB)]:b^mlGb,%*62\"WB/j)(?h][8\1Jh4L%l;jLolab7VSmhbMEHQ^l%'eH*OW?=nLB:DVDK]EoD"rJ&E,cP3<A+*TDAV%MlJTPCe;N.\:G]+llD%#h>B<VKmcP)Aic:LZ,s+39^Poh:VcZ'Ha:21%7JYa.Ut6VLnqCh7\ZST7;$KTdi3?\amV)l(YG0lD#9/QJg.RiE/3W>+2Y0pEX'f%$:[:CWN*^o_"d-4[rq<@[4]PNF=uJbUmiPSS][^S"cHB7CYO0,jG4gjInDb,=7^-'H`=ch/#o/5h1'[YJ@./"">]Rf5I@e8X+84+%3KP;`0:#"P>>bEk_Po$L3pe,+oF+BU9skO`SCoo-\Y/gJ/>/hl=cRHhA!trdS3+$BOA<i7jj!Wm6u>-2@8:fJij"I:]1Fu/TIqQu%4\B`:JA,?HV41H*J^'G-8stu?k[o:AA$rmFY_a(qdp3nL!+@R[@@-FI]@a#i/r:Z&%)'?]kf:BJI&@Xe/dqUHDPb>/%l#16K=+u*%ZPoX5O#=`[GY,ur,-!.dTOE:PfAaoNldh<*ZD9F:'t*Qe-7PP2QdF[@FJMI[ZL!n*Om'.`)1QmkGk=#b^<_K:W(O&o2>Vk]>7SBI%<<mI,G%ComS`Ai"A[L8XrH4+As6:s9\%UDB0V?-d:NZma\SDc=ghD0A]6c'QqN1^XYLBF!FnaiFpuO^HrXpm1BKJNIpoj.5]`QuY%]scV\I3"eFS!Y(4=RZ4r+7B9Fj7@ZPHN.SnQ`bB-DH8Tu>q:1!/,"2?L:Ub]0,m1:K8gYio$qA+ofdF\X\`)<0D<\PB!`Q2J-2u,%TCregmD#-Gp3(8m]8nj#?;8?77p#e!-,629jip.,DNXne?oEeM4mi]te>FqM70?:<aEtnTCb=pNRV[0>_U1m8)rpp+9o`5@A/sL/%*'g5TLN,P%=Ge4J[J+D]Yu;^s_ZHpKm1.T5l/ksRkP*o9[remOTF8UFV,Fi7P[8<!PSQCN.Li>&_U>i?\3==]CniYR,hUl!_ogOo%_])PN6Ams3Q0m*KhiS"tC<[X.)(Sf`qQB$r<lmTYp>W?Y^q?iDr0fU.Z/3lF@Fp-WH1U52pW*5_1q$r%UULVWm/TbJ)uIMoV6>-I%:tnh!9C'9$6T8De/lO'Gh4>]@Gcec3JKsiaeRs7^217nb>R)I[D<73S2M(0ko[?Y<p^Xg7p:SU`XJ?6YCHsq]4]E\&\]3@6Jq.Le%>;Sj6X]Aab">K-t`O[^Li8t6B33W]A,iE<`+dXch4X.`p_/;jAEb9Kp9bcG16uS/Wm_;'[p.-5ETD1)3oph0?m#dNA[%]7rTI:D9%*mtR3!q@s$O2#meI;1#`cYQT-#J@XLXZLEE!$I=ED_.I!8d9OJ$1NJ6!ING=X):tbU<e`;&d)n#IVe=Ke?bpW/PYZs<t;3&ki_r,%YSSA/"s$pd4[cULU=JFV9<KP9=?E)T)L*X3(.T>c'7=sYYmVT!ZbdQl]k!puk3Up-dhVp/5HWTMEZ.%+7>9K!L[XQA!i\GHEl"6q%8g.XQrH;P/Nd4,->N4<Jg6Z`\7tcju?/4@IMm\<WDSq!*kb`D>q\GhO;Ou?&#84e?I!@_Rnp=QQRrseLrE3r4D0*R$\um[AeF[$%%$.h#J@4(!5ka@quJ!il#O4Rck6e8(JZt"iJ@1W,>0P0OE-'*KVP&KVI]!l0H96`PaA\$,+XnhZ(DB<&LZX*?;PHN^WA\9>BZ_uT*%PAF5&a#/Q31^k5j,48VOJF@FWl4^oQ>G,;1ejr(./1"#eHJT_d<S%]R[WpZ!adpk-ffEL'eOFo^pq+6c9B@u8I4264X,R0Y:$X3T%jl,@F!"pOQ@eT3AbQm?Sec=ihQe?H]Q?BmW'+qN9kna(*%Vg?hgZ-',l_61B:e-I:HW^HO#EsH?*^D7^\[i830>E%6_1V?r;,u@!%I&?";7fX1L+Xq%aO%gB3^7A8mhrsZZ\q8R>9^)XVGO)r6$[)C5&T5qk!F9MUBM31Yo\SoX=-UEc[Eos;qCWnBc1g-C/X$/CW\d`?%7qSrW$Lgm.?'1'1_D(:;M)ADsO"DA*B\!8_ht,\2HjAG@ch#nrOY;RBi,<uJWctb!9^>0`qUhGmeeBAF3SeN;#,irCg3?*gl_lJd%ZDFT,1q9C6*G&T=m%Q7BE;04k&Y?HZo'#`<aTe;;,!(*>SDPgiI'HC,We#I:9+_NQ^sYHHe$#MA+8VfV$b9P-J381,'('kDjQ#R\%[-(Se2/g045n.r'l!!Dg3="$ZC:42e:JfAtd'aY!U#%kjq6EM^d1ma-bWWg_cMC;=\pu908@.M-Yb<aB5=E.A;pq<,BLFTd,LqD^%#LKF\V;?(i5k7gc7XH2GX[;W&f'L#[=b.9.kUXa;eOFnJ)>boN;l@:)Lb8"1k\TM,Qi5<W]>;H%CC`/$ca5+Q*dTZ/DVSH'&[/@!%R-mP=Ws'h6c=<[aJf=FI=W_$rHQ(X[gRPNab`X)/FNl%7`//C)#3S:\d$lf3/G7:SNOELlFTe$l@")d9B`lq[icJi^ZNJj>/k4:S%K6LE#NI,N3B[<Ji4.]kGIC<Usgj>#`U5i?K1'cWq'G;5jQ?>ie;ZkT*YSKrX&7DaG!aA95cqCS"I<kF@2/[TDhtR9nD6\AAq.K%p%gUs"9AYn8g:9_$U5Eq_df"fM["h[.Q]s`=e!"fP],5icWLX/PTI%ibL4T&Jt8[g_PekY/e7]Dg_Q!ahLgIY!c6Gp[`YU?oV!i"&Q%e_E@kNZ)k58'X5qbPAiaH$InEWjj24'<'Y0q$pd+g@BCLYAYIkBoC:FmX=7c3E;Csk"&CKQER3)4)9<s"#gTj:G@+()c0b>knMNu%B^QXKeg4l$\S'H^\;ObK<]M_3=Y\?^)&4I-)^8I03a44W($tjYR!i7aa%GiU"Lc7S+fnmbq7<?Q2ifl3`R4pbcbN)1C-;0S%VB,=%!\%5u#m)LiSd+QD3QdNGS+$bCld^*fg<EK%O4IC_0S/cWNWu54I]YsA"_9_)?\2j6)J.SPhGR!F<-jL2NQqYTN]mR09=+KjJe%P;%R5#eBeG)#_Ha_Cb)P<<MjZnU8h=3"![\U2TWZ;,sC<G.V^V4uHUIWtl@D7QP.THT2Q2A*4hT0(rRf\P7N+9ZAGh3q9]aZ;J=ZD/O%J[a5'iG&8(p(Yo>C3Gsb>b\R,9>?tMJU?blU$.<c]P=9Gk+DeKH$3DB'ZgKN:7LPd:t#pha^#hI4?WHlOmK#\6[6(tno]_kD]U'3%MmWd,f)?fq_lKd`r#-*.p=-q>V\GU0<M/B/V-q(caGb-2A3GW$6*ZJB4'8.->F0bDWcjbTL[+t*9!A6`I)-3@$?RJ3:L&[lAh/ri%1TI`Pch2O)NZH9\KGR35btf>MQ6<W3ZQV-VPcst2IIdbMCp<U5_t)<F`[rN^>%8QYde?.P!pZb]=uRN"<28or1jeac(IllVk_"oO%JD)RB',]St`qJ1GBC)(m]\1\tm7T.C'kkb,!DNq576Mk;6D%GScJ@O.*Lr12<lGNH:Qm2'T@G])PR"B,.%PY@iV.Z3bk;dFBa`Ca%'4!mCjp/T&p0LU^X(mas0d'Z<I\afiUbD$]#+Y+p\Nqa)+q4N"$=UUlQFm+dbF;#&h!X@af!ec8iq!ZSce,EZn5VPB4!hT@XPIe/%bg<c3o2B%JgS:W-K\\0%f2!5UX!r/>Cln'IPo-K$?o(:`1gs=Up4?/R;!YRo=KDj,kA=WmY]o_*Z;kY2ncVS3Lqq[1B#oZ]QDbZ4%*B*!O"CL#5ij:XdYsHJZd'lI9*QINtjX]nX;^DJKCD5&2T]CoTp<q<uj#2(iX0k$Vq$R?R79QE[$thnnPiN=\I!C`[h@k\S?3$k$%a?'Q\.XVuq^]Fq1^S=&Bh"M["BI@;73N.X=c\:<%)/`7I!G-)HkQ/BQU%dESHpu0CRtp4^,5V:4$mT4YX1B]b`'$JaU[HOF,8FTi%)j2]_R3VhAC=*>=a5k]a':B0PjpNo:G'DCMpf[cj8^0;0)!2;WF=Y.sAk5S2Soc?8$V'H#"=RP/)SB5/8tNKpi;:(ubEf4f,^?BY%?<7(%k2@X/TOWnk5bZu52HqtZBI<5%9jVhTYrjQ<6%S<1IKo)3H-`=DIBao65HI`<"=?5lUD"b;UHno[gc)a`PsCff4\^;&^o,bO%#a;BsJIXf&7aH7_a!8j,7b;mihT3][(td4+YDBN#K3;->,IN'DmeF8EZD"7%4nuV[f/Jbp[)M21ghVgR]6MjH;6h3`;CWG,&IP@@%?3L&<fmC269=F1HljM*'S/29jiG-X7`I9#3@DLHC,%Ue&1?>_hafO;2,dImY]lT-g(n#0AgdO,JQXQ(GUV!QrjdJ2N?H4p4eG+(I%0_'A;M(LWPbV<UC(pL3A,?&QLS`),H_joNXSR-T2OGPX3.%S07AWDo3#%rq/q<cR^'H3Mog5Po?K5BKOZ[]SbmZuAIl3fKEp%.$i%q8#n_%,1[TG*(PWUJB4ViRtquN&;eKB-I(bdQ[WLdAbU`&*))7Q;Bq[3Vr"E%j)>Nm8Vk9g<BbU&q&hA>CpI%m3rD^ij,2_Yl>4'%D9Mqp):IYW/VC[hq5<*21PX^r./jNFMI@GHQd2,sI>?-/(6OeIL@<[8\6R6N`E]T./]`r:<=7L9>(dK]GjY"Xqr81F?eg.bF4TtR%+5]m2JAZ"LL>J@7Ug5"!A(#meMJlt>mgqOp\F6j25GqXM&6lt0ADC7pEYdKa<Jl^:Z9IB1IMo/A&)7W[h=uIR<B&BQ])Z0WlT&VS%Fm.obo7ldm,!2q>qp7D-;Fl!3,)OiGq:[.e1*%I![&:LlJUHNfH71Ac"hTekB+Qi#af0u_S:<3P/H>_:S@hVR#P7l0R^cWd:W)kb%c[HbBGBm>LNoRJ/<h$iC-YW1d:Np2e2:TocYE*e7gnCpWo*thRG*u$;C/3I3d*6LAF[1R9(0sSI*%04K+WS*jRET;sVk`\,)q\@D%!O))=na.=1bk24AicYL]Y-jVDIFc_O#=RFpf>5'>k1;&ECWo^-Gg.Sh-G>&2#NAL&9ZN^`_CU1s>reCd5&]7FQ:6H0aWUjEGPW>T%^UTr]NJ*>&F4nSt8+oIuBoHDgRB'eL?HCY@-]l:8O)OZ[bb-,E1>AA?]KcmC6l.nQ-\QcE!UB5s3KULpT=a8)b`aO?DI#h]]*<1S%lcmS$EHFDSLqKZFK6KE$+&%O]35IX%Q8!t#1O2/N$ccf/H">3Cq=p?OA5_!cR--.LIZAJ.6RXOiT`a39*\JD(hSGNZiLpQjbc+gW%BY`6%c]\W[rE8;EG&a_!`1e0?;g0X=]I7Y6d+q=+>Ehptm[%i#:[77jglC1g+AVu$q!ZZuk'^UP<cXmSoI]ecGmr,ceY7pRS'X;I%Q8r>uAds2'(32e+Cdn?Z*q&gC'1(4J:k[%n'V';8j]uh>=IpF$?j3Hg5O/N@Ma:8D[rH/Q3P_QlBU3R;`9l9h=_FY5qrRG+J,+%3%D?oQ]!F@b_]E)XJ_R)=61orZ,X`NH@Y0\pS>tLIHiU9UkB*=_/OBPmI(]s\]J8ZdpIb%gP3->((=mP.rTWh9FT"Zr^JV?_KXtlf^%".F-8)'H<me'ni-lHAQgOM"qE"\9O5mR.G&ELlI5Rd^AqX"s4En/QGdF^@0,m7E"\ID`ZZoLg(bX61HDH?[<;\AAP]dB<[U$KKk>%).o$lTq`7C.fg2RgdX<+#%j8;2TGH7<[j&_F2F)i*BXePm6KQ(aifM<@.`lAq.[L5<Tr&.4!P!qi^b<llV>W[_)"I\#UdK7LX<@C%^3G<]c=@IX(4$b_0,]TY$Q0rr10<);:[=*]@9$O=T!5\J"9%r:%jpC]qEC;3Rq6TKIU:%[`QA'@FRjE5jot;pdTk`O*jnmnF>ep?%]4[,&E^84VKS"\L+*.2*kAG`pMi<'o+2"E,8$DEX49"H#'cmtA1SR07ITM/FWk].GJ*a;5D7Z2OM/R%rG-5c8`U+ST?#@o_qr6Ua%),Y\@*8h+WCL18qb'll,c>p+je'p)Z]AsI">L.#lo8'o91Me2X#i!1+?3,G5H<\.=h_Qci;ZC(D?X]GY\[n3Z%p$L%@_#cE0B;_q%]_qWfn%X609"3jV1A5)>5BR0ILkj2r;pQ$\gs2T\f3a9<@-^1_lY/X5AhP,?muD!#LX*jG0Gm_o;a(bV;9X1>&YgDgMi%4jPs$=5%c%$\R[6="bQmq"<`CO+8dp3Vj'WtSqT[!f\_<GBh[Lkg+L5_-4FGY2L77Y5>U:OQW2[f:UWI=a7pKp*&Uq>%PB](7Q*g*?cjitI0%4nHV]A.o;YUT=LW$8nLSKS^6e3m\FRp1KM$D#ANn11d+*q3I>A%<=6bAilX@K6&DQWOX`+@D4oi2'M3:7s&0B<'!sFaq*\6Ar5<H%V3bb;\u]7&m/<7]#N9j94rDucMopRuX!/otQf>\_<KT!06"(&DS+M\=j058lqNSqXXFj(h>Kcrld([`?LQhBnZ%)SmJ,_IJq#'ij%[!^#QDpdSkkI"7Yep7ptY_(6M4!1Wq&DB4$'S21piiW\"7&s8!"P4\cLh-"4Cm2nPP8(GuWu'a&#H.@FgU#GRGJ0";2#lHRJ/hq@%8((hW"b,A\Yuh:q>aBTMk&sL"ld-9NY[Pq%2mSUB/N-$*a@^:\X0^/Bm/c_(&LF]XIu\DE3jkAe9W,>G7&u8HN]pDac`DT--4Ia.%%2AV,/H^i4E6cR1q+\0\?GGB!df4JCVMC'&]<SqapV$kSp@dXlm`+1.[-l!-Fp:.#Xdb`l=TQ!A`J%hT`r[X17_43VB?eQQ9B.^L%A5lU(ZD2R;U.o=7:t:6q;+#%;2%IYoPF/GIX,7'6b;%G5j<Z"8eoZk(iTa,Iq5%tLVbOKXgH;-[%K91[28;^+q^EZ"].nP:9Fl86%:G:2:]BRu8-[b^"2a_XJL`['#h;m?dj5&mI1c2[oGW4RDaYZtOA!'liCg/TQm4<pK+B6M$3\0Tanmn7;=#H@<J/Tr#&B9DBM&^MG%4#Ug-AA>moYu_jcCiK#u4it*1kYjbj0D/j*6*046g!c>1*lDAr?qF`aO.XapUuh4GFmo?[s11F<ErY]k#:b)=.JoT!"KSV(BD!7?%[e,4_#A)'goU@Mn[mtG`csY]O)u2aH2I`%b3`d<4bl@:(%ebO<^cqh%^U8kPBV=3)YG`0Y]8*VZ=+#oqRXfQuM<iJ*,6;*E+:NqG%,rElh1.qt*<*fsjWmO'cU)i5flD?os'$*\hj,F`n4>oVuAmqafq'N"iq>qGD<r)*9^<J5qZ<E0mVK[XE)_r[(Rm#A*\;1k&;c]Lu%3*4.$'I(-MD1b$k*X.^=n"LGq-f9Y5dK)GCReK=Z\2>,<&*[E:1KQug8Lc/*Jk"BP0F^/D)]S;+(E]Y$7Mb"=g3f%fcuYWlkB!m,%coFHp.\c79Mu3s^UGn#i4WO17)=*j#!T-,2(uOK[M/l=<JEIr)F3q9)!!A_J(HCqgYMOe<(l_!36P6^eDd&F1:2uLm+CWk*m7.U*%90&p^5n%/<[`LA<CsT?9?-"HVQ5]6DnP",Qbk421%a.0KfGA1A,ScM/U`.[l&#.T^!\i+Y<`;h3Qb`kg":h-h54&=ca+s2[Jr@O^%DUTBmUS"spMB/'g5PQ/UaEuJbYaa-i5!YR]?nuc\KhPV(_`F>&\mH>li;7V&g.h3D:S%7^$JYX&%M%<H`$P%53-`-8M28HHh)6FE%YH?.eE3Lrg'`,Z99b#<9SD$<j<sLg-,kBq\;3tFb6!9@.dMgC`<h@8K4sulp>R)'?:gC.GqD;>_^7%KYoVQmt.fpf><jIjq"=A,:%Nhp=R+,PBE^o1s)Gn(V9JR'8_\/J!(m,XKRG.(NUeS%J=VKd\&X?)J:Pn:mP-L=mUV4Za^5_R76^#j"'/d*>d/a]srC5W`]*QE:[%5aENWML)q9o6;23WPS$:!H7r!pu]>(R(t?hm[0H?a9%@XC:U8I'rZ['6:3lR3>TCeejf-IDEoIW&$4]s'PY"PB5R\V4/lO],dOF#%JH@K_Us1%TZ)k#3WAUugYFa7Z'R[[7cRK,\#6geA1QHKl;qO[CfHA*4T!SP>a1rY5F,HCn7N83dXemFS[WpsR)aeB'b[t,P`^L5"%?>FZm0o%ED?@*3k8BRhVN,)s]\BdQKDQ^]1a@s,N:N!]h)0D.0V4SOL[j(>&6gPOPG&pbXH8(Zp19;hmBRl1W`XVAa+N1185U9P]%fAn6m!5RO88fBf3)Y$XSi1!8RBD`d0>ZJ+^8C`kYE#lN/='ft.6B)Gk7Jj*j:Ib/^&^^&Ei3pMeOqA"DEA3&I;%d1(H05G_P6t]D%S<"*k,Js0FI'k6o/:u*0,$dSYWD6_1jr[l^(\[3D>UID]04$g'1?+-u=kH:*q[IQhEQ*fph2*'`pQ7hZHi_DDkp@tG<l]"/8>,Wo%*Q0>._,!.8]\7qALN&Hr=di.GTh]W#7r&<gRm4G/PQkrJFk,qBQu;GpL&98hc&I*RcI7J+3FS!KaeO.<5cGRJ?(PP6OD,]8hSJAR%]iL:$`b'og3(HMu[SG8]!\P6nR[kG@#n\[0<IYX..#Wu6`9ncQ8TkT`&72TL/plcF2<ZC3[l66arnSK=i4QYen_1BUKp?qMq%QFu%f"#Q7bn)kH+OH<C$B?9K'H%nORuH@(hO5+0a*Z0/Od!UfAOeK!%'KZ.3[B`V_KmgN-aHMcRGt<\p=f]p@(*_W75c2?U\>fh`F:Fa%_:GqT?1$XJQLnqUI$G6$3;Mp+=WB8>&1H97%nY8-SeY\N?u7HT/(poXVI5ZP<="LdOVXT%O9S>G=P?N&`4T+QVZYbS6-t-*2\t6l%cIrH@Jct(eL&JKQn.gr`][>,EHj;3W!PBFKNbtF.V1Q$BRq-&J`:17_cP3orP()@Wd0D\p&kEql8atLIOQ1sfJF&ltq2N/PqQ\k8%leO&7=qNjEChhHcR8.XqYFN&/7?=oGEU5!Km-C/rjpC16*=V2L\t#H<?J+=_f-OhNc7h'b1Rhp.*Y;6P@\Y![JRASVMY)(_bfc&g%n-pN-js)/sDhmWN:*WB\A3"=c/2[qV@5c70E+RZN!:F<+M.rk"8=F;P?oc8hQWJd-""1On\UZcq$/dS:`e`U:+HKa'oh^"ZD+.e.%(UjX1'gZT-/T*MR`tPBS%k2gC7Oi-NZ>8Te:!sLHY^Y')HR:[K/YE3L`:.bT+]4,B,+;Vmg_'+BX9T4hH2UWn)d$u(f]rcE#]0!$%0V"hKHjeu6E:agIjr'q\0b0R6LKeS&VPE9gi]T]*114_I)*qH9(?VC4j!Af$iN%F"1DbE?>F50;HfNE@,dZ7U,9dOPqUDbqZ5(Q0%`7a1p3k/J,o-f`=B3*@hgHANC!:1)(efIaT65cbNjrc#DAdO73fKS\)<d%q;BrWA#bpVP=7ioV'ljDG_2l^JQ0$m#=[tm[B@Ku=D%Rh)iB$JP\`S-_K2DF[0`eVh?b4Ge=F,jY.;EO9jreuaQuX:,jVNQj%QEFi6]C,U4>'nhDQ(U7k+;E/1jjP1Ipp?N3CpZLqtK;Ej\%M($e>hO,`cG!g!V7(%"BSA#_f1.ZcaU_r?3=B$s>LW>\U?El;daVSYYCgqUPJ#M>OS``GcWe<$CAU(LAP_u-g>JUDH7rWp[`m^We%ljuAd[n!"I"oQB4c]egURJ`LccsXn^E(O(rE+QfAg2Ih0VpDN^Q%tDE>uPU6,+>!Kpqj,PJ#-;=dLf27_EZ&"<?#a-$Gi]?)\-,P%o:?bU%U`:=kpKFj)s[](ip-_dB(cenLaf]cMh5.sfF=B#RhofELmJKNerJuKJW4g&;GAi#/,79s+WO^(p)loZ5eb0U_1&fLK,PeX%@g:,aCbj1TDPDqUElXBjW?gR0P,UIF%=!]YKs;)h"'=/7g0(h@!kltjAJAlBZlCV+944\A$mjSMr*H2UVA$b!X-"m`I2mR=;026:%L.4FMSg-(4O'r_P'J7MM3lKV8_)\S*#<eE:16N'Z@qG77<%:_SGS%$DA7q9ScrBQ>buWdnb5F.\N7kVf..^C&)u"_,L&5SNfaQfc%kQKu:.oHk-+Z_K:)\;0&)sS'5h_^n!QIlGq,/Xmr?T8r4?&2[]fP!EJ8UT`>76r#[RQ7'0HhRuINgths>+W?\g8;'J^_(kU&#fNH%$5c-ZW/7ekLiL6OQHesuM>Q;bL@F/hZ@c@s5rFE>X<P0)*qUn*blA:#dH[HIau+/n'o+<G\kRk>[P\9>r"`Gb4T$`dq_S.H"Wjjc%$k/!G]?"#q@>DqMiJ.Dr3Ah.hbc:Oa-N,.de5FCID'D359]VT>ppI1GlY"25?*\QDq]\L9bQu.`DdUh@MOcVgHt>3`;L92\6@A\=%:DG-Rq"2,g&1>F@,?6U]M9>(DaMVF^DE5L5_M.l5Jj+qt5E5!-5(sRJ0X@H9`\Zk@Ukb)kVALdXrKqIE8KWe8?J<*`*<fmJnad'Y%iT%b39CH0GMVhK3YaWpR,grK-SAGc1T^"L6?_c<06,;Is7M'kh%YR@bG^]TnPQP:,X21Y-:@WLX%2Vf>f@3*,":4l8qPE1kPJSp;%D2qWkZ&[FZqgN[(1,A:I-;AW-PpR`S;5WUcXW&#2.#;b,\EpkL+oFrVmHTE!-+fq!B/Q'5(HPZN1>&'F`d!E>/cYk<^(CrUA`=XG%qbU<cqT&eZ1$L"Q$VBq:CniKCaRrjUcI>Y^hT'7$\cP4T6Z,A<:`3DY-'h"2E%<)26`@@/c`AT-q??\[%I@'I5\*V),h/Oh;Qd\+%JE(I+4g#6`1dUUYF+t,rGJKRnU2]=)2DEO6&_PejXn$>K:lmridm7*7EnY&REUb<P9s^mBE?GAj@g.Y5csdH*]s%O_g^#_C/(-;`%E,P^]jBW9Q&/0WOAMc&H?6h410p?E5BZ)44ME57)@9'%g^NYjhFB4I:[]:4q+S#Qagj;Ss^_8,8.HJ<W5Z(IZ;ECqC;+$r5`9t[`%ZTCSXZV*7[P923,0!)m\nD#ZLipJO%%_Y4k]M"d(`07$b->ZmQ(;k"?^Up^'@46"+@:8N#8oZfU)bo*DlPn*VV^B@\o%GgX0Ir.]%99K<Q$G,,o=8bbEBdlp*FVP^QO:=HO=E&.060[.C$^-Mbjd9P11>@M_R==P=Fm`2[ILc-oJq[)BaaViSe,K%%a`YFbhJGe5#\rO*%H#3*4o42PWWh.'H9iKBH]2%`2?Uc+O(0+;Ip;hn:0l[L&o?QYW0fY1<e:NYBqU`ih;`L>(d[@UD/nFY5CBsjaZc=X1S;\q@?\E%]%JJ^a^Z$n!>FOQ2T7me&""c'$j*f:PProiFBB=eUVqE)[0:fpQP@3SK.pZn7BSoqj\F<N?@.-1T>fR_T2&mL(:e#.+kc[M;0Z#Dl8%=F0EM"74^[!=`MtU2^k]U'XcXOSM%[gFcjC(,J;E+'*&><XUd-_RNo<+YVQf+po!OR?$#\7cO"1)6:\_L!+$sY5R\`^EV;/M\e"q%Pe!'#]9N5d/DdN1<ZG685&1iKBMlMU%'AiCal7%h?V]0\Ri\Tf!8qNd)`VPfJOH`e:966$@>Jc3#9'Tic2ChaL"8a.b[nt<@F(Ch%ap)Mkq!>-aiQ$6k449jZe;H.E45gMY$a_l#X=Z@&]HY=C\"s\^dH'_qL+mUF#Ki(d3ifhp95j*H?C43@6.+3Jo\E%b:qLTsTjos7%E??-JPP`UK$%sAYoQ*CTDhcb7T#Ge;JTOG!gc3SHa%$.4j"bL30.Z?Nc+H^R^JF?O]D,9[l($CNG%+0M+]t:O[5+]`c^N28)%[=r%ZLDGbInYYJZ)b8J4P9g<e_9+RC/)YpTY/`2FJ^k_*(OGRaf>UG-uBF')A.+iXmgJc<F0eTJSYk7:p-:+5?UQ0h2"RF"t(hVmtdGs%0,:<=gT'O"kN0YS2:=$G&]AWUB@r4W2t-i!lET(&<;BC&$2%sj/i\>;GL[k'M(_$6i!_$K-CRn$6smQ4NoG'pJYU6@KIU!-%b/Hj%Q)("kL?DsM:?pL8]ksr&3jYg>mM64uQ-#jTll@U\,0<TNnq74;mkbZ/(q9g-T`$uI*j[5hb3NcDj*l/7Rs!B0QHM]Uf5mW,QDpjl%o[G=TXm]p;-k]UPD_o>u_El-#D-%I*'+@X`ChpZbK#(kWr2L'),iil53F&L\P1+ob7%h\*p!V;:B1$56R>Fr1[4>.Q>Ze<JRqJLB%ZX-M%AufKf]%ES?&:,*1)WbG34J#8jhJ9PP\^g'@kl_fA<_sSWU?k3B[XrHg.6ONOcJj/Q@/pYhgN:/I'$]Ii<26W+Zc2:LBHTJt%ej][aXU?*:n3]/eG8@kAdUEYPJK&LcS:hI(KJp.e6)E:/`H:(;Jig5YKU;RnZ<j_ja)FbrSl8)UERLnk9sF%l8I]jq_re.6`8ObL%_uRU[&'`e<jIE-07kr?QM'-5sqm:)"Kl,"+]I1[d?*b1BR])s-@5ro]%Q\a#YIr4EFcVDQWTQFr4*RZN.3M<#_CkC.W7r-57q->a%6)#=IVi7;i%BQOe*S(($2+i'/:-<p.Y%mu\IkoAToud?.o=JAl?P[&4Z%&6BBNc!Sj=Mn>R3D'H1V;a('1^@m$nmVmEqEJF`m3"F%KkY5r*kZaD;E(YaB4!`:(CI-K&oL)HAEjgK:kd8e[#_5&Ojq+&Lnf.oH^gJC.Hrf"V1#2KUh6O-3qdEa%LR4BX<*_0L!%?al)tJ%%b>u`4l;H(OKSI@/fR_'#/X4L3\"ckC5VZR-8t/65D@#Q9VK5c?I\5lmTUp31$[5'1.%N\r;!+k')VGJ]&/T]]$ACTeB-:klOl+aD%RW8-SeW0Kh$[tWn3pQk>3aN*.\D^YBY"TN"7^12R=7N:Vlg<<i(GCb3#KG4D+S9bL>kI%XXp[j!s'-EkM(5V$[0rPuS/G,\oA<cR%R]Ecc&.)C?/c'GN?O"5Z7dUOQ[2P/&Dm!jMpT3;TMQ>N*h]Q`<];qQO]qToI-'LVfDD,cMl`P/@<MoZ'0R"EX;U\oYMeHG0g06b\%6NsQ-U0%.=06QcU09.pAHB!(aQ,k#<rQ/G&L65ebHe"4iA2K:iM@76Y=Auu#1#p])[0XKb&8OH*[>4UDftb+J.S[Ydq.q1OcL<%P%PBD>Y@,-*jA'QH"PAs2gWSs&g<t#q:)OA=R2LX`hUFYn4J(`<u2'CMP[4"Y@ao)QH<+s04>i?-UVZnthB;r$sRrm/:#hOa::^fEm%E*-$EIGTSbUXB.5qN?_/28\j]W#?Wb$s=7M`LU$a3H#T63Q"'j5jbl"oV;YVgSM,W:*:(tUYQR^Ns7.(1uJ?G\:o/`=A_Rq*#c:B%eNiSlb#NFX(g8R[-DmUEn_odtY9$:HJ"NmQR+Kl]1cokUJ-d0$aIjGLj'&nrW`4L<lben%#KC=E7A9mT%mK661M@ndP?PL1n<Qt1%Yn];fn(DD(:Zu0E66/MbJL0[<+iE+4YVG=,a>OZR*[r75]%c>r=f\(:^S"Zu>JRsH4Laki%0RF@ZDuC-UL*;*Bhd;PZn$SlCpP6.%GJs^VGe/96_d78&Tf-D3c(^PMr]?ETM0_ss,7P5i2#sLY?]7Cjo&)pC8iM8,\YDl5lhZ8@i9:toFpLkQEM#3#mO-#S&ON*)jH$8J%QG,^RJ^8c0$kB.@SMR]fJgfI'_NrKd[8_sRPEZ(t7,pT'YT9b$bK\po6V)6E<E4u+VP(gQJA'TX3>mZ@l9%.=!-kEQ2!:;!<Q>gs%FfJ(*Yn>&ToV,rAU+?o.j+ZQ!HeC%Xbs7tsG_Uuj"pR+rVpn\iW%86.:@JkPW"+hiI).G+mYT*`fsjJL3AoGUBV<>mBIC!s)81pB%kiadFP<<u%%r"d>.d2ht:hPsNJh8TL?JBj1X]Z#YM&9G<k]sENSbl;Se;7Wm]N@Pql\]lAo"jnVq.gfW<2(b#!4?%VGgVE?i2VCK%QrTpiifaZjCVmIO_7CYh$8P;J3"@EhID!tP5j23]T#18NT":NFdehk6Kt_Gb=!]+)G3t=I.h48k'o_$##+FTHSje>2'mRM0,Mk9r%aQi)2YA&EKbjC$JdhtqtBDK09OB/BMA"A26W@P`=H"Q%q%$F_#EuZoIeF4c]IR`$=%sh<gh^DN-MRBZ$kBL1Un<"otALstmN4fA.%n[_,5;QS3SYL7")!]rl6B[`k=2$ljf.jEAU'aus%EH=OK-!#f*hu$W2P[ko)YY+dsi>m@VZmqg8Z"*/"/i6S];A0NO#Q^NKeIe1j%<[1S?>N>W\W=Bu?7C]IWr_jJdhhMPsE\eL56Q49[eQN2m=CO.Y*Up?JNe(fYlIricrn<6.oEc'eDR(aJh_hd5j^PZ5pK`$U41Y&d%2UKU(j-CeRaAVpoT(c9SPf"O]r;oPpV*)kjDVSQr9-p2iXAoYe!RhhN>HeU#i+G@9"c$j.)%W<q*GG"YTLNb3$7<@uZip+W&5iqM%QJXaZZ\%*/pcTj:HuuJ?SY:p\X>_`!'ssMYVY,=ZGSq?8P-X@\I:%dG/@0fS0k=Cj>o/OUQMN:#`;6H$pcD"(9fc3Vf7tetU0g#e%p9GHKR_iqH-U7dJ`m-AjL#*R<-#@'EA7B[iNtlDTZ>rD`!+BGr1Eu;k-T,=tk*2-7cuW=IKZD$+J@W]@OFp(X00Ru'_)LnKD(mO<%jc/7>#?=rY$LTehcVUe5"Qb`&C;7QA-Rm50!!]lX/FY+`i"WXcJ#&RX@FR@/PG%F\h.ass\nqM@+Hs7oHA`;?RJX6D9?:MBS[.dc%g0:V_4B,tR%6-BS0-.dL%o`D=jZm:80THqb`JjQ-,r:pZ@1D^PXlhP':^&=&CA%QmV64*tm(o_3bAW8><QQo^DI`OZEN7@-AprD6%R=-**fmHmC3@c_BPHrVD@:dMYet?gM8o#9EE"JJ:$k1.hb%H;_@'m^lci]*gj(sRgh:,7Jb0J;N0p&`n),;\LChJd!A$@M=oBHf$%<A#m3N5<]gjs=/>SDQ1W0fmYFL<u-$f/9hM'@>h.E5`Y'S=USD5)/:6'Ok>'CDm]<`q<q;`nY\g5g>9n@EXnJY][-?bU?+f_]b&Q%&E8OMRl/[%O^?p+M4ORd?H$d:_eQS/=V<Hr\1?giK5cU^F9XIYSmtGPONIjont^[b,GO;h<Au&hUOaD[eP<^9X&&fcec;VP_L&9e%PY>V[MbDjjjc[pWcI9NCi2eITU<8+)lma5hg'm%%AP8cFeS1VC0VtH^6(A!.7lk4<Udo4.<//_CaXr18+ltLVC$fpP1I4Fu>sf'G%?9Em5)_)XGG%61FZOgQuQ2j4(`Q;r/6`>iX8-X_99NF?<,:fYXg3(6]D9lsHA^4#->H+@(>JHMV<J(aYmPm:$37/7FN:ppJIdTRa%6aH!GW8d^D)-6mH5r:#,GZ"550H4b;D%NteR'7?ce],R7%<u$VgT/!$YlWO[G09+EdS39Tqo(@RGBh+j]S-hhGl$p?@B\/qel@^q%cVq<i:V\eb'5l'=&#Y/=Ro2-kcXUaULNIZt%!Eb-?Le_#VN#"V9]4e#**?C]fthV]")"KTNr12mY8#0,.oL,?,C5I6er#SC0S=\'%>FbT.C2Yt9^19%K7bgmpE)$!u/hD@4NmeE2B'g,,9CRu;rkN-1@UXSG::]Bepj:<k`UE27kj4XKR#-Jg2KD9tTGV__QYd5g[C,LV%OfY+/.Pp^&8La0j--R:fk7VEiQU&)8:72m;?$9O3>mfjuMO8s%21mnMSi4jZUW);K;nB7'`5dcb:%kTeg`=3Mg'@,I.Mo:uEs>XY%9.<S0).^HBBS'A].%M_Z-eH&EVfIAmU11@C5)@N/_kSYNOWn)r\>Z?#M4_TpO[;c;B>Um@j,)I9m\iqaLu_cDfPEk+]kF&#:b>A^%h4+I1+C.f=W!'i20=2F4Z&q/46<a@+M^4P/U/eDXDe"9r8tFLhC_S"S46ot@)N]k4K228;@U9ff2$FQ_,X<Ri)[nGWq@gSA@O2hg%38'9]M4oS:`5cIp/`\-o[/5h@f5XUU6\t]rHg%gcEj>N+5gDndOj1=iZDjfKRY_I<5a,(:0`mLp39bn+b+=q/P9MO/KHi48X>?*g%B,#rB`eIOH$L\UKPN?K)WKI7Fo>[\@)Hu;LD,SU+P8D9*,:_5<iJn<LbB5HVg-jS'(If\N4b&b`:PXA0OL:N!M+Yo^3b]l[N+=27%O5K+o;`p<,-mC#P;Pd!s*$/YYaOTb*NB1:on'>DK2e<IX'ViW^5du7U*`STmj#"_QA:tDE(=m33HXt7UQUkfG1[##$Ss)a>Y%N0.%E*$8KV+^m\Nc4$P8f]W&FOt1XEnuclqFnK=\]s"@T^\]W)%>Y`n!_7qEZjA:+L<rlHt-+[!;G>PTl5gnJ0W*uDWTIe,P8GJaup"<%o9!&P229c.pAte<`#ZWbC9<dG3:!h>I7QC?6l&$Go=dV!elM51/cj-&f=Y`4Q_?T[KC*iU+,(:e!HkN$eUMWQWoAUr9FGn.`<>AQ%%5is`LYl&%YUGJ]%fS$.8Gl29\_B3q[g:'",4TL>1=*?!o]-^g/r!WQ*<"LlCuuba/hJ;ndU!<Ae,XIGI>7sCOKh/beKKcDi"@b=%Ob%^XMaF\<hFP>O&I%k#ia:7OE@#CcaWd3eaBn@FR%aG1'PZq=\Ya_pOM8CdahKF:O=GIu`^YOBlrgN`W@kX>/;>^J`_/-lbB'9n%.YS0;Bf##>M[/;TE:qI4FYQSLLp:iuF)2:I+m5hu=iqEq9L1J3]HYd1KUmO:aQP<Q7BY>bhF&/\2C_<)$\i?BH27"%mgT@YM_qq`%LG6((Ml0!C/gO)%eZq,RO]ZKLA)d`Tb)TFtIk]DG:4;2BCfTQ]DD_9+%i=44S'"Jt<DUUhl$VWG44NM2-lgr59"qdaPdhNXhNZjU%Si/3rXL+H796ig#$RY0Tf8VaaOuPr*`"hd\)(1L[mtY7LU7!tUof"Crp(/H/`"*ccr:]VX.>*Bk+]QQNE4lsQ\#f'qMQ'Gjm&WZV%f51+*\P8&.'<%r+FmZJBFS2IOjf<H7r)S.WN:L:qfIqAcr+aD,*bWoT<n'%V5eC<Wj-e\=\IDEYGe)s$D"fJ];*(0g(HRq<nh?Y]%X+IGk3AoL_7<.!1\<N+X,UUZ?A=+BeJ,seY"m8EPBJZr715^ZpJ&m8-U[GR]Tr!^TlFVLnIGb<+AI'<%)Z$ih*J@^@./)b84?oPb%YALKFduoY6-e80sml\<:N@,J%R$aJ4N^?R5C/:6iDte+`SI92(8Ic'0[s*[e2I')3bY%u;K/7"e4-U=oLN`*(\N^^Y__8.?&,4c[%2,LUfYsc@'*=l<<SRC)%WNOCBECXFo0N8B)J$r4glp[`[d%pD!\5%A[KCCi6pW8a6HEe*p%@"BfUB17K9Wanl%_u-*C.iQ[ccRa`%7I8grh\N=0flC_qh(uj@@gjNLO=MPEqLU#IXX<?bZ>MeX9S5?Ihqd,@0154dMVhK;&['KZpg"AuKW5RIp7oc%jI(pEpPk].r,p,g%D8?]i]/A(-i0@2I@/:<-\l-X*^0:;g/u^`8i$gcK\k$UEf7m^m='a>T;rtY-]IM8:WY-%6.KAQ+$TN%DHbq&$N$OF-MNqM:OZZ<;%Ja(W@GXcOC01ALoAhj7\a<fk4K@"bN\dLEZ`7d(:4G]o9>4r@XG&59)1o0QPHj%40@ek"#ce68^CYCG9,DVDJGJq_;qE.o?lTDJ(%?SP!tDU1*1<`FUu:F(K2k*it4$J6>M5A^8H8Qh>>OCM!7L\gZGc7dAB?nP"HH`'uNoF_HMI?Ba(DW.;@.;3$bS#;j#%ZKifLesc4%RtW:]%dDk1jJOrPg^u,cnD[;O!N/b(T=f@4lhu$5D?t$Vap6onUlXA8GAT+ZD.TFi*1]GGlU3r1p,gU>^*=RP?S(u5g0L%t:$^6L%!$hshd7\sHHS$jK3gN4,X42Sf_Ncfo3[fRof-&tfn%5kFAP_]BAHO_h;9<+##TX(jgilJ'_IqCE?*nh#C)+m86Z.)70-sJ-A9in;%MnZkE]4R0B'LuQ4\>Ns3^(+UlCkmEKRgS+qU`B'KV93Gl^IQp*,G.gc57g"eqHNHoT?^BGm%3*a\XhJXOiAN_42pcY=6-$f;64:_%qidoR[1V7\"uB?r,'90AoMdi'=bS%_2+Jq7bDb?H)nBjhKHaRs`b`)-M4)F`^"AIQWOI2`nI*eh'X9j&`_=VOZ>KRd#4W_SWdG&<%6k;Vh7K]\AGU2J>R4;8_9D7BeaSB"8kB`#M`u7.iI\sU+9.[f8N"Eg]VGC$+@#<Nu%1H%DEeu_Y]2KY#66&'b%U12o)c6uq0t*<h%ceGd1(R?H/6$TCOb&m5C%@(;]#^_pJ&<X7<q($:u"n7a:p9G$7&s>`(_fhIOKgm;fmYn-q!,CUH7K^l.I[EPI38O6mRpYGNK53>(%a/>*%ZLZUnXJI9"d67C")?u0PYGKa71Y;&R"A:I*+n$(#A(GpOkh`N%/$VPg1oUcV7ige=A3s22Nq4bOE%]M6f+GN_5F5<m?r]86%+3Vs)ib*M(6?D?8C3<\),4PpY0unX*=IDMC,`!P9!q`/'IdP+nARIpmZUDB$l-Vp1/tn1lD@3:Y=3culcbJ9p'&jsX9;WlucKR@S%in"^p3/Q'%N(5G7+kWr@.IIgfK":KZEfqU_HCjArous8(<U"r"!VjO=CLp0fSEbsoB1Z#^UBq:DT,D%flI*;IS<ZYNXsZ>#&$kc'%h.r%;3@6-)Y*-%/JE%fSqiX]<[G*hLmYt[%':-GhBjm,^J>1m0ld_?/!`Yi/E@ls#XSdq`,M^Zm`.@%Bg'I.BX)<k0U9,`[Qh.S&%;SlKB/2u#m`+#f!b_BTZYPbqd,.TgofN"2sePL(2qgLiYYjqp<4_1q&('QYaid"dApqOj$@SJg$*"$tWKO^tWbY=5'Cg\`@NF]!-%9c[^jK%ego?&k>\^qkYQm+fHn8'Nl3l\)CGfb1!MhJV)XW$,2U]p5G\Na9KmSG@d=-X72T:-CjdAlY/&qh)Z?\'*=,ah<C<X<uYW%<h1>?k.RW,ebL$NLas[k;^5r@,KalZ%AhVjI."e2UMpM,9(=qI2A(h$Hb-qsJT_f2'1L9A"-a3BX51$`Ztqj-<t-Q]f0Rd###`5;%0Q#1A=d4X,Q-a9=<$`Lh'MZU#K"]#8.-H_ReE"&5HlGlO_+DaA`L[O_0\+O=E(@W^.;'/&3WZlk(D)NJ@k?`PrZ-WigTD3nQ8@*%%c0kSsm5/Pc>:;suL'JR'+$0"A>3KQF]];[OQZfS:<T<\K9UTJkEZo4(U'*ROCF?Fgq@K"e-:m<8a40O9ROpt0N$"dm@k)Y*4+)&h%R/q%fHe2:ZHm]D>PZ98<;g__FIDq$mAC'ZWF$]7U0e*F7hffG*dN53<&4]044s?.c'EHGmA65P!gG;XU5bVt8+KJZ?(s;*L$_FCJ%7ET?mrq-dl-L'16IBl^IL07(;H\%OrJLdUP[?D'Y9F@QM?7DCgEuP@kSPV>lH/hHDM'Gf0Mf](`[^PNV<BBRg3DpSb&&VEL%>o&9%2i=Xk)&Ji2(Z;(nT^1?]>nhgS@u".4]OMnO"V=[J+ATMJb%Lr@&##5G#$9&N2Cj87@0PL5Y.D2[6H$kLig\FlD5%Zi%YRYW#d5j`%!X]uN?amh>j8jT*Y00LAUao*CE5F)=4Y?/6Q#/N[^l10RUD1!N\d$uQMcER/,"Kl[AO:X!ZF?/AS=l/tmC^"HXVc?+^3+WHKgd[s%!5=6R`aZ;q6'&5WA_rUc,`WH$:9BZ>Z(cWZ,/6X_QS5Yab-J&/-!XbVEnHk9k/^j+d/d9R'N-YKFFXW`5PP<Wg&Ut1l`jIG>,"4T%AI.C<mr?=3bEZLL$B]q2llm"^673a>!P62'I3T*Vm4_*aTaHRPOS`B"aJP::]-'W&WsJkLD+*=1`$8OL4i6'48#EVB+s=+`HJlo2%:=p(g1D1**65;s+ln8^P'%FU\:^nhNbb1GOi.e$>h$Veq%skIL*(`J'_8+..cHMLXTkGXtKA!\f<^e^/;6]=/jZU=O`)Xpe]&q3R%O1PX9gs)crcR8#97!-e0JRig;pn`nPCn9+4(*;4^*YK5aMQ3].*b][k/17f@phj2!Mbn;Z]IcM_OkY!*VDU^5fLcXVTEqKr^^:bY%6(=YUnHd(]R]$86f/Y--$;*(Z352DD]H7?Gha!N:$ANHqJf.^lKn'pd"=o+hC0%?K3g!-Kk^\NF1O$b0NJc]mNT-1/lD"YL_%Qo5%`sP0qPBD775^3UcSu>$jUnUQ4M[Aer;GJaJ&t\"\2/H^Am5P]2AIB`7lU`N_(:Mun81KH=^5;ULQi*_iqj-,)X<ti)K&h[Oi&N"P%hMoVU>\C2i3Bu(8Gh3[sU(W+(a">KY'CaZGX*)Uf-lon9P+RYQ^_KFLP1&RIO'gHK5VV7e(npkSC7U57=(SW2\H=3Q\8kC.DaK.6%BbmpW%2=V]H9RsSljd3/7R$*jr^C6pB1@m\N8)S04\@R#fVu>F(;<mJ<bWjji>-R*E]DSQ=,B/rGZ.Ydf8Sue9+OiVbjD_acD>ls%DL3MQisgkkk_`ZS]p5#4_pngV_2:pD*/M`nWVb\dkqaf;Fp)qkTJ'FMJPgM)ZoiKh>7B5C13ppL<R9_bDK/^(@?WNHY<M_icUsIl%O!^aqdE=^).ZA]<J.eU!`U2s,STftQJ8?V_JP[MGL6)?B5'p`q./;rdE,mp_C+"]9r%Q#VCF/7u4#5G:%+))OR_kEJEe(9BE3!aq%C/[+;dAJG5NRMXlQ++i-Bf.Be)t^D=CnO9eS,=VaC=1u'=FTYRfBAZu=`Dk/O$Y@XbaX=ro3ki*2<_V<YdS^('C0;QkjariNE6t`%p9(,b32XV!4bNN]Ak3J<X'CPQb-^fO:EQ5@9b'nQ.e/](oJq*2,RKYB<<b[_R+$a\B2!"+<qAXJ0S*>+EMCmV)5-Xc?Qb"Ade'tX%l>[7e-nElP$7T$VHZ0!@jDOK.+`lpdnL"LCFsd'R305sZ(AW.R]!plnNXCn/cYbi[i2@AjPGQ(lZPKRn(F$`i;J#Imp20(`]3J85%g$]U_(2CGH?KhPQX6,fd@R>Xc-sZ\uWWq?qiFcCpg7oEcRY"6UL&hoQRj@@)LY1*T,PmcFdD^ZO[n'9H64EG-@V'\P-l0/`1OeuG%M!V2Y.JWkA-_FhAk.DIkSR,<B(1t0&hD?D$b]\P6&37sNQfCYts4@!p%E1-L5j;rSUKg:/)LbP)j:G-NOLpPY&u*agAD^S>!GhP]%maht@TDh,U:]2A-o`R<.&7<ro8j90F.neB%'#-Scc&q-VF`.eMHm$-[niM$aJapjm\n20XiIircmO_P365='A!fMK3%$X0*7f+]i%Sjh]SZ6^m(fK63;"$P]jVce]_j5eY;;qURZ)9b#nC@LfrFiVH,7Y?=%,^P/54:q?m"=J=tkPIiF=!m_h:K"R;pi);9Fem._j._!n%5UBURDa76LQ'l++h]'1+j6p9Is!CpViJ`geR6BS9r;P,@G51j+INe=]0rW'#;d#1D##]Ic`aPUSnE:R8I@S(#`D5eoF*4M5dRD_6%WcoNV?b%dOgB_W[Sj;YEp9b]iN_%859TWjJ7X'bdE5Z`4H^V-'3eN%0D++`LFACf(a+\4p<*!LA96)f;;@)i?#T(hu:EdHfE;c;\%dHL-^<iaV9ehkKM`t=]c0V,ALp(9N5k9HdqoXtO$=tYIRBFQ"-8F%OX>m5_(FZMsr'jcRSjYLMjfeid?ejmSFkN+TFnTRQ[]D27,%SogkZ/iA+8>:7=id6I3TOpct]NZGE[]G!E;o_O=.(;,b)q:ArRicCOpXoc&U$?UY3O5t\>+OP"Q<m5pnWW\!qc'U/dWe"/<+RXg$%a(H@ibR^gV0WhC,1;OFP`3&9GKBuX8;t1Ej'Yg57,AKPdR1D&b_W8SWK!Ef;L%(nM3Peg"(TA.U=$r2?Z#C4Wb$ZG',*46Zk`m$Y%9P)i^ifa*g38@5od3k2S*AUE*JujsV[i5B_C0QXP)9dsGN1/UO+M]'citP&F<chEr=&NP>CZhClL/Qp6JJ'(9nL>'@po_b>9CUon%j#!c`)$u_5!Vc5uY`QnF7r#4$TR[SUm@mT>b$=.2,^SD5)^N6N43!q\4mj[=k]"1c0msiRV4dUaFpDZVF`<om!1.Tn6H;AAb2!:E%Kr<1LI4RSH=B&sAr$LaLb+ONlY2a^iR`WihBW^2F[bGMd,?R3bHi:XgYk!5TC&f%!57PF(XQts]Q*e5kHdoS9I)?c,h)g\Vb6W!K%AGCa$RAL92X3I8!g@FPm!C0[KR,Et+cLb$0XOlLB&-W0f=4L7>GB%DV@RjOFCc)I:CJHQ"?.dkB&TDE`!=\/f3!Ro![FX@^W)c6M%FV#hf/qD@kN5E"8*MCjRSro2]13X&:L88oO*:YIV+$9*sdD7Fj5VMZ8hl(&I)u/n$pODi`s7NRFqk(V$omcha^\`6Tol#?Y*tQc6%0ZE4ZhWhlRoj@[n?iSaXoXk.mlbE5D5Q-dahu;d:ci3NCs#YT"?iKmd*"W$Ea+()\,q+0XmB.Ul>Y:W@m?/-09kol36(=5Z0mAVi%I:cQST9eltgB1C6Q"jdBcF>]HJiDf]f`XPA#ea.'>cZb2!M==:i4-2V0gHMhFH_pu&ks$C$Fk"u[>G0I*F\)cF_qTWc8jKk!F&L9%I)=KB+C;S$c=L_'FZaFUQKb=-bntj,$&dfm%VnO.p,g7Q1bT-O^V)bsY[=SCDrd)t"Z/hIPBcBNWG#H?'27kmVp>je2Y)\F1n^,]%02"Xdao`A2G,MP;cN9k]9rPaT]5Qb/431J="r:Q-Qj8cfT/r?XqQ34NFc&<kiOjh#`A34YLYlF0D?P*lCZP(JGd0k!@WU6KY'K'c%8;Jo^M9c[G2Y'dAc2j:9IuB'dEH56E%0kj<n6&W]X;kX/BK;,s?SG2-.YW_Mqo6UWm4$?JR4&2QL't=25s\A9M3RO2f59JG(F*>G%^%GRnX&="P5"6bhgYSKpB]'S3HJ=QBFk''$`o(L"S;"=BO!AN$F/1h@cVJV-hDXq=X4HFg$ersHe5C6nZ#bMhT1+XM$Ptm;?l#1%%5fCaMb7pB[pp`Fu\1UfI:>Rktp<.Lje5*bb/QO)Qfp`NLV"r!`nSn6UMg("Ng6YT\UU\Q?SJin:q!>]:dt\cHHFiOPYJ32W+.bW&%Fqm2alk;U0Kg4p4V(?raXul@RB[qd+#Kaq(kJ*q\CEYS#q,r4!D$N8lj3/)(UaW^W4<*;Yd6]k3,>ZukZbXYg4HQjuI=?2K:'Bt8%d4XEk+]9u]HLQ2e<t+b>m>J*Hb?YUpdtGCoiomgucogA3rVFrm5/^c>JWrZ;l:VXOEUFSb!R;Lq;sXP';uH>5/nKh1Cu\jE-9cFg%d<7)^n:k+d19,\#O$=KIju1:*`1FndMP$C-g7d9QIHkrF`M-NgL;/Ce>jmnp\;%oQ@kn:&J[anYNWFpo$4qVER,Kcd$OsC5#?Wt?%bhQO4dtK+9*Z+"pj=c5-dO\>-].BB$1AEsUiE8D5m]1C&RFl_8Mh03*"q5Y;FKXWFNYQ%F;;4TY&_7#$9^`"\@hJ!.Y.BA.emp5]%Mf0@!:LJK9?d\m?mbOqUne*-%-Z*'+^^SGFMoXB`GDdMI?'&r,/pLDKhldN5^Dc]G`XIm8q=u$p7!#CTpU/\UA3.+R$:cq('2D5"%^cC!K=VWQ1?KSlmo.sVkBd4\_Db_Un*;*>>[H4nZ/Acs.bp2g2o8\=6D=o8)maX(!WWr%\\g9$q'sI[!%Y=5n1Ig>j]kq,"i`EP!%q5BXO5<fL`P+1)'%$gY)2&ph*1X>7sl#JDKrnbhgSaK\!(T=7LGdWn622e8qo7QJfrt>mba5K0GZ@\S=m/#K(_k3k+[t2Ds1D8Un%Fpn7!0@0cfd#Nd.3F!)_;^u=4@`\6&daG^%2TM&$iP[T]@3nE3FJ5HeSYn.[876a/0ILF]^X\lZ=1hNpcQE#%j7]ObT,48"SHiIG%@Das7;%*ODYtSFjBRk@MBACFYQM<-^FBh$9*C:G*ZHtCE%J]VDc=!B+[4KVp*djN/:K38m(1CJEVH)dNdH>t.]79YjQ(<0]Fd\Zm%(e45;"$TLDZ!1lmSR$]f4N(<.g\oXLb@R[?.ZYE].bKf2pA)5WpNR1I=k(#:r3lHdd!9l]YPY?O/Zk%hSlOjm5C`<(a$.hjRoV*u%)=aiM[Q1.<Z(.b.0HOY`=q=;/'Y,WP.g\qfC7$?Mq3g?]Z%/XfnK#IlpTXm]$4`K/J[U'@ccR#j114Qe%/+>Ikh(QCGIjp,6qeX8%H3uQZmpJTZ]`hKWJf$J&LX:(Q]X);sVubisY#8KVCWit>-Et'egu*SS,\U9&]OJ45?QXSDTg$6smLTmQVtpYbjZ8K7>`VXJ-UkSI%8HlO(,(EASQeiqbkt\WhoQDTCFC@SkY+9;u?@8Mm,%nbY4+J^@ijO5gH50[b?Tl<XKhe2!-QP%[Ks"1kl\8c?Nr(RlgW)Z!1?<nq%0Yn.^,r_sGn+@D!WAfk_BNRb=Sg.?h8bHM'OK+%%AEc)A[XMOF!bA\C483g'GG@.XqD.9i;6Q$E/@L5UF0-0aqCOf"/\^+6%kXqu%6K")<=]YEs/?hl,TP'7\ASJP5hQmTVA`I$^E:unZWUJF_cK<2h#kp]"24s%/G%$i'63NBDkU^O`JE3[^c:a3Z(50kuU16O1S+-t6%UH`jY_6E)RWSYU#4oh9DfcJ#(,Hc.a4\Y'nWou\Lm&[s<G[.Wn!0q>8f'%W_a9^MDXl@7`AWT_2Q4,cD,KG9+>fhccJrh>*_]3jC%q,.=Tngn8L:8S#doC?Dr)%dc(ZFR'XLeFt9QJRrY4YEQi=`OSH;?M?kldEer-@=+\#N90s@GC)nck'ek,aN2\dj5)&%k!BGK&T(W%B_mkQOi;7-!^u$BV;=)LHb3a.Sq@6H#+(5/:S]$VW6sIPJ`NT1\h?Qk%uoD^oSoR7bHmNk^U$JO)outa?TPcN3u"<PoVafYXG"Yj%0\ntbAB8d<QpkFg0NuCgripj;a^`pndlj)6O#<?WR6M44Og!'TDUH8.9jDYq=afpg49b(=<HrSuSh+*eb6bjZs2)f<M`%`K8aVU)%s.cXGDT\CGT?M_(1bprHoscVr4:3plE36\gCb=Kq#LrEnhr2e^B1"XR^2XDucdp&KM,lfDor;Nk_,QZ4Q1B;?K%"f$AO]9!b<1O=%-I[VHrelZ]TpS(_.:(ep4XGI)HTk6%;G+W`JZ<l'Z)N;gBJ2QGDNmk0]EfmMge/-GM.uY;ZPt'RmM-<1o!7!kI%nJ;obk31-9Zeo%WKf^-R.4WX*"ru.fat`eaG%ZXU]EHWoWsiRF_M=FKgIYKN!?5e.6!iHL:FoZ0uZc4>1U#T2WaC*>(pC#Vc5=Igc%.<-a]qnl3J2P%*JFll1C@D^LW7?Y58&BVL8[2fH;mZ&Pa-2/*\Sc5':^QGP"\U3cmV@)0i,4C1tQGT4\r[PT)1DhHZG_/P,@pqp5+6nfYM%e1lE:o%>%TEAW:UJeq`3#'g9s5E=^A`8Vb&o+AN;g!h5B`?.:/N`^M?+Yj<$C$?M6)6J?QQpgt^^'WijH]JEVp@5.\-MI0`8$OC_:,UmK)k%8r>A3-WQU/Hp%.Q3S8ljl^?:H.Q":Ub?*g52P)5kR#<J5oW6R:F=JP;fuTYOH5_q6B@4#.e`t\b=t"#-AN8Y=enml#,[>Se;7[XI%X@F'LnK3IIMgDd3gpOY=J$<`A?=)eOS!jJWLT:8G%5:#pYs:ERIMI03gTQ\(Ktg\5,m0%HfqX"ELtAGO9l8Abn5Oa`s$0<!j1?q%%E$5K).cF;eYS0!3ASA@Rnf8f"?ik';.2V_@C`eA8D(c40cGQ,)^ZPsfJ:`&O(5$_#&%eJ:SE&qa_X->5\U'2T>UZROXmCdAOB=lt%Y3.T(%REUJ#.oT5kN<m?66b?4I-sK#^Xj<BbFP-/,N\66%,>fOdoNW*ii\>%[sa1Q>J'lhCC*>,d946fDQQX@>7c.%OM\1"T$J`(%;5^WJV19!t/c4foY[$@CB'[k2<"#i&I+e7=YdoD<NjCTG=WuMJe!@l>r=E`\_r"g#4&:ia-<6[I3]\DM=iuE`#T.NKD*5GjOQ+q.%=-P9I020&/%QB1C:V+'4>tcLTlf-Lo7e,5k\<<ELWK@_0Cuc7^ndMkJ%Akfh""mLG?B1:RT?7bY5&u_:WDDp\PW7DXiB06QH_(2'%6i"AY7c^%G^6;e$WU/U6:t>enHd^;<O3d!f4?UebJ2$V6^>KYfj'f,UO3ZG?K_3dKVa#=D'K&"65JI'ol'sP;_==Tbos;TP$9$i6%HT9[(j6tq8f<aXj^NAD3BUku,_sY1PL]L]P,b4%,e%3'aMHl[uqob(kX7]o35P<r5Z`nPIo![$!/c)"6[3S.49.-P)e!#L8E=WE)%7DZKOjq(j']rZfVWO]/5;MLmS]g&Q'>u[Mi\F6#RN;"]:r?SLj;K]X"p?eiA&&cl::YDRSNcf*Jmn\:s?$b(cd];NZ6$*!@n2ri!%J55Lk.Xg^"-dL";V7M*p&n8$?aFL&]\RuQG)d`3=bHj6Z*X;!$rBKQEd0AY*.!at12W"8-XL2irl)'S=bec<Y%6;Mcb^QJ"0WKlD%H)%`$r:;=bC>ooW,0Qt8H>qD?>?Jmj6T"jt-#l6PB(2J%EpTU1T$KmZh.]emm"C]HI%E-578f]\%P>ZoSROgkY6oY3pu^#gU]=]@%+`'cF1=*r'o]31okP#k>>?,6\oEIRX845V)dI#%U+70tne\rV_d5Bm_@m:A3qW`R@%]"LfbB7YK?ln0`^aE]tg!!TilC_@8N#(fD%PBFm54<'u>EaLNm*l:V>=a'5Xcq-#VSN5mf?!,l2Q^q`0@d,/"#pZTE/j"kF%U*A)TZL`D,r#A:?Y*4ZFX0#+<(VG9"h?/pkBLk8%_34HeP.p-4)lagUc6Le[W9ZFeJGo1SKur6YMRC)6acUpih.[TicM$/sHCfabSDJ<s@dUloh9-P`1N0`5J#_TW%C)@5'0;NS:dt*W%g[2mC7;L!'G,O6cSRNtLD3p1_'.QIjEVsBXO'7mhUm3V'`N]slC"N<*[Rssb&E6R8Lg2(c^1n1]eoOJRm.c_dF?T)?RF8-2Z.a?[%g(mEsM4Fn6HBM=,,TGhMT5jD4jRBScC['e&P.PHMpCmqfo_Yp=<iuNI,Dkcl;+h=6q;ltL0i)H8^#=T]*\3"sX^f?7,0j5]O._7/%HP#K[e1(*BO=sPQ.K^0I;7nde7)ar-c/9mK""D0(c_j&WBDKS.":r62*-&&H''4oE.KZibC^-IE?[m>5lO_6I(-g]!]?*662)]VG%mF64W)Pd^@q8LBmWKC[sDfq7(]-[0MP!&+AW\?g_IfB,>^\A[=E!Ii=3@Wp&W6.PL2nN=s=Xd,&c+!R.5#hiRZHH=(%]kc7ftE/r%B=X53f:TJiY30u-3DOXt5=ckTeKm%om`D2$U;sTsijW9dTB8*t^[62O"o?5[DgtC)]B+1]b6li*d6[@80RJ9D';t!*9!2*6?3LK4%-BG1V3FCs_<A$fgc]*B[qYKb,PkNbeX(ni@4j#N,gkAc,4jso``*MF&fEAN!+$-&?Xd<@Bi^m<))=D63BniE$BS^RKrkt(23T@G0%YE\@8Y!m>qASnj@3IM2G>Dg1US_/K_!2.P5<?sc8=p(#P\Q>Dl_Ob4m'4FYj,oupRfXX3EJ_1q;.HULt0Y?N0gd%_(nacC`6qeq7%#:J^%^4i2Rf,#][SiY?tP;id2;-/2Z5;i"1L9sE>0K"7f.IlN&-hQHJ*l`RBdp2Z9n"Y9/HtBf0kuBQdTi=B,Ofsj0GnaRChb1SR%GF2NMd8]i2=QT2*@@/5f=t0iug/FQ!0PKZ_T%G)Ygp[*:fmHCb0No<k9Lh"u!]"UK@[Pi"4(6GfGZGgQ<lqL^UUeb)e!9;.D`)d)%O;ul3500@%lV%P"J5SL\4[%]h&1=Y%F0_XZb[;[\gD%rI,]jk[oH80+/PE=LrRBR/'$:D"SZ[W6A00GA3)Z8mi-;$*bR;Qr]4F68%HAi4X.uX7<#X?Rj@fEjMeQj\.JO2$sfB8*!$`UWG$TmjgD+[bZk0q*R[DVn)(jaf%1%mY(g`fhTK/O;Pb58\24q&@3o'!a9Riq$l%E+M#-TRMqM*8&3\K:gUQO'%=L/<aReN,)-D8,(\:47%/qNuq^85(5;2T/8.oTXoUu]^GcS_Wrg]M@Ch`L9;loiDbFpOlEhTEAAMp%[E0a-NI2k_2"J7[E8?ecQ(S6b8J4t8k@?Ml[<T5+KU%5@jq@b;=Z4.lV'h]+l=.g-7(_lF@07]lnPfMp]m=sT#^uD[+Hb2<'9C%X%lg/b-@"W@]ob0MQAs3hJbq]3HqtOj:"M%dO&.P(qKR?@9e@>RKJhjQZR?42-U5I.5?FYi($_KPr_K5`#'Gk^XV+UZU]Vc:dN[cfY%7"2/frdWq[1r'u:17F$-/3,ih/5fMA%3M=$&M^YjkU2BW8YRY!auT>M>%VP-[3?b"!a^6CWAF!,IW+!"LGe\8CC,@,%m$%Ted>[[%\q4`BDB\(NF%Slpmc)uHrjR4,c;U3',FR<;`gUWAGU+;SR\L@1*H*cS,TY\"p1s]c(s+eFmml6>?a:HPUZ6D-PDLY3Md%Dd@O,PX%qRY@u^'4/]TDWgHg(P;cB'li2gfPh)#A@/NC,Pdm9@b^4A@QD'eb[GEA`4B060S5&Uhhb:4!ZS7-V*bD\V&G)N%$0&129o/3_-KH%a8,e*m0_]61b`Dh>#7"ZX`9fjKY`@l#Yu)cDS("2IOke-c\dH,pYb]-#l\fcQUY;;;T="+m3L+l0;HFuT[EJU5[4<0Ul$#"`Wmah%nq,u@laDg<mPm^qcF?d7a=U3+*EK[sTmY^E<Ge:C+K,NbiMtlu5M=kRSuUHNe5CZmM95<,X4oN(H0`pD8S<R4)m$HXGT]cpa#WN^%-'t*"K/iC[-drQrkZH!Q833@9RH;0dQ!5rI,O\eMHl5&FScQIE!sih($X4Pq69JD^m9M$ZYY!a1m%l;7eYED^@NSsb`@RDsW*G"#%$O<Yjs-se3a_oY%_#sl'=6a+MMN:o9ltj@us)D"E#5]&]Z@]LoUL8dX;AVd+<.[<Qf:c:W/#\Fkrj5]djB`Kl+g7YMVbiM[9X;gK%^>nt*dUs`JnRt_G-_:qe]s_0J5@&Z"'kTV_`I6uQ)n4`)M21kZ/W0oF=sH,r8=+&+ZClFt8FJ$g8C%;p@1@D-Jfp2*>]GRFXkX=+%&0iOC7AF)&eQXLiU)\o]#$N#A7]ioB5XSb#=_eZ$dAUpgUYj&=9$Jrqq5=rS5XmZq@^O@=9@mT%nU'<?c:cLWb%Fr$>OMWCP2V(j%b#;d<*P_&79*m%e'[A!JLW+p.%Nk5+'tZQ7P_%`u@4@_66LGV)TZ!j)jns_J7UuU-ji#KfH?Ku[>53CK[AIVo-59"7BWu:[4,NSn%I^s-q9/*Cb**U^)k/Co^_,15A'gHZB@%J8J),hE>rT2hq&C.-NQ%sIs@]5>k=JGDq<]ShLi<MM"5b49.ZA/1!mJ4*l5?\(>1hLaN%q4uO<Z32gR3/\aLk\T6na`+1EGcp@4)SX"%I:P@^WAD]TmVBGk$4se`Q47eF-LU?4^p"05LkgF2G1Q5FgXNgqdP/gJD%,Tl6O1%C%qs.Fai4Um.d3A6`m+d?)g3T&_gh/GdY.>TXFXBd[jH0n+<ll^WV)TCO^^eP@UhIna).`Y'^tkeZ9iXJ3Sh[IB=uhmP!g5NrV#E3P%o.ED6XiUbU:G,+@IB?S#!j*dOUFSB2;\_I+!G",`!H:sITe/F@b<a2)C,1b8Q"<=!n9@sFo5ldHo$("UNOImCAYsj2bujnSp9Jpd%cmgo'mbmOsM80N%]d5.]N^+-6BoE)VO2E8E?Ita^rUSpR+1-@KKA573n6NM5:h+;L!)k![XnBlD-G8V+JrT84SMeO.\`9-c<_GDp%3g@&pbei1ph9PE:3r$O[H!+L(n]SsGnRg$p\A"Mc$KBPlZt!q:brfH_$tldV-Q5Y.dMiR^K>AjE-2)jbET+!,K'l$8G2_s6)sA:g%q_%U6dY-AJj;UX$7CY;!Kc/Jc;S<)5bAk]N)(Z/5[:rGhUYsO_Z7+PbcfZoN:H8%)>L%&ec;`O)d]aPj=EkVSLubZ+rSk0U1#2^d%ilWPlU3lC;41#9;NE`--$PgG%fFnW\CA<792Is)5mnMYB_rbh^B1kP_\BIg]BLReth43?73bklRY8"p'"&Net!*0guTIT?=Vl"TP%P4WUT1k(,#5(TP_$*_7cmoO0`UW(rYnQDX*h6VPTQKi?FMc`7Lo)UK"[_g6ERPh1iAjL>ifnPW"'H_GBc7kUNLg+m4AA`W(m+p\;%-D)3"r(&"PVQ+;KG#*,Jjq1*,NJ?Cbm2I^H:6T]0(C55'XX"JE`u^GEZc,&nXF"<":D^T=%3),-R]SEqNWs_:RAY@n:=3!T^ZjaF%Q$jBY[,#c`\25_Al^I1;oIMsQg:1D:ijY.HC07DlPO$R+'F7nY($k/^e5U$:YXm2J3:c86ade@BLFt0"mtdpnF<u+3iUimaA^Y'L%W?J[_;X'a?qdOO2kSWe@?'nh.Z`hip_;s9RSdaYFP0&od`])[i-7n-TD.#,S:m]rl>&A!_c5WkjTtD7KH\qMr$;^rF$_JDO".>2=%%U7/1.F-Ogg+b&%f*4PG1goR:R:9kl%R6tU%9"m7@`L$:2/lg^]W!i\>_[_HeA@V!`.l'p`,=p6qmTp]nE`lM+84Wi[i^"Lh&%!c%,U4o.o]"WE+HMgUJUVSt?eZ4EV:-QZ2MrC?m8qCV4_i]D-B'T+48b^]Wl;=*61pD./n+&98SSM^F&8\#(8p>i/]YsP%7n==+HT"o%$6rMHY@n3;FOrMLZJg2Q2%^m3)lt#_goSnUR:LVt$eKsVj:\C26f[paI+%92228a-Wgc"a]]YGV@\dN4s'(J,QXV1FiSs=.7_bOE%1uP;#XG3&n'>K8h6]o$$28C$tF/j$<Jqlqsl<!d@&,$P,g"6>6V`]bI\MSAMAbd*RR&cE*`Y&;.1KSdenFYCm\8a.PT%3.\$)hof%,1[B!UOFlbME/Fb=:XCQE7VA^h5;q$37@a1NQrok[pAh\`=K6A5:"YdbqAX_GNtYLO/r'C6(AF=dWaO%<B7]*?5g=Ma<&A,Hh^\:%YC"$&ihMigd':4/prd%8YQ*SG*ujE8*a_Ouj2[N^e`ofn+,H\K^O5>-7OR(85%rg_WF70JkjY9s&&cl6?Toq+Y/]CBjHtRVP$g:e%9@T4;"4_>5;G#/!\5up_UFn`b:/6!gHu]-rI<7am1_fSi#)tGM?9jp.&\h257mq8S8>B5e=?T?]NkMuJ]"@(af$$'15U0p^QeBR;%Ej/D++bcCQa*8!u\!3?u.CqBu7KYHK6HM)[2EREXV!VW,XKu+PF8eYh#HjHT1a]F>G+kaH#+Ygs]>5,&gWL`Wd=AcabCK-F"tkSO%/MU^bNWq?!oG<#SjaVI6-hC7+%pP^$3Q)Y_]DMs,@G4L95JfFj^UWst/-Pl+?lpHL"XF\-=iH@bSbd6nbNLuk)<:qqZI+!B=L#O7%6el'"?lC!undqCZV:A6XEiBFPHe2Gk'6\Bh_?DJpf4&%Jei6`Z>natsa<(kns2Ds+?ZWk=-EI7T"[[liXfH1#$`r5q5UrhQIjJSD%+QAdXebJ3g&).s(9>R[OT%Zi_HJjjm5.-F"$5:'d$BB[[1'O;<[1FNCVSI%eh_`EQ4+n8$MqE/NSqYhu-blfZn6%EiW5=7Ni1BW!%%pXo%bC2IB.q8YeRCa6'gp"Z>4LAnUq0Pm`nkGTFs.8.5_PZGl?P`1@k@8WrK/h2fBa7dE(g</9*^]HjFKVa^bbnTpb_``mjpIH+%.iqr"0J74aGDp`8rnJ=a3B0,Q(Y<CV2b6?Ri^/TP0iGp."ab055]UOXSTF+bO'GpP\qk[Y`AP'dF<E>.XguCONn";UFri/W@k69u%ib+BoQ)dPJ]hM6n'`3Yo]\Q`L6?bd]:;VUZ@V=$5dWL#`J$cXol>]0>dAEgP=Y;=UHOqQ7J7^7lH-"hK0+Ii>Ra1aEh>=85msk%h%jiHgrNN2)B",HY1<i>u$Ik_/J_[cUZXXT<K==c<Eelni4'+DfKSk$?q(EQVcm2j_mZ28nf1uBab75I]spI*-[DFRM1KLiXE3US'f%E6h#HDffOkdGP3ODgsZ$3N<.We)07&n/&Q\iDiIhQ*](VqnkNXN#hDj_%*4V[$b2O;q/q,%p?f8/"7%r>AEj'FI:,!4&q?BBi_c/%i+u$9Yhmq>s%,jIU#nD2Q=FE8&uT?.#HLY8(TX6Mdf3il-@Ys'J]ll&"A`.AJ=&,d39qRPY@6nC1gTHHP$^)$:!64gj&n8o1C9r7%fsdkd_6X>Tj7-qo?oK+(R*p>MKo=1_9p9B9?edNPYa`[dB,D'pqg50L)$M"5%L2::fl3T)6JN=>CR,pOi>'DV(fA9:g%OD?%&i"B%aUC9]*,'\?&C%bRUpR'$U]7R`QpZ9R5e-Sn3P2;`M:2IWF2[Pd`bT%G]7#)YK!kMQ4\e>i:A@.[gl`J:+-0#+nkoJfrK(eKn`i64%K.sAZ4P!BMa%kb5!:@k^C^(F=?^7/3UgjmVh)^FH\M;PmoeWd=n\mQ;`@Y`:7fudQ`&;L,$/%A&m9+$;Gd?,o"ipHDI/pp&ae6,.%6dlnsZ"I-hibE\Ha+ff:P_X>0<<Bqd]!3bCVDVSg,Sp.*(Kds=U<nf1+=p@7%++p>7irO/S7_K:18Y`Wb-*R<btWFf?O[LVH^l;G%P,.1o'N[A5hW\;<#YO9dCW'jKSXJAaq*30BpJ@oOo/H8g2*\6(\Ga?[W-h%6oC0r/pJAi!a4\M[!21ne+3eiHB#_^YiXP5aF2rO;%gM^"?>tB#mmDenRorcB&<#[JO=R@h.d5I1#dTYUB1HHEo%r2<AZoe7k=^:BQd@<`IZ)-^NnI$=$M#.U]/s.dQ&9H$mCRmIe*P>a.%A0)i$3!BfdEJuf>&aZg4[YeG1k*+#pm@/gcYr@U20MjpuKs"/)F)YH.UQe%D]qWJ6Fs[qg)`g*9(hs++@L*1ds*X_lXlDmCU'lCe%/r)0AWCkfub>L=t_%,*0IoDoZFm:4qEjpW.FUfTq1muHW/^d7$Ca]d%L6DpN\Vm*5(72=3(c5V>$Y*XsXeNp,3k?=kSct)#K;[;g%Ji3g56^o7kG1K3lCi8AoN\oSUYJ^D-ITF0MS$qC??$mAh#-nRX9]oO,YJ1.G;="d:-MdqmB@sm-?aK-%r&.3Z5P]+kO^;8j6iAjA%!;4C/H>'EC@d5?lK!6<Ao.r#jjCq24@9BfE%)A//COr6>e[#:#s5KoFd"[O'Y]$,h*f`XtS3#/D]t=Hu<tE$TOEj">Yf<"&QPU*V%RtkQ_6;s-UTBFOH\t)(?R$_HdGMO"DR3JQ_B^a)GBODibOWP,QT[B9G/3=[E@:VJH<Ir!"IFfF/acmm``"h9g@f\pM'?9T?@'!B>%d1rT6_^K35E<m*Y[!Sh%/ur#MjN!it8QKU"Kc(5HH$4gZg,c"7NgO]kbBTSOMF4T<L;#?sc-N]8)LQ+DESn/sW_UV%L]q!TUd.)G%ic"RLS#bBW[6+uBFQ6E`.l0G[ihqP:e>?4%d4//Q`QQi,!M2)Y(QbO].TYX)\SK'9-Cfc=P.Q">Kp\3KhO.X)C#u(0H'#i9Ik+&J%K>tiCI]MtnIpo37^9*2-&Vn%9"o<X/)De3AVIq(\2&2rJ+4e&J.UsC3nQ%dGZ!XS5P6g>6n5X>MQpt@RUt8A0(MDl]M-K/a:1aT3%fEqhh%CZsK?fp;$rRBJiI?#&1SdNF,YCH+M5-Q@c\ota`cDEFUV`fd;DB5,g2SE-bcPOpqNA)8q]5JKdV>&A2b@LIKPl\<">LF-4%6dILTVl@Ti&!"O\@`H<_s48]SrFMkPY"VR/ea5<,&3TOJ\uR+Yl/?,L0V7@U)\SL?gfMNbI\WN4Bl=/XpM]g)1Um&7QlaZAA'D7j%>/\S;8ESs@Fm'oggo;CXbb9*'h;WX.j-Dm>1SD=oZOr$AHt_F!pLP\p7'8bmQEu-a57[_fE&m@Z+s+,0]qE.n*OY97V9jrKgZ/20%kO9Ttk1`L%^MuMuGIH@9I@B,*Kh:1d5Mb9AE_AWC5*iL.cFutIO1T0tI/_;>fpB6h\A3N'N`_:ORUO;44')bp&ahl#CjiUrbo?2O%p%QMO@D4I#.SjLm(X$dmc8@+J=@1utp\PH[BTT::B]Q&XOOi$p7%;Jg=<UN'I\"FBF0UqTBO\Y"0(pRSmr\Jn1"hBGre)+Xk9:GA%`5_m^0n4Xn`RDNg95Id@-0rnn5Yj:cHT0r]4>7.ITFFP#d+ERiHoqfXnQ67V'G`:L#+t]HSF+Gt:#?Hh?fSERk?47pJ:&,R>e,qK%#8skK'kFBR&bHS)mQ6u"4\oY-R.d8.jO@IQ0'A.7=6(i,-\0coE<&ZS.5+s:Z+G[;!/Fl?Ls^PshG!b9,inDi+(M[U1V\bANV;n_%p$W)^2Y16Ff`I4tYOSqUe$(G0][2tV]<jXePM.R_P^)_'BpULF0UrW+AVPn^5*)2(iL0^ph\2PI<j\-:J@+%;6TXf6iCc#4k!2_O%9@#7q]]#l;*iO0`R.EG_2JQ)3??)4sbP=.7^XLZbie0,Q*%(\KSB]+=n:>fuAtO@Ks7cDOa%W(bgrHUsYQisV`;+H(9s=,OKA!E\%2f12pBib_u)\4-+^Xb'17#@IHj]n[oF?OYf,9E!8B!/RTSV$fhHT3cF8$DdLh=DTBQIfXM(I*\gmDePd8\_hK?5iTc-6o%oG\uH8%Q[R5c]?g8q/(b;Q1O'NahV%M"Z/r(*6_\QF;n&\#Tic0Eh6u\=Ien(`l^$j,(70thi"/8r+,_dEFKKp5N^hmngV0ImfH&^dYfr$*%C4;\XY@8JT."1dX;hL\jK^Kn?aSA8p_ke*MU:^bDFS$]/hfpfSDZB9DNJb\JX/GH\#808n<inQ5f?5!b^3TMZCH5A2F)WOV*1Rut%F;H*;NlT!+/#4@4p<m\'rT-BW."!#)LM+pD^9i1n+*qm`0>0MQ]mSGT(iXHVJfjr:E)OVl09'M>&3mhq'L$X+'OO&aD"[_a9+S1X%A"MT6f@.&nf(>fhMt#GQMtlZ+V:G1L?H:uLE+8LS5BQ;(W8i$P7=>bS(\OV?kG#\4m9J/-Y/R,a*6?;-3/@F;<H=m`5A[B!I+a*d%p#3Mh`o,V#L%i,Z?[90XIc+&4^&QZn8]LX))Or=O+cN&N$876\F<^Wci6D2cUT=F\nc/WU[p@u0mdtsXC;tsG^\mmT%9`YM0P(-"%aS*puZM"f/Yfm_^b5U_&>XFJBejf+99Y-*Eic",CgI!2-LbFbcc=cdY:Y8-t_e?VY"gnc/aDDNf@i2VI8"V>mP7Rg:OYPqE+o)!&%B5m;5"fI%Ngb#>OgjlfbF\`>YTq)!>.jNs'T[>M]&a;5I6$qcuFUcZk1]"dNoZ[GGB&Ra=S9L#3[$.?@S'BWmO=]b'&`E+/9m3/<%l>F2Dbi$M_W9[N`.!aXOj[(Z=_a6e7i`W=06IJ4W,B$KDY<o%_U>Eq=hSKXSa"mdTc&*)5[8@lNE7&E7WqB$Si;;\4!^kKJ3.42m%Q$6&<k#aI[l`AWhF::4KWcr7o/:]@CWebE.2Xi*GLs-1Tn%"[.,<g.>9kH\_c#ehWYpT`3k,939KMjiAHiP/9#?F-V*naPR>3DYt%[)N6"G;409L?4:gebYuD^r%U)LQOXX[.h^AZmC?hP*nn"mSQXl!-jlD!j8J?WBW1Ee;4c?()A9,r,"j!UesT;),2s4rWum4TE[70%'d4:ta2EX6+G'F5i"?BpCK:q]W5*=qWH(0#%EO%PW9M%Pb?obpdpp#ierlYAV&8jJ[/]_7Y0G5=`*`$\^<$qr.RNdu"Gk(ERg5%Z%j#srm8'fZU4Dj03IEj!qj;I>eF'K-&Os_:FZ^.u)&L]cqXn&UHY[VfZ)@Q++mA%1E$Bj7pcUXD5B1#OR7`FW4O_<^8>'0[=F"Hou%>,n8$$`eWbO!4"2Y>&/lXT;eJ^V-*-Hnr]&>1EE"L%s;?D-:GHIo!Hh2UZaYj$$nL>%i(lmO:X;dQ#)-jho-O:FfAFMfHL8O%Ih\%!JeVIFZ^N`-_k3B3gI*(k?p7">n;c1\%:?V*\^"=8;W"63ulX*5NRobmt5A%BZ/lJZk(@JC5%3m\"ioTC7I1f@[:EQVC\Fl!:F>Q%E*p6IVjF-;5Q?fEm_A\s5Q1TMJ+nF6([Z_M?[dp5NIUK%5CDPLr9]"0pK'1R"2J*TRYs6&_X?i?:)4]E.o$Xj&?TFP=n0e:LC5IQ%F,Sr6LUBp_,23m:b;bBGdTlR\h1Ld517aN+;`cJ@EQdm&[0SC+Jnu-jP2!&NF`8EUk'8jTTq_%d=Z0@1Yu)?lpEU:id8MLC[X"6&%@:&SlYrl";A&+n][C*n``[0k=!:PMA*,X"A_T]E$_&Ak3lDire=?H]K(c-#i`N6EDC=8T]:>R=79-\C>,QtR-:nrI(FRXA]jc8OM%aAF=/#arqH_nsna'BXT]<Ai^&jt?)/iCkUb7YmhX!l`7SSJN;nZ;k"]rYH)EoQI+3=K89S.Cp6fD5EjYc>"<BddXtkK)rL%Fe-h(%budh&;^SZG@m,+E$-=0L#gc6uls-bUp6m(c'C(4*5.Io<VG9um4mSMWP60bNZe3Hrq^lU0Z8g#c3!ps*NNb[,EZ#cnOBTKK_s6)Y%069(Mp7+p<kn2HC(@=))r/Kb.f<S=8@H44P)2PEKZZ99_i8C0cN,"G4!m&cQ9O3pfI@r5Xo+Di0Lt2%58DVq!b/q)>MnH#8$7Eto%6a@LufER?mXh%KY@d,Vc?YZ1N_aIHoB;%5kY^A!/8nkZ0,Ve=8+f,H;64MS30BojE,@T(Wi.Y7li_Ha@'<f9fjg.X2ZJEsgROLer%pWIYo!N2c\H&eW-CZ9fh3;4St`@q&I'.1mGX]=Ekfu6n1\_iJ&-i_>*[iPkWo&BM[DP>!#A@bu0ZX,NI<khRX3&0I.c_u.D'*F\i%V*RT4H>iX6rtBF+m#FH4:Hnm*H;_RE[kXsH0J!SCTm=hM@?HD7*_>EN@mCo>(9l0a:uh:E^Ma3#lsDl3YqY'gV3]bM4G[3/B]:Nq%ftra%,'DR;T*DX,4UY0BEcD>mV0"TL$TPCp$"Ud(M,`D9hFur#D3lWZ?$#oKgT>l>]1TO_Nq-7q5<BX!W1)#]6E9p27XE951^T!q%AkLK3e6L+.RZ_0"@_`HoI<dZV\#;lt43l9K/'cA;;7LPN:diVlXgXtl_mVN[`QW@*EH"V(f9RRq@93oijH7uTfF-Z;!0*)b3*fTr%=d^;%R=PT<ErRJAD;]DuFIUanD[*P8FhFn;GuBk7gJq*LBQ-E&Ne:d;!+)h<MSaV6'?d\\^kp#'@e-u;E2q^#DVJmOGWNO1&?9b*%',qenG+U\R]"P7tDtcobqhO:FJ+B!Wi"a#[FB5T)njCr"$f?450UHf*N4O[=!!mE8HToUjm^.#K;rdIlM.B0K^kA'[Pq+BsB&1Xc%fP<Pl%V+>]coqSB`5I/;8'J"44^A'/O@_^C6#Q3qr*[S\a'SLQ^$lrsPnpM+6cFsrQP=kkkJKR;1>jm)J7-I)2!r;K'V9I"Q1`Yn%6L:2f*bW*r5lZ]n"'2?=Hq2(F;K:1d4.@L5!ig=-'jCPQlO.8I^V?C:`li^<=h,WOQ;RBOhbBZ,gG>uRS+FL<PK!pI3P7<MX7&1J%JZW@hd$\WWl+8A@BEj,h<eqERQ:";YQ,t&LPk]-t4,st=Km`*caMh!U]c1Qo@KG-7es12LO$Y.[aR=DV389jZ;5@mfQG\_b&trg'%rLOLllm9]<"Y$[1(1&gZfoB.6;'8LWf:Q_u<&oJ&BJ)b:>?%t;L@<,2dtl_uB1IpK@7%q,5i4DBeg`4,17Z2<hp3Ucs4OJs]7ZuW%g,41-CuN7*1P?m_+5Wh<3AR@TAsDt5Sk3GOU5*5d)Q9/nT^7HGD:V;Q<*;7DCg3X^Dm[l<h>4(!TPVZ2e;'uGTgTdaCU:cG&Ge?R%R+_1aLF0&SE-I;$$.SX:;eF$h,<VXd.Fc#AhlC`XD&fG.@H$Gj)L"hW2Ie2K0sEMdQTB0%Ct'Hh_jis)p[Y*2'bjbsbFZ^A@BP"6%\U$r.f,[e3bbK'><JlMYc$4>Kj]K\AIiTPhA8CVqYq!N*Ok`drE1W."%Xp"n<RQ]nCk^'c4=R.^r17d@(@'S,-E$GX6CmGY[Y_mk%7\7&$?UH]WQ*XMFEp4&2/c3==/+ZW(?Z1;g[m*um)rRbmSpU@X:h%-Mk0+'%T.R,"i'clbK5lcI(Op/mj)sXIJBaS-Dh3,DS7qrs%ZeE`Q$'+!.ohV#aF-iR_h6'9ec_G5!XLDKYo^sHCo-4TBabfl`O5F!6V;%LOE+q:t!mS:sr[lT@;IX'8lU[(\o42o]I$t"@+.SOR%&iq1B#=elaG75a&OMau_0Ob\W:s3r@JA$/DCb6:VD=.VXm;Jj<1]2%P2Pu5Xj2#j+hoi-X_ng`jk3Vri:M0EU)38V`^'!FG?Oo<F%\?2.'\P:;'-6M;TS^qUPb)*K=d)c.!_3k/d8,jWEaOeA#:>c;JoFjd0$ObY>6A&ubk#tP[Br.dcZP<>S*jgI3o"+KL"?<sg;Y_YT%$-_aB9boo;l%9RdGlrj[0J5>BN@7&0MiXuL*?"J$AcDR)PkK##1fO3kjS,i!V+aoI2?dLH\.7@\Q<eR6>;I6fe6,oA_F1G:)a^f6%1je3ii;6V(>-/P:jK2UaMIkiY8Y9#+VjjCF-R,3205V5D`(!VgR"5VD3f@=RAp_?IG5,nRH,fmSchKBqCgJ8a9`4LPs'qVk5JQ:T%>`"cp=YB:a,P9)r,6Cpc$0YaOR?E^pHjrELa`OJ<A."V=5Nt+A,mm9O)C3RP0MO;+>d&Ep&UC`UntQp`CS`7P<97dL9rVrpQ_3[I%F!`ZP;/u-^IT`TLGK8Q)Yu1;c./5/H%fbqbYrr<-S_]EH'kctl2<]iM9oD\'*nO]i$E@(VGRCFt=+iKHaupiXTmWtJ(hG&\6Sam9%\6&>S"YU#+7<jSAbZReu((krk4_h^54u\:T/8f'I"qE#B)7u;3@qgp+!N2)>XfUB+RTVT.%0RYE`CGFJ]N18sQlAG,btE9mG!ZtT%HECr)OVuCQ__8D;'As7cLP$B2R)Bn$s08338F'Z7(L15b^qb+<'mO:cKV$d%r.4G1c]e<gF0\"im/D:As7&hXhacdRE?E<=7r?^?%3pI?Zq&E+2%sdc(R6rZ]2B5]T%);sG\bWOhgujub"WTl;(sk2q3\Z&r%h>Nb?UdHicFkMu:*KG@2?I+R,Hu:#cVRAD^[27ucTf6c%q!]R(-T)P:mH7INPeTGk^hosWTc<AUSho+gCke2;\3t3r4H9*pa%Z9[[`(KNfE0m7lB5R7\BidlF=g-tEm&\8@`iYk).b<ZW738N%j"42gdV;4OP&aa0;JR.95q@)e0])R$(G[PJ4c.5Ya7FQLV142QjGp[B9KQ4*U1ud!VoEYn%ui^&QQ&skZ<)Bj_NM7PJ7`P).?/c-%]@;"jibRZCZjU<M(U4]cDo#MqfJjpWg.tU>YCk/d^f0-)0T5Vjo'B$,IQ35A11271ONS>ko'B74d`rKh<e>V`'YcKq3f8F-C:bU#%SSQJh?3tk+?#,1-"M`*%<NX&d]h0r&\`ZS3Ib>6%a>]K]&j<>&[:>P0(Y#9doMPD9`:om,TiD'5F(q_K5HoHDI;t)A!*W5/HD6tC%#bus[qf`"d1W^!"8KW9GfgX[.*Yc]4EB2E/^D$'i828]AES70+^$D\%IsL,d=,T@]eGWRQe:KQVJHbN>P;jJqD<)5a:RA?K:0!uB%@%JH!Y[MDloP!Ra`+dkUWI,8L$c."O\MCnV^[fDmc][^479!J3XJB6L3^_6$pEI>[nPf0^HeMPNoZe('iT&5;_A'NJXCpK:'YnLr%[^.S?.H_3<B\gsa#I[!$pu08!!d#!;(7f+;Y]c,i97FWm!n70n/C]r:#j8d-(9P5^,a;5$)CaJJA%S5`?bQ2FH.79j##(M;l^#]d%qq@7KHi6t\(A\Qf\XZ'8nDYN)a,a6@bJ\87Ye@7p8BeO"mU,c'TH3m,dS-`g;l1GLCIRB&mH,G.`;`>b>3F@Kn4+.4XPePT=:,[f%==":8j)R&j#TlP%H><cq_Z>rPd38QFXtT&,]^TW1)$jgY%AGFK#EF!LNZ@!:bc<YbM&BXf*L[;VM@Q\?I+X@5Gp$,j#B,_*iH-ds%3<3O;nQ4pY=g/:iM;AP^qU52CXGo/JdD8K#aXr/a:D=j_QP6T+(?"&5o`&@g^%[[mZA-bJ"5F!W.#:2;)DFf>kF=t0jUhM"HY.bW%S81?)<TpT'3WdTu3PY$RGFlY9l3aRmXjelRL1#-_E\)Thjq>Z*B\u2%`&X8E.b+Cs)d+>)ba:k06$ZssMmh,[`5hNfQ"="3]W%9G%Xi+8Ur-e/^"5l@YAEdJVDj[=1%;KF6+50c;fImW3_/Fed0?j16_M!2a4s);R_0bW4&$g*eCM4]mi*VD1U9lJp6\)n&hlN(KBI%/N%?D&_\0i(c7i!+@9NbFdoKmoB-1'9!Z[U_!%942_g<1+C."uh`d6'Q8NW(EG4^cX!p8CXL*3qbRfjZt.<'po4Md8bF:/s&HF"n9(H%ka3>jS'J=MN!b;B(/886Q7ans<+b7@!L$Us,\CtXF0*ZV`XO_,U],V+ITGP4d&U^AS"g;@8RJ'=1masi6$ZYG:#T<t1EV!BY-1)T%H0=bB/!:SYA@Ik;/'_W/062tCN8LY8;4E^@c*Ir:Ulh8n+`b6R+MHa@<RV;`"^kC9_]1,3DXEgdT&M'!0J^GJB%ffA;UCXeoQrB#%,mG-U<YVG6Ls8%f4#T^D@O*=iGoh*"ndhHEa9SBsQ'T[`Foh#QMuD97A81js&n>dk:-0s?8fK3.-7Q.(7X>mB=Nh\eH%]e<0Jic*%]VU`EGp[^>;L]T:2cjI7$9pi$aIS;t4^#oXN:`c>73=+P[?6=\jF),"aRY4LI/aBBetR1M:+l$V.uKo5KgGRHata$[AgtdD^^sj1%dRYDI81#*)9p&]4r,plF5S[27V3&)O%l:4'2i*!``5N1F(T>O+PjTr4lF[fO:X`X3=POokUFm'o?D8m!Bd:ma.aXF^/%j1".\kuQ%VUEeq)G=nA)"Ybj3AER5R7?-9?4=n#T-13%>9F*!)6)]KZ(MrA9GjJaF6E--/*TAuU5S=_N=>Du<(U^[?&YgW9!dSl,QAO>V^\[Z%N)N"j5ta(p*3GcGm%$k91NGNd[?Ug&6E)MIJq5sN=%/HJ"*N7,)D=(/^N?(6L^2HIp*7da`/F#Vg.kpmGV^@<UK(MtK6SW2j?-)_%a@e;r0NANFK*`^C<MTe11qrcJD3G.7L"RMMTd,M*ase+E,rJCBI\INDYbNY4'j0<RU(qYY#I?)=<F2J#BOi9C[K/)0(LnIF(3Kl%%oO.UZ83Eut1'#l/B(iGk,q$&s+Z5oab"6oMbkf<*-LiqIBHE<#r46$=#LJBp/jWtXb?g:Vo5G2`HA2*m`3i.(b*KUNXG/t(n\["^%H%?Pkp>(d$:7Q2W(]1jA[RW:;=@:.r@SGh3\E$-:f*oJV9;?qbkFp+hA?9G'K>IABSt'qD0i9k@&4L%H8"%[@PnWc%8j"gk)RKke%HW'AHS$U*N;SH5=/T4VaOD)ETI6GVlZ!^X*j&'umePG\aGh!t.`eE0FkJE!//007T(.^ksG5Rm#8V\NP*?`N]QB77T1)JIJ]IORM%/.sPk$_H`1Vp`XRdTX_+r-\cbX@gK-<G5@B6qdjDFdFp0.08]FoYW]?$tC--OVqno,nD6gdTk.3k_eK5jT8ej7KZSF@?"8k1O#Kj%->Nn`<3&9R4&^i,l+`li;9dgNF\YqX"aj`=o=SV&2OG%a2(Nb8c74L6X>tMkBP0gZnPW>lWgU:uQ7IVIZ_Nh2@QI890G,]F'!Nb*%EDRPlJ>YRBqT@:tAF55#itY!;q(lk7pQeR/("d23$_\0S,hiC,/sVfHPkF._*fYPM/d(<Z@?e:me`Mg=#qKE[at"^(e1$Bu$9Fr,%/;l!?5<'CoWUa1=Bpn]!8[bcWZ'sa)V2YYR0q6]-bHcq'D61O`YN)Ra/)Vl@F<b!2%`!,^lI9f\KYc"B*;_dUlEUJSMhNZJ=^##0%,u]d>VA@T/.dU(6argGl5k]Jh9N&lm@TNR\4jZZA[\uX!/SInHBJadOR&r<Dr*22%)Y_8"BO2:Hr">@VNB<FbA8]r1,%dSq/BkVb%6u_2hkf0R,H1A27LoGEG%V[R`r4I<Kc!,'lO^U"BR_0*90O`_+-)5s]R55E;AQfS`Z.UE\S]-b;jHr/8'KTh)AH_gq0!frPAl`ZB%!_/Vli],3mje0R-KL)&3k@)U=.X>/]Le:WcD`Y#;b[7R:W;)4lK?=Y:P**L#324Xg;PQNCj-6,Ldq^`)*iXZUD(S6GiN[[&H:\s.%jDcqa-/#(DNLf(nSVU+YoF!kIn/sj'QR.8,X2u8W;4)Mm;V@@0\7iOj4XnHd"RMj5)p:)j$(r:[Rn]oNq7Tdsd"@\D+^`qO*/uOY%r%%*Xb0fcl<kcN#4?PO*rM/kP6NpNbO%q/B!!=LpGb/`>I;>T-TlE]1H)>jJ#kb$UfpUQ_;68:"b%7o)BI.JOZ6l(S.9#f^Y8+*A%.jD@JCrK[VoMm,G^,bHIf^oi<9:67/N-&Aafu3Rcq]8@c.iW/a.85$DX9n^BGr]Do50\.*eW$h6NpV`](f01[Nm0jDR1)/l<S3JS%r"5ndBq1=NgoP1rYTssGN0PfKOnN(nN`\`5Jr=;YHmPe49Co5G)IFUKBM39fGJeAs&h$"G2j3-XoE%B8f`Lc^/^cYN>NpjE)oj)m%b=/t(fdn+qarj7AX2`+!5%7hR-ta5-OD)l92adV8E=c^rZQ^:NDeirB-]g`aG=\H*W:Z2!cII$.dNLE[:l3]G990.COg<]2*qaEA%hpm;Zcb+NO.eUU;+8e-Z.0B%U>*,hE1`@00fml8a)@HEW`(u]V4b]aZUWj]]+DEb(5iSDR;/K;.LL,r.Um+"q1+GD*p=4fWd,5/3%)810P(Jd?a<TX!k;C%L9N*R(r7CuV4WTMiTJi+q4\c=rmV35kX][1KO$ruA3k,j7tC2s^rXI/.1?!U`H4$uqe1sJt/0g1'1$WqL,%-OnHI/Db!e,3':Q=aA(2#,j50LrolgJR5:lFYkP69JTU%9-m0]^kjf=?+)VcTVNM%W4>]Zd#:H*6I$Fd[S(p&*%D9Vnj^_De=Cko%Kq)nBS6"kg>Zf(r8n_n3bjtgES``0[B4epcm/b]I]q>ac$r=tQUIYSoAQfW;RnZKgYnH$NQo*"OG3<RZ;3'M#W'fOg-:VB_5"7m1%_@dT?kM@EENVO2Yoh/TngUpAb?WCc;/mGZY9TP_(Jq`;i@bk@ZqurR4?33[FGcE,)ALZK*87b)+^.VQXVAa;46]clM&BYAI,eG5,%.cQ.@'@&*0cJs*tb%iPU%):_fI*C[=[cnW;Ft,^%er29c4/5Y(W.Q2T)"l&Yj;F/p1,.ko=^RFSWfggSb0U`(`YP"C)O!r%Oa-!&%]LW%.L/U%Qfl'i=OUMlF^@cLZCA&EFWGU\HPG32@En6G[f%@h-[>[-]KH7(mJHKA"6.L!icB9h_S?,UbA#kHFR*ALghq$"`qi^?,%ASt+T()rkUgTBLRUXa:i4r+rK1XTLI#EcoaT[b)B#Oq30bFeWH5EaZHCVSAe:4#fQeNW9SkY_)VhG&;\MpdBW>-loWkgheeNE=^&%]\RI;U2%'aO.NcbXga6Vf48t8L(O7JfY?.AoqP:\/R;ooqiW+_ri.jSq^^;@]@t7O6TD^Ya2&S\[i."i-CU4pnpOS\hB'=YMN>jj%X:KgXm$4*Iji&F65cY[VYLhXuh8g.:hp^:`UXn^#chb&Pf9k<Fmoh5FXk3Gd,OSj<c+buC=V:Kgl]*"MU!hdZXfpqkLHP2I'YBXB%m1/SPL=kkdO'7n\c-l9phKj#UL[ElpoNCKXE40OG?)rUe\m#\#"RT7Xrf)j.*c%h-XSr$79-5q-:rfooDS+T?X[FgXh+$e.=blTb%IIrMOBD3>m+[aldJ/c8UD_K!-7*E!pBDi97\D."_41pSl;?Spc5H9.BoFq>^DZ8IlpAf]I0,_Y(Ki58.lSW!CM#4:5XS1J)_3<9R%6/*qIBu75o)"3!&$'ttt;PG%qg'DZ*0dHkmg*eL`&TA42ZC@Q,WStU&J&%OFD/f9:)ZWID*>74^!_c@_&%o=kFr-H+l+%=aDBt,d%B#tQhbE90[+R*>R9\^*1#M,8B5^9.&J/=rIG7K'T@^bnW(;1uCjC*Q5?gKYl/I<,Jm,tVP04Pg07!:lqPDQTe"b97n!r7=[dYm*q%apZ-J[PhUB;=GN]n2!F_=eI%'Jl^J'R^u0YX6\:,(]FCH5Z]<D=FhZ#[umM[Ue;tYj9l)j6+U\.6l-.RTPZq@VbXZdEF@3C/TNK0%3b="O3D^/>Pm@I@"/\D7/5hPX/40`$d=+`Y,dD>&'-[`4[@e4cJ)G&L5U"5KWtP63'(oPqBJZ.K&"+>RF"XJ(nc*UGhjRT1U?Io>%W!5>Kk^S)'C/an<Yg+09,0h[Q2mXq=P*oan3o-g5iVuQc1p&2idqPS&KXT)2ic"4-8=!i5aWb+r/aR1IngZ]BC9TCV&Q(Zd`$NR*%MjfLns%mH$k_U9:^?:I]4I9&%\^Inl79ft9@MR'*r:X;j'XfThn=PC='qfDZOQHN/,,g+0(*SPUs656ICC(K/;ZrUFAYZ1BI"@Ko%F)FSOhE.kdfT+W/7Cb7=,;>^VqLng#8H)1)d9>Wc1c!0uH>lP;UiP*IVrt<d2`8iqlR7O">T]^0"&I"L*R!:KU#pSVhd^`#6onTd%/Rr_@$AUqY5U)JJ5QP;nL+K#b,+QjF*JpcGH6,Dhis6p=+,W0[.o^S_8.iZUs"F*gfa?9%4h%,p4j_CXK$hXFk;H+0,PnQ3mi=SC%#)S18Qi_[;o^T$_GI-.aAG03oJ$m?>dA9CnY$?I[%@[6N,UeJQRHQs_F4U-S2!_f42+<KV6V0NZ*P=noDir7`%2KacN^PZW/c78)%+RI0ST'm_]CX"njQn77l,pK["R^bG5VnIPgL,B*A2_]/'@W.5G^C#<Z>^\O,Fjc)DK!*Cpn<p!encTWfHnL3""^#CY^Wf._iNL2i%k2H-`@3nNNb`[WC>lQlpCW8Z$MoKr8Wl(@W4tKr$THS!2%\k/#/C?t#It,5?RlJXl_jY!V>GKC"CougmleoD3lBc;b)O>C$J!13L%)-]N7=[u!7bRQa1D!peqV-<2g>48Q_IosAg+MC4RS_-AsUW;2:YMT5Y*^-_,]-"/f2>X_I7^LMBRoP!K4/fnO#2dhWHEZ-EYd69'%6BE@L24`:pK+=%2qt1_<b@Ksg'[`LH%6@#AZsFu@(SV.W\Bq.]*aIpKrui4)9LI]6--I5tK77I[pN]7a5VTj\rEAMs;#:6eea<i,%[(g)B015i)>J3e6$Neo:d>r2*/_Vu\QW5_hQJ&aumD$#Dh7)T`]@lTRQG,0\F^k^t`eA*(ecB1N)W-0Zc!7+33mu@dY`1TUN<\aW%euutrp!t(P!UZt$1%N2(BejM$?>g#6CMq&!CUa9Y&2q@O$;8Y+NRL+pGC(>QdZ)$,>Au,hVi?b`Ic]I;BRSdPqt5/+f7^6'JSb[;%r3a(6*Aj6*=Y=+_3%0#D?a*nEb\"=gUHb*?M6hML]@Ma]pY-fH,.@6eF7ubX?eBkA]2KJlMN?(\Pf?j]n#R4O2f;`Ecu1gGok9E-%CqX9$d=ok'+>;,GZVbf-k;6io-j&/@otgW9qlT9WF^Wo&rbf1&nKNq=D7g;RHmQYdIsZtXN%agLrG4=J\f;/>J`'>oT>"2&-8F9?%4oJCHp6Gl8'"e-C1G0AUn%&(+)0D%DUhBMhIhXps%76uR!5JUX!gTYL_B2*Rmg10%W-`?g>Ad(LpXa5rIN]U$h])#EU#R59pTiuM%".^qs%0StEhimtF]')e:"hs9SocM1_gtq@if5H0=Z]shNn8P@.6d6!mBcnE^dIGiW`>SM/r7<L]rsuTGp\qAr@W))S?\;[knbU!q%MmE`pX6M/Nq;(c@=[tUua:\$8s""c-@S2!Hi4#h<2;\2%6$C4.rj/(LZkp4=]X7ROF\kdol8CgEXWT\EIcm?ZjJ&Y^NIuiLGBSH@%g"kQcpi[>a>;,+:[e&rQo^fhLrtE7nefJp?lUCa2rf7Ee^o%+q-%+>A[5X2&`a))Cb]QU#$Wdm]&ir+BB*rSg3SJXkDf7OTa*4Z[%`Mb@moP;(l[?7IqVeroVe=$i$XMcS[hL+WGd`/RNGG:RZIbQPP%N>L=9AW_XPe?^_+8tE3\LB:H>2(STR4]@snZVe)^YOm`e=*er%X+NE6I-%chkX8e4..@-sg9#i)I!XXfFLWd0rE$\e6#3hNnc1@NgYK@8gG$:8RDX4*o%7F5Q'EbJAZK$^CZ)(*XZ'kcoeQ0fQhJf4%[FqB0&bEC.-0n6FZuUO0H7JcWs'1#BAd=YW$!ZOfq^"tp=DKh*RFAOV3HjlB!VX3QS%,VJ%c$qrFC"qX^:X[Re4+eipK2g*p<,MH%&,kd/XUfkpPN_SgG_PJJp'0E_nCFo8jT3+rmC$AF>4:jWC$YBl[+e&W)ZB+CU9OT#!'P&$HfsGd.h0WrrN6%tSu.)BmB4'Es/pLZ%HM6c%n?`ZhkgdlDf-:4IF+<BG48fUR1cc&K!?g#fo;gST6R=A5BBeV[r?YW^_\p3Xmh9>88&tAGk[05AdD1F+DYq,pXLhsQST<)'%oth'aM&Hg)i<8CPCUH-AFe'?T4ok,t]bf?'-!9R6-bh6jF&0TYHDB$b497Y"lhB<':0Bd;H9i54=InBOn>XT>P$YnkI\S-N)oic^%"#G=aof'EhOEWa(LfM]#i'heF!Y8&Pgj$a$KK>[,"Z79<$hRl6ZPs1WhrtV;5=(XX'jQ*BHCULLldbb7;O23Pp(4<<^We`[[\.p?%m$cDdZEC7(I77>&!*fUQoG2lN4'M&1r^,]83WpGA4BY08pM,>LHRBD=*^]rsld^EqIG27A?T.7>^9i4XY.&_\n^.u`R6'/AK7CQg%OkskAda<j<R1->jGtMIVB/u"2>rT@sQ$;Qag2=aSpJLk\fF.C0Ubn/7?9P*7fBukSh*mI)B&SZ.*T'.tr+pTWO&\BPpZf,4%3HWa%BDkAJU)rX<9]*/:g8jsOCY&;`^A\'%hIH#^dsV,KK,9V5YH=B4$:CG7UM5++GMaL4;R=sELBHl*Z$%<oq!pl%X,$*nJaetIVc;B_%(.$dXK^Ukr`^RbK"uk3A#X!Q4[Se:[_9&V$CR5]Ef.JJM2F+A9l.-T>Qi&1!mt@$2\*%ak<mf6(/ce$-Ke<,n'f\keH.?.hJBl.i%!q[4niH1"7>Q+1ue!o:C5+V+g]B)KKYZl&8_XF8bF@JFGk[4"[a!p^I76m]dZV.@u;+&)1cVCE=K<X#"`Z"1KbbjJb<`@#cC4'gB%U^d1n5&6f(eif[ZSa(XQ&PNYM;4$KC9u?7^F/&:+m\DFX#1M^Cld^.)\X`Miq[)dV&W*A`a*+BD+g43;c6K<`ZM.2!*]/ChGT1mN%?uqaM0Z<,3eFUQf#Ii4cMrjehUN;t2jb;;<L+koUhW2?Q<EcalAPH79j2Sk"c/X-E]fq1rNDgpcX&%p7`qKM^"EuQjY/`emG=8Gn%N17I1d?r6CM5$h^;37TeQ>g%-&/OSR6G-rf?1Q7C(DXD1imac[M=XNi-DRtd4UT>GPc6W>\=i'Ffo,jqZegT5C4G1Kf36RmAoj'P%f*F<MGGE6;UU;.,@ntV:WaRq^7k]1!>kkcu?F((;GC'ng^s.kI>>`0hHpST7a8Dkn>1#ft]LM$p;_CIH>3#PsCa[qTj#F78BVQ)V%6u11^NP+sD=tON\::'I_4YV4">6V(`BpFOrDN70KV6^3h#-d+\]=FA"003cpTu1t5l"j`m@itgi#(Gqt3o3hjT166>lX/1L/fXJ5%q&_FR]);glUj7)GiZbl3&kXQ*'Ld;`WN/@(&AXH%4YG3!":!)5'GMY`:%d(IqQkXQoiCCmH'*A9lp886If8WA^[#Gj1[7[hA<cbS%Mu)n:mpiDJ9FXg31-'4S.X=SG"p&-Z)?F\*'Z!GM%eX%De@h5QE3jlM:7*:VfRX)CJ/nB<"[,2id.Ih@)D1LWSF@_qo<d,n>M\#j%,uaLt):V>MECYT-\2V>K:k^b/2>pUgq^%D@-*-nDl5]<S9`1LAGHet;X=jD@Ff+iKAqn,`X]N:P!/QHNhUKd2*\`*m/u\)h3BLnF%g3dUUOYtoS(`YHTXkNutl_W1iYPhbiA5*GbVZP/2M!DZH6oF^5HLl!(cXa7Zi9*CdZd`m+&[TR()]WYR^#AVj-hu:S:HDs=PPm96%?7a-\nVR'\A@Q_+n=7LG3/2h5ku!!#&)W"_,(Z11`"4NV1!@h%@@)/@l6G;C5?._U#<3WQ7rX&(]O\n9q\9mWos`U=h!G@o>qe*&%--At,4]M[^]`UQKDKlb<TsK_;RFpH>d.$JRqXsI+_=pU'en>7a@Ml,;$\:YD+s+hkA4Pg7aj?OGiI7kE:\L$sc3>qH4RH2L'X8bt%1NsNUHupPL>mq8H,nurt>@0/(+Cf_tIbFmEc<<)(ZP-eJn4W[+7]C3-libmq2=+:/E`ll4nl-m$5m#VV"Ks5]U$7T)A8pZV)48*R%DA/3!39Q#u,!(+u5*R1%/u_NJ[(1MP^;N=S5+sMsS[I1K*sZP!aB[).n$#AER+!+qjcNjjX-;=.4;W]*CR9%dOUU/fN)nFphje-!%ilJhEgY-2@$9R@CpWmT(eIOqEDnnCmXc=AbQ4kVH#uo/]YFg8\%h(l^/N_BeeeA$Q8V9^a1N&a.:DJ6.Rf1iM<t<bbFXI0$B/OOP%FZIhoYpZlK\^Mb-Z_1B8N\"<!>\eaE]tSktqMLq:J@,7^/0\8n+3bccV"hCE-e@75Zr"H$@$#3s9WnRZSb!d^%'HP[e+`)Y>B`Xg%j('14biV!MmC59%.L!gEaU/^-^.R,"BHq].+KZ/2,V*n\Y<oOs_WOMq`c*rf!D6D21[`-]aMBHd)lVM-JT$2]#!-e_PF"WWO_hXC%l'r9\Q%s7<-b>+9kdPF;`fd(0"lI9(7K^bi#0+KFriWYV:K7aNWfiVKpmnF@o9_kkB5@tBS_Q@rfE\;h@5(0UDU8CE9tf4rs2u4C%8oRTV<nnss(A"OJLu,c:T7Ntbp^s'G\(2/H8cA,r]:3aKZm=>=,k#f<__"Hg/]jVMU$mr4hkCB"CO][qAQb"N08^$4)fRnb67Q;E%J`Df/f&`*![^m!/;sfM6QMHcLMc)pY<40Q,J(MUqTU7&ppn5/[/7G#>DQLBHE!Vn""n`E*/4+G]Ym$utc*PjD:-Mmbj*+QE278`u%cDB)F?SYM+FYKFks6Qf]9@6d8Q;ln\M=HKd=B=&"qo/,Q@I%]UqK0,GI[=s'N2K9_oi1sM-.VD5fOAI\1_PkGf"P0oahuk"CuM]$%O.P7XZ.*1G/@KM:?&gL/#E"aK]h+=MZa!F!7-c;8"'Ah(93XW,?;lc-26Yp&hmY+ocdd4,8sS8WVpb9;]bH<I]5+H#RgYe)h2T*7%D_8`;Eg<f9Dmdb\p\n2Chc=[@X/h_jYO_U'Y/P!MB>SKp+@\<Am:rn[bK$1+@X^$R9>.4KE*%=$X2GdFhQjCsj/X%jp59C8>#O.E%[W!^-['N\@B"IN?:3*05]A!4D`7_k>Va^=FH$>fq31];FJ)Jp]B;c1<TpMskcBUfVAk%*9Q,tA6bTlB/pHJ.^F[&)]X_l$h@28sf%0Pl22]iq"VLHi8:nFfSE05nVWm4S-N]+<**8%<HJ>&htBq-L]4gg>#h'[Gh!UUY/9CR\:)ra]JUPJ2,\1T;nf8Ipa$l&/;XT1g/[%gSX@45O(\H8[m;HEii!t8[[W%CAIPd^hM4f]Jii=eBDWDP=jBbhM04LqXdI^Rp:*(o]B#N^)rr/8HHkJH_&lJXj"r":Zmb%DJ^oe%Y2E;tf?U#1Uk&.l'm!9c0?_&0mepO1+/_gCT5*@T]kbb^QrIkU;<_LrinutkS$PhXc$hm"aJ=s.D-EJ%WVc2<3d7!6USd4S1U?&:%O6b,i:6S0,jA]dA`:CUj?G#$YfL'TRZ[V1%kt*>7p+u<Rmke`n\[f(:-:MZ`hlAq(rA1t.3DZ[2ge$&0Q".j+VlJX.\9:t<Yt`@h%N)XXQG$P*L:X:(%e[O<\X\2kGe$mUa4hQs;?^]*D80"MOFmPH,DX0l*PMRi;Cm/I\^49gX8LsOB<Qh2ICXW2W6,cFYbt2=Z]%?>Q%T:Aqef:41Qp:oMNY*7uY.ZZ6#P<MT/bp2#%F]p]fhV@L)3o03b:3q)Vk$0:ihpV3TgS?e:Sb>gBc?IQs/s?eABDYnW3QF]EV1-=)%de!<Dk*'apVnLsS8=,BYCX/.3(Zm=`Z,:_)8Zrm_B5Niq=kL)_Ru-6@[n.OemDA.`o;%.'ofo_5q1Re(%kgj8MsF]aQC;m,/sG.q%995.'Re*=FWN"0*gduQbi*tiUcg#YiFjd7Ya8(\cUar]P[p)#p_F[ZnQf^il!/OA2='f=hV&qd!)T]$R2X+:OhDXWE;sq7j-<93Z%'&-G^F.?EKpFA5f!h%Qrqt.%_BAuF@K2\.ZULsgNjffu78c.g&)gdK91JdYk-kH9Q>q:1[!DKXq/ugmJg:#W$i&MjJX!_pH0PPZ;%-\\Uh`@F"6]"GLcRrmqCpRIBOFo>d!+1[b!XjV.,PZ%Mr-^BDdI&Z!&\Lt)0_kan!4*\Bn8rBsaj6n/U,,Q&thHcboeCU6[f;GUU%eTTF%l1&TAT_u^RV96s8!e:)`Lb8(6Cu=c\QZfMUm@Tt7fq)A$H2m:-ec"lf=S'GjWA]r`I0um%2#-q-rq>#VU#>J5ZVkmpH@FR3%1*JRJ]\?di3)eSC)((C\\KChChL<_FbE()ep='/KX-qucpU@?uqh3#=mE`*(;h3M;p+GJ+p;9tkaSk@56G)r9qXIZH+ZAs4f_aBk%leA^g\QEp&\se)_n:6m2/81LLgP9QZg\pBacdK*(`0P!sm3gNKZ.W)*bF^t@m8%@)f"Uq.(H^`:.8ourK\4ZCe;CP=G'uH[Z@#i`%54*TpB!Y/LkK;IDb>U:Q?9Krkae`HYpSp>]h`WKnVp<TZMm:q9r7X3gaRnXfea*+t)fUG/13j<5R%?+5V4_U"B,[g(8O.j+$?1Xj%;[_FJ:+:7ba,<XE\\'p<G.KT6c4NL..Q^;"],Qn$B+FL73RCC%#=RAKE4iA69a]Z`8TpY(W_2jf:6Q<)*7UP7C%B+$&XH",mTh1D%_768O:V&E3HXXa$ENf62gs/RhK29)/'IR1C-,iH`ZPa@fa&tiuoPJbpRS:l"n_RMgejNHe126G<R974>3_ub%+5A67Wn,T6^2H]g%!"?GkbG=tkl42,mPMSD^9hKL^S9A[;GM4PL0^'!!PCd0Cnjq#BdShp#J]TeM+7<FG:Q"_!'pWD#l%8G@Obm95Wu:g!]C]&q;Lf@U%kP:rKf7&jlfoq5,-G;[>N^hnD^:84e3bsH:R6LiKf*Ya6-"Ut"g-MsA2VT/,b([uin5!b<^1=2=bXr%UVrhgtTOsCe@_6hTf)WS.%W;]l>bVm<@dpF)i0(qDc$JAgY:I%?^Ri1PqjdltNEjd.Ffmr9X]@hGar+E-qGWTQd2N2+Q>sNU9kf+/#A?iJ',o8A0ol;&PR5U]o%mplQS*ScqAg<A>1!?aUT@EE;M3;[@ITP[o_n<0e7cQu</$Q&@8g_]aX44.NT<d#_gI6CH\Es4T,3VfRr>rHhGF+9,qP9$YZbBs*j%MR`!`s7&1c\LH;/M&&POnF1m5M&MMor_W(nH@DS8mW=%YrD3AI%'U_,MT"1U]rrs$_#bd,>HU*\[VTn1qL3\5>##=43@<M^a#kLE%e=Fh.J\A^_dW_Gfb=6e-pM9A$dSh<bLY4:>JS4ijGoAUL>mgXl"`jZ5)"FRIVe;u*2@R2)C>q;rX*GW-!G+Jt0OSPnoO-Oua,9FA%..0)-DO4R!Xa(C\>F`!9c1tE:Ci+UbjM2;QccK=1LWDg/c9DHnNcE+PG."_:b>-pqfdlgY7<:h^dgri0<!>]Q2m/hXcY)d?;oW1!%Oo2I.]us>5T`F*U(4hJT"(n6o?tclmOPsEA"sN0GMRS:Ff:e"BiAI"ihUSL3;V$1r[Bk794\(+[],,&:IIAqNl(nRS&#4^:>6@A'%&X-Xs:K.5t9)^gcNS$V.;74e:iEXIq%B84!a:,3;785feCi/H&ESY0fZ^k8GiYRs%r/ZM'MO#L?ns7-ddY"Id6@=%P[k2m>po!C.%&GSnW(,#<Gms?i;n+/Cu_r;aC2R^Qc0rt6500O1*l1?[6k"W9WoR5=[eYh2IjbC%/+A5$.j"Ab#SJl_'SU$Uck:4hI%%5!$"Sqj.%io/50T_rt@>qSk\)(sC#&Q\$P=N5K^83HNPdNft_:MuB=,U'%F#;O5a)58\k/$9uKdbA$/ii883!_^R+nbUL*3Eu_k2`fMsNs-<'%ST!W1[T*t_k>q<.B0n)ja)c;S3**][a%(fCZ'ngb4>mOgUjDFm,+trTlFN<0pR<.M+^Di>U^OB&\1PY^igL6pPq?Dn2VE,HL!Z;]%^:X^!%7+=bD`P&#D.:*M7[8d(2b_n`gqnm5M/jE8pg$Hnm6g?;*rm)\)9-RFi6_;+j.oq,W7Jo?_#cld@-OD7>^<uG54$!/-N[]+%pB)$.O;*(5\W$S+4sUUdo$C1V:1f!<\@R-7IP;8Y3QOF53O0Z@?"EaOnj+u-rhsIrI>?8Jgs:*KH\RGR%_1CDAjqVi0flNqDe+ZW%!LDUXG=;_3agN]Pn+LR!>b*<c#6%5`]626&OF6M#YP8C3"Ee<*1#oVZQmJh3Z"o]`SIGUo8_00tJ+$PepsHOI-2?<j2fQ8Z`6O\)%bSu\S]7C(R?slt`8(peu8$tpm,M7EfabO;C%#b;jbkk;t2MC13aBlb55=3E.@cKi`/=$L@.%RW"d_onVfs;%7^(\#4dd$ZtC>.jb%pqs8@kP@oqRgfj3'\A[Hk(6uo<>'K.g=#cjV6agrJF7YW1"dGnf.Z.S\9P_Xpg,66:MYA:A7p0?[Q[Ip-QH(/r/<NX!C5o/,-D.N%N5$pU2oOq80KG4GM]]"$rYm5lc0a(")IK^qLI=*:*[<5ml*.3$*0]MZqgriM*,;GhjLtc$\)LerrNU)-oi_'N'K/Wr*d9o<Sqg%4%N+2``.!ua=2idnIF;i-XgI'"!qb%)1`PV@;]eV#!'*kjm+*8IEjSL!1EW"%MYfWBeQM/$QVP/lG9/jI!%OR1[DO=aeK?a9J6Mi]*%=&>KrCnPl3(Jt2*UhH+^@>Y8+<f1M.Ytu.:pU(j&U>`XBF1K_\;oRr7NVFsi#>e0I:c*E9*#i*[]"T#DU=nruSD+/p)NJ:#BWa>W%4&-WMAn^1!j,?d]E"nsYf'g]>VjA(g4-$Wu?p-1s%=/+!-@@jrQ;Td'<I%?:L2Gu&Qeifl_t[JRh/l+cUFfdTE1fCZ1$HX]*(p!2%lLfS_?`M/_e,X#+i[mijjN@G7UZ)sL11)g$@dJ)h9Nm`Z,4Q6)"F#E9[DS)Gr)DrhWu5q?Z@Cj+'$9Nn"ZKsh/"@tG]`/l3L<p]*%X%%oUEC6C/R;k*u&s/7AJWIeeQlC?u;[>>uL`=pB?:MFg@\b]LlIFPX4ZtYQ0-$+4iA`I\I4-]Pj,>>B%ugY'd,,Wl^c5B,Q3/e9%*i]7NiKZ>\o]CiA@Q&,6keIY2"1TSdnj8hAo[NQlL8#bjJDFS-Tl/WU,uIp8-s2iQd`l5uJk9;h,tdcHZZ?Fl]4%qi!#O)RD@]kb%@'D:S.sbm7I;N;0-]!IS/t]]UA7!)Fc-b[,QQba)\dmkjB7/aW7<s]jrh?9\/\UdM[Ud\Sd[Q3+(KF)>+]=R$9]%^OcSb5`?@!Y^%5g/7%^@8]XbKU1'D.0Zq?Z4`O[4^q8:W>`ldL0S]L6FH1(G9$MGa=a_cF3p.>XSu[Qf@\%];0A]#j9MK[O!qBKRq8Ef8Es?FtN2+%p2eNJKdBnTpO;k.Mo<fJe]Y:Y9Y\)Ekru76N>P#1g:>li+g*@/T1fZ!atnX06>ZQ:3q!>8bhY"1(cnQdbm6?W_i,U'k8ciYU'2nU%6g$;*)*pdcQgnSL]HcWbmZ)9ska]K4,NrC,"[g>WH1qC\Rn*sYG6H`@,T$Iq/r%[++.@\_*&iVtk)aE>f+oJ'q9@HM^Y13\Fma67%2iClU/f&%rQ6hg/j,'X-nh0!YEJg.K9u_\5_:%W[-PtUICub49P`2e.J`1_5m:S=o@=nt\%T,.)ZY_4f+*K5feH?8s4)8!6nVr/s%IXYDJ1c!%a_k<-562)bZPfc@ZX'e2:>*@.@cf*&<@%dC!Xuu/G^n<\`Z.Y/?cJGu`p.fg*X5@F+"<6Nh!M)LrinS"Z/A;$pA(]L0%J5@HaXc^6q=:+7$iYh+Fro%5VK_,^so<9&:[Idq4gXrC'RtZm#bT@fY,H)cgQs=fY\-\hW=C&/nR07:;,&1+BSNII/W1$>^Rt\d^%m5:4E+N0LkWqZ^b^*l3P6B[u"b\$)C@!O^9">QELc%[.EhHO^b=2$a6E<:<+/Pp8@aeQk,fu1$Jj7k/Ac%/RnO5hbc`4mG[-3>a?%lKN!RJI`N$BImlOF\1`CRHN`Ra(Mef\tipD(rp:f8E"`D!J'8M'-kSa+U7P`JhT<OX+)l7k+)Z!`4@WqJ@AU.Qqb.\b_uZZO&$qX%+m+sq_0]H'__5J>J*k8t4]B"B$nOAaaKkcPJR??WH.cJXn;ESg#B9PmemGoL&fDVIpf]$Epe^/5p!6;W5_rVEAT-='fe`OY9^155%'\i=/%mC(TGS,1jZtid2:S:t2s,biY*c^1?OiI2pHu'%uqgS&,=5a:qdO.X>+FA2--:'$g`pENWoD*oWUr0Z:N3Vr6Mm^`jmZB\>%EeY<mIDV%m_W.^s7hd)Jg#it_GCCT.*dd+kj6lJ?W#NM3IH+$M7=8',=B'$Q6o\?IP;.53S9ZK(A=OM8'OXcpS1Tso#+$V)9'`3<%=_'X\AC%51#+YTB1,d=@APlKdN&jo4b#g5N]0S#(&UW4fHf2uhdaVB2$PM);BGTRDF,%THp1As1/cp^hbUgkWiO<FJ/&-;K[`Dhn%RbdHe69_7%n.ln>Lf=dM)qQ9$U@W1]mR@=Q2J@%>cSt:Om'>pqSeES5a8!f`FPO@GTrqb@ICs9G#g4@69ogB[\/2rE_8t?kUU>4;%`lT03jiC(BM=J(;i3I!!'E_h.dRc!Ol[f:)LN5`@R0R^9p5Q*dSS%9"TgH]JL%&Ald?5%pJO2nTI5)9k\NlN%cttr)n/_2G5@7d%%De/t/iI^.V)a>B=pm*0n`.drb)d\jJ%lY\mKoCe.oh_2m4P\R1We'0gHm;N:&eE$X"ilT*pPt#MTU'JJN=c]AUXDJ_C4qV&o>j9S%_0@q[/jg4jPE(E.[0@uK=f4*@YB\QAZ-dqCSRbA%5+@d4j98DUa1hG;m/Z^(`(*Wm16`,!:(6r[OE&98CI(I1o/X;"M>N>i>)^-`%J&-,01R3[<77r0tpa(%)VA7tJq5,qfL]_M6-$8f(#^-XZqD:V"I^)RV\gEm^72TiMfC74+bo0"h7sKejUPGXbjPgPW?UHT+GmR!l%?KjEM"!KgJGL1?L9m&`kn[HC='CEnL:7kf4-qkbqoUJ9@?juSZG8I*8]Pmnc5Af6V9I(f^T(5II&j.@<SeC\8E?eBC.4p(oj;X4b%S#Q]!]($OPXsOjFH8VCPe>imEUg?b@,5#\!,#tQBi?,fmHsjB>ck_B?X-8Ze1l(H:3i%>H=KDmK"r>_CG%..aP`#jaE2.^Npk6MD%RL;/]-lf^#\gd'2$&.CN$_k=q*X_)5=&(LbcIJpKd82f'PA=8WoFHW`-5_mk_X=\ZiA/9F9^J>_*iW`'\@V0:Cg>9i#+JHJ#oG-)%&!Y-h:oIJKd'oeNPScXZqr@m#8eZ$%7_eJ(HJt4n/kN<nh2LEIC>N9u)<Zh$`]%m8+LCeS>ATimd/r<cS*FL"EOSc\b3:5MFVA!S%r,[nuCga[@h:P'i["SHe6-d?+ELaAD"WK?G9*eY/-ca33He&HKD+[q\3!['t9[1.<SRKI`F*^^%(sA_S($4JoAQ!ppMe_.[Q&E9I%Lp62><W@;4fY&Au\PA#N[9q`7m,#CLZ&322UpaYi/2_9<C(C<^;U]i-&U%@K`cY/Zn#C_fSQ%13LJF'(H@2XJb+i1rR:h1Y:NN.M%CZ5(eYe]!<m')fBVcu<u[+D,NF&%q)#eP!C@P-^D@!t)EnZ[7U3RrG,:JZGEK1M;GhnGZX!Tgf`HlROCHq2\aIi^,l8&"r-T*4V9%4M;SRFMDN'7Ce[10q?[r3cM9cA95;(cD>-<?lcrnh3C@<2gNuZ3hEC0CE0>;f,Cc$2,:fH\0S*\m-A^MAgKGbl.;N?@Ji`<-Cdb9%moCkj+IiME8G`/"?sU-b=-^tFYKsiKgE_ZtXgs^YZV'8/nR1%ZU5EN3Y5ZPI.%aZF_3^DVY;>/GFLEGJ=3=A6A_FPQMM&6NM,g"3%Cc%\U7-]H#l("R:Lnc<T/A)4GVK4M;%G0SZ2k&#@QHh)RjQP!5:(AD,5)Ni=e!V.15@]'&\eurc/u7$D`+V259V,oSh6;u;X4k7[%a,d*=3WVi]-5fP@Uc1A'E/tl2k7gSPqX&FdBKC-)4I48KAn7]N3i?)k^j3'a8(0JhY"dfG5W#$1/=gjqUiE-nS7:_VN]a:S3iDT0%'lt]<:$3c.g*NTcUZn;'U-;YBN2CZ]/LMH2k7g]J3lHDW_CuN/*DP]#Z,oG`3Q9F/4BE2UVK9=M6=$/h7FSem6VTJ-c6m476IBmM%Z!V\AFo5o6Vc^O(Db4G/dlEt\<J$c01gQ3T5CPG['/7?XmurU*F,HgccU$V9Pi@k36'l-X11KpT<$$?=Br_<F'/F]oX-Nlu[pgKd%NbdQOALa3l&[#H2PJH3/?%f@^k?3klY?kL236aH8am'*M$r6eRKcL>%l;p1A4p0OgI$TG]^br%'#@9GBalbEL67g8T!cVM0Ku1X"%!afTT-1,LB!@`su19DJBC>Z0+@8N6HpW?lUY`[,aM%F_[F;J++\!OW5;J3oWr5$S3Gu`$C$Jg\ZN+$;c`q3%:=Q[oT5FE4s)`LH)%Qcq4n&!UFh4/Y[a/oD#+Pdt;:d_!l^>*(L`!V=1qg$Jtg+N)Wa@l2^aE>Ij974pjpWuuGH%#9j0pR[QVE9ODM4a[u2"O[JE4S8?T%L,6#g8Ajo)TpYcth^B)@lPFQ5#hU7sBmWTmLS:6Z9UR!?%"hR4$5?98H^Z`*AYY8cm4%;_BH)WP@<g`"XUFTgIf)>pD^ZH=;Vk6j%hZ:Ea]YcjH:Hi[@5pIJ8@g2U)I@lHS5;'8dUH!^i&ZK?WE>HEp`i2^B1.ZPn!1mIU<&tSu$lE*9*9MV"k7c&H#_VrnRm[<MGdt%E%`(W!(fd_N.^jMVO!nGC)'M6V9##*!00j+orR,;0>rk'%$OPs*Y;`f;9$EuI]4o9N\=9f45=uKId_qp`l)f+B37J=C7,=aqX'Za\V%lF`M&a'CIC"L8/lEInSgY2110S>"qG,PnDQflC59e\=J$iLP&ZX!j,!a<g:WOFYs0UV^;mprY<@gc<Bg"hH^&.bp"0N<cV*k9'LZ%M$eGX[X.:[]]4i8<QZ7`QaTo:F2*H><Od+rEYbm2FeB(cULlC(kbll0aYE_Wf[XL6CO,:$_ua_X>d`in[@Zi:7a+Y>O*k3&5[Z1&%@^B[+ic@Q/$):ZcgW&J;is4/P.%Y_C_Sruo\NKTsd75R9Vb4c"p8@?J22!k`]2g2%(t7:*SSOpAT-,Hc0"-uMki`a(M!:mS5F9bj%!T7@WC3q4bir7FJ0o3p`@esX-8iXr9`=R?l$fSZ,)T3<r\u;l=s,9S->VoE;f/JW](g"=b7TdK'XHYZSEfW.;pO:k`Og$RC`To0q%VqGe#(X=\ReaBgW2Dpbek6_FZHP`(Z.`:&o]Jmj2PSY`>'b'2l]`BY3NEbhucn'-5PDF39"a9Ofh=!B#O>,&m_j"X%Hcn/Nd_i<'%Ze3.DgNdW7HrJ'ma"4Z;mjTbuY.o"9nZ916`5Q`^&rE-qqncg?'(3`ro#DV>KVu6%h:t]9,;M;'E[psSGaUSj&iFZEBUWSQ\OZD8%5H.i9O)1!mBq-!NCT5KQDR"\P*g:K\ZL3ooD09b"bEY4!Du)sGgq/9;H,RV^:H$-@Jf'qGE^K=Fa5uH;@i-6fnGL;VI)dfEcTUh0%_##9X\<oGQmpXs&i)$&+Iq:6>ga9/V-DgXZ!3iik3bc(tYrh>6C$^:P^Mj9.:eS"*m`aB['sHaDR@a?9+ddm@ms`2AJj#0llTn"1%3a.LHkgph;I0j7I)(#lNSc%cigC"<,lh")IN_UV)SZSW;9j0]OrO+^]%bXUtW++<akq_<@rPMO6\Q:Kn>33r:@a++16HIpA*nh=X%[E;Lt2.W*7=a(,":mNAWe$7^0c.s&]'2EV_hPPk!d_`OqGm&Yor1_V+i7%7KlVO:&HSEAiB__bRP(mJJ?r?/b5ke@np\8^MfG4t\%mT/>/pVl9mAQ?&iS:+n&15+F6[-Zjg68mtq"ag0j#WC=-:ubT,g/!cpZ+jK^']s"I.Y,h0ZSf3s2IYr^2[c/gm95eoWKm@$OH7#f%(%m;4bB@V</.+(I&m>NH$%N=!0BR&u_P,=LbKUM1Zm<*m1HV*WY%kOA]76pm6t'h/f7OCoaORPT_5<bF6giaCk/%u;WXa4OYaL9J%2O2dr"2W`X/aJ"PSNge0>Md%cDkJ'^JtK7&=ufJ')?#T.jdgcB<*5BKn7Je0BsG[(6mq][GMSWi!,:6"-k!_4%gDS9"J#"Ch[^^L%flAaY`H"9L&*<F8HK?uJ@g)O,b,B,=%VG7)0&&S_`PN%,j'KJ^4N./,GsXg@kK@G(F^\mdM%*L0V%F[+pD5lX].uHo76U7VN"Q:2%1^5XY<XlM]K#@XYio<E-NaPX(+UZSR!q%dn%MdV`6ijm`!HuX@O%UBC$IFYVmP06S\=L#e1BQ_f^nC1m]Q2LM5RW0g_uMj`aFU)d%K>mm$8(`)V!OC5an&i6j+2P3H425$bcN05XU:*N?au?D)r'jOIG:VGoMt0<rJ`&@s;*HW*rGGIrD_'V=MXn<uN(gN*T097NmhFl)%auA`g.F:G*VQ973%5gmd5JPuMPH!k,Z.r0IFo=YhL)R>"T6F;M;>cZKlM>d1KcK48&aK3QD.jQmTr`D8]Zk#ZnWb9_qK\MbG1ehE%OaRJ9!kVZ:5PH_RiTg86,a)q:DacCDCI3SC%TWHsW*edkf.X5]EjWE,G5S^Jp%,3/&>lVfL`WQ>lh\/_:s@f5/js![5aXZW>sE6s%B9gM,YNlu].W)i0Ic_GfVlG3+G5`*=qMjbD*NlQ;Mo-70l8OQGI/X/V!UK98=j#<oa#EDqoW7=jrF.X1?,*'Z=bcLg65-B%T=:][%ibKRGY+Ko<^OVT.I-^X*4KJ>3^*J_Df.Z5geSj(MiuRmP<nB!H<8+/-*e^PBhQg_^\pe/HrBPN(]YskOO)Os+LUpPe^TdD+-;_a_%5'gL!gF+u!gSuQZ?J!LPm_Q9A$[7*%\phpDkEh:^jVbP1T79hoUopD<<Bk[g(9XfI=D</i\pd!fe<[+`A(KZJ=Bs=a*oFJq4]jk]%ajg"T[XX/3`ET_DY3S#57\(.VqKXU@<XLX/>sE>T_c?Yi[+CrtBj4k-D_WUpTt5^0;7MElPGmg1*JGH4*oG&i/6b9OOmDjH7N%*#%%I\B":tO#P(nR8@"R>i/HfrbZ$00Y1oCrk+)u%Qu'Jegm]rE15@M>^+kH20+J'//Jp%)5=8Y!a&lM@W.<qQj(=$"t+F42XFlgTp6%f?\k:W-non2BPUHoVh'<*@i&@Y+Kq5@q:t#N)\ET4!<*G*ZLrYT?FdLWdap_`F*ie]E;W\a=pqCrOb?I$tTY^Z*'^C<Bj9/b7Jgp%]J1Vi%P2rllu3<k'"!(s7s3:=bNgIb-S\=f%]8&D0@R)1j1S8rbSmun[<W(F6lX]u]P4qM.'a^S`0;r3&1#rne%MhoO4u!LD7V.8%^2<$LA$^g1<UhOCD.am?jf)SOG#ssgg;Us(+r5+Y[+O/s</o/3cV@rldb-p$\[b\XF'7mJUb;@)kG67/8!U*.b(`kImT$'bKu'aq%T.AbiqffNQd_U;a/Y+K>AYl`2oqHQukN,FLS83OFQi$?7FP5?<Ofm8Bb0n2Tf:MW]:L?aj4,Y]TH2\L0,gS!%a_pilEN\'NI*fL=%p?YOuYggGR9m;K`BluX)@$.!%mGg'P/p;22N%;G,D6A=MI<g1R2Ugr'Wj@TVF?'#B[ZmCFhgJd(SQCm8ekT92HHN2,Qi3H/Y2<:r%F8N:ni(-aG%!u3;FW1jZpeg)0P_f2Hf3XCg9fAGo=K8?k=@thf2+]BVP^d7UEQJep"<=Z)=m>`)ET4[\eFKXEmn2n];YBsf.W%nh%O1W+'eJj>j2'Pr+jEYJtZUh)n:=5HI9'&jGgUhAWA)"@b@&LKP]KU,3*Pp5pKaD@.h(Mn&(FMbt5?%ki)tTMacWiH>\rJ'PCJu'Z%]8Q\?@nFr*fOAId&](o1[5RKYOCeM0(Dim]=o'#1hVZD<e(X_;n+Sa7Y-&gEjb<K&Rb6KM!WDWe^A=),gOhS9P=:=<"t9s/gs=H-%<-)6dhY6Nc$mWUAm5]eGB=AOV_lnpJ+=sS"4\t*eJR^@kT*t#3;EBeeVMu`SWQO>q2Ql1K?,,_?99!+EQ835Z_H>rQoTi$!7H46m%d_,BHXun>=n-9m?jo]"0qeQ*q2(^q8(d)^*#Q'\[J4sn*ZF,q8]dCkV]PSm)_G6VHX1Dt.+S%@rm:RhSaD;kgQjk[Ec4n"inE5Kl%m$?,l5Zddc2T0SaKq0";T3Md'gf`^fA3`MKTPZnf\r\[*nE6d('O-<AhXJj,KaauaT=<80r'7\acD6Xl/X/"L46.r$QBJo)-G;E3%P?HCE?Hk.T+-Z/i:VD'RD!%Ye!^[gAQujagp1i&<@G'&QfY\3\;1r@2,]d)d@WeZWGqlr/>l)\3FZ.Q)>?Blt.E/pp7uGF1fB^Gr%np[YJLj#p>M"WADg<73e1c6KKVn\qu1l]:S^jr"%rDf>u>U7&ar+GWn=7K>I`bU&+8@>aU^KMR,qL!KC=#_Bo]Mr_(`P+:Wb9(])%\'=$aR_I.,`/E=0p=na*H$kZ0Cb-U0ji[%91Y;QNEdk@&4o\GdWT4t>S3LBXB1iIYoo?[Sc?JOBA%>J5paeODD60;(bfcOF/1<L$%=*a4T@qAr(Q`II7HW\7(Y?H6:..@[Q-`[umS(m^`W7LV*V<bJ1lb^g(k5"Ef`PA?$K2Nr&pf:+rkGL5!*qq/'`T?2-!oE&5n+ZnN%bC8X<hW]=Ro&T4D?`e4K(%lf!>MaX"SWk%nCJ04t")3UC)[sb\4;"elhRdKfh@<<39*a^n<:r9AFBeV:kf&KTVTLu=X0L+9h<P',%]K?:5\,2=na>SoGrPp_cBdB;IRG!Z\cN`Xeiq@ZgR6Vf(['cmR%^#h_(Gk0DVH0ZClM=5#2`6pqXkd4_jjS,of'i,'V>S]MRAT2E%2#AdWG#'W;,n_TU9)aM-0D^(%3hKY]c<W%t*E8XAie8PCAG__%/k"8>r9;L4YMS+/X4<4.V9e`1kO%g%g$@DnG4k>iDiW=o#)JOO%DYDsH^B`Z<b3RYT_-]Cc\$u'p2^H%'Ms6:%FmdSqOt2;+0V5hu8/sWe3Asg]Y8E44*?X[g(4J;7pg>-<e/L*Glg<@&cZF@j1IPgj%!M/."iLn0Rk#$PudkTn*&]DI1r><#8Q,jO%qGj@]:_%X!1h0!G>_!\D=IE#U.50PSUeGrSTit;'O<JKp1'n_"950VRY8P+0g.O2J%7^eb*[[^uS,a;k9QjK;;_$L4]">abSIfSZ+PWo2mj6_jX=^K`VU#YUu,$C\Rn?JE2n#j#D)r!\,^h0i3eZ-cM1HV5!X;rY0iD;OZ%CO[g.p4mtqAqfDpJ4/pT@qFWdZVl/<9^DZ&h8r-1:n9*QpFe0F\[.^,QF#m5)kGh\X8JP<gfMZ,kB#k"f[Xp5O8JMF_k*B&I]XWW%GQ.Mj^ogaNX7M0j^p3:kF?Cp^?hW&rlfJ^UiZ8$]>.</>;AM5L+`0h]Zi,/;O//F#J"IOljQk:SQa.NNP,Kol<2iR19+2VsG>B.L%:7oaC*do<6L%;3pW-K4Qh'P$Vb,f(#P$RuA$(+CYP(W[S(gBh:V-%cP\.Dlg0A<3PM4chc=Nd2sT@YlXUtd@sj>Q,GBBKcIHb3#)%GcSK7LV8UNl3#,O8iI@fMSA]fX`.J`99jg_Fl/%HODGM_UW_(tl)i`'.V:>0qY8t]M+b.[IGBoCIPs!Ojdkj0Y?Ghd7=c7MG=n^k%f3IXUSBf@[j^5/,\mI_C@\:3'mF2#+XYuNKgqHL`Q'Y1>[rm.,eU+QV\aiXn<:4V3?M?:Nc=B-!m0,d8QTsJ()!/D-hHa-(EaUDs%MrcQo2,G,lhM&3%HN)hB]5'5ZL9aX*hE7jplkR8F<i=%A]X)sSkKA>fjdeJ](YTL#^n@]A3hMY,aTM2c[u*\r)\7Iag#ko]Z29u=%U2HPSgrtkT`R@pB^HYJ/`UBYW*gWB^`&7d4EpRsrqK-j_.DHq+]5EVl@cHO!ASZ68Q.Mr0NTL&`VfMY+\QaAeD7ro@(:L,"O$6V<%J\PkSjnFtqku-P]iKik".lSa8j=FRg[<7aDEkM?IP(9-ODP!dkD'0A6GC082*l5=#EF/Sj>R)DF0Yd:"HdLHi4kr^UD+d0!\[QQ=%\$8:^Y>is=->J,tOP;AU55/[J_<M-,ZE:XI<]h2,g*`D/)8sfaLt1&//rY&RZdIXthMf-*Qt>`$n7=J,9RLW#/saaBD!e%r522K3%;G6*f+JZ,9iNY-NGJ[!qZPtD"]lF.X&g0*TQ+O,9>je`^<1j$MZ-'D%o]^dG\/0q<S,_]k-[8[SGQ:,O)\'LSZDK#L<"lkoh+DEH%I:/N'!g%^ITo[,>6gC$4B$0l0Xf^,,fSfT9,P7+C:f>&OnMFTmV'4\c#<4UR)WH0eE;Cg-OPurr<f/j,NmlC,QK3O?@inu%*oQNW%5<;7WWR\RIaj=aKUK23np:aU+;Ye`<PiZGq//?Ws;Rn:6*,[BNUlEXNPJ_-\4dFjZ>\IJ8j[&;*C3*U/52:BImjnR$FWXqMZH\`V%)0g7N[#sVHB8Y#jb#u,+SR&93Akq5U&%g<FbCbk`Kjn6O?5AQ6M`7L,[B5kFVtSX:^XC*i8/Iua\17q&^L$+S$$+p)[[IHY+Ml([%e$kJq3*<8"Hu.T%jagmTRc<Z4\R=KL,Yqq2@2$$+UFD:N/f'7Xk(<KBW3/;HM2j^SX/$ZCT:>#1=5D7-g/_:iIYmNp/3[.iWV,A\%=fW?iATPVl23TAnc,#;o1I,#jmSTJS8YYj%mmK1o>jeN/CO\?CG3-6N(TUmWrSYC`K]f'I@;`?XQu>%52S`i.l8Io*!JLirQq!A@%?kuP\0cBd?&t^:DFPRkXQ4kL#Y$6h&-VNp!8YR5ha!-DDF9=CYM%N0XP)+;)M%N2.XT@P`20s2(`(59-7+%91&B[47IFsB%ijY_?%&Ofcap^cZej"&),\q(Vc.oA]=21k$1L:D,>T!hu!MMq;uZ-BsKr:7T$O^!,k4t(s&Wc,[;.n("EV[pnAKh?fe7,hG(JU@Y'n(I\0%VSBjS\Xe_&6"DR>'e@EbG'[GmF<?hjQZ)V&CKo',l[.i9-Z*C?SPM(P:2RtZG!E!WYI\/4r#`b[+QfICNXK+YGL;>M'mZWeF+@5T%YDq+/jr&n:]bqj(0J0Jr;^I[f5,.HMe2!!B4sKA`07mT]HQ:c,C/=P59VJm1M0m^^a\]N=4T$3-O+nnrZjdWEF(oL'3;65'qEeDZ%"5ClON@b)qq\Yjkr[El[+CABEDe3<"@^Q)RCAGK6H=.NdfG!2O!D?ZY*YBP?nR"1Y&;6"\6[faF?^$_kX2hOV#F=kBPU8^pD!+=Z%p.YJWJSfn!\7LF>Z^r;?VA@/@D<rl6/9d%85QV9KT:A[Jf%!]#)M0'?HSED(2rO.6HSaCr*/N8U]Y7dKho3r$C^FB"Y36\geB-2q%I_7k%-(j)db_>QN9r/rB"+Jr.^)uLtp5&>n&tef13(k'2[<HIA)k44m"Od'51j\VmJWB*!d8+:gW4u"mU\E@&d6]$4iu`<"`&k>P%4$C"`8Gk(eojQ".JE+2!WFuIf)UU&_W^Ahh[j].=8[olbF_6BRC45=l'ES4kIi+(TkY,D3/Hl%`IS"Xh"<'9EIeE;gc#.5nN[prr%:9RoR3:S,0/FS%YqOaB9h8#cf*1P"cr(0HrhAV:Gefo+gk'glWg]B^C+.>,hZFu4aLZU2=RMP[*qC"[$,1,D$+%=0]fKm+Dh2`b'%r?\\jofr4_`(MQ9r!rCF"S_JfT>Lt,7"'Po7+#!X!FBJA8^*:4OA<3)(r,_$Ul^-+17Ci+hr&?ej1XJtgBRZfpOE,o-K0/'&]'&+%\c7q<R,At-eO+Hn!Z:4d,4Q6O@&Tiq&ZHF&mFn?`k+VXpVJF]#IS4H2pBQ*Gf<c<WDSf`"p4*".q;1kc:ZeAIHc1W>'e%:Z^O\C^%c,eK2WsT_n9:FMpUO-,nh<b]%j7>LJs*cI<1%u;5B&a;nc+RJ<H#M@Cj,tCYX19hi:=h>*DK/V"@FW^Cr`Ts:mZQDo6>Rh=N*N1e%]]<Y':1CY6-3atI8GngX$@t*l'.<:@99^@"]B!Y7jMr6jL@_T*oICObQFg%k2k5RiOo9q,AQ&D8HKAVA>?^kd.R5*li0K>2.ro"8%F'Fm[YQ"t]n>#=W:>ZL"([#FTQ7'!h_9s9+>RJ3G83G*:)g,4ObfEmiYhuU>p)9HAN-MNQD7acD<T$uNTj<A_=+lV4MT%p;PnUP6%].<o.oq/J+bU(WrDXtH`^8q9JNbl=/s.$effj3RMqJVJ8-S8U02bR@7V.+i?@A==,rVH3,;WhIU8F'j3irtn3EQQEIAr/37[03ZP%Kt0)I[<qFb"a_sMVB[<W.#,%Qg@KnuEc#CeYcN@CbE2!ffo.p+Bo?b^jV-l1hC:neDG".^).I1U9Gh1#IN`PKi0-[.A@0fL)YPi:%LJB!K7W2JOVDW_$lj?n9B_nZmUP^eAam]943WM7.f^/=u[[<FL4.@JjRn-k[eCqd5,$43a0RLc^$@en3[Z&T\_6:0e.FV(78K&.3%8u-B\E^Ps0cGs!qcgq"r<2D[$?<'NC%e:b4137aP#Gu@S"$(3YjMX"3OHt8ZF&IsZ[H6jU.8tYP&b!Qs%F(5.PA`<3%`NO+,RG#B%QXXurm#R[Q6[J%D"\BpCPGT-f1,cG,A7GM?.3K7>Eh5WlboM5;ls7b!2A:;2Q=#[_0VQQ%?]>BfK6[J#G?slqK4%8/6'*YR^-.WQ%XTSp6*YA\3Nrao(&I?P"#lt)k\.q:0Wt@W_b(F^G&576I6>bi2"G1sOPk-45B]_Ke;O5,b_%d*k6WF+Qg;O!V=?BHT5j/u%mXjE6%`df<-+D-3*ZraAR2erEPg&hkiPQcj%]b;m+%U`*M/E&;:&=/1_c3*!Q#r2Y*2XbW1]^Gs%1NNLOju/gBh?2,/krAmgNB6Vg8EjB3%>)p1R:Ih4dTbR1-FrR.n$S[5MFh4@s73OS;m686u#:0n>NXZM=h\hKl*'X`TMF&l\BcOm0S_"to+KPV;1,MD4kBe-=1Vt']90[::%!2"ZY8o]Xjho=7j4B>YV_6+ffA,_SZA9lu[5/>FP81g\*K:>rIkKU\k4#b#kV<Yt,-'e#F;ZHs2[c3Zk;)^.<;Os;'f+#cPU?Tq#%5D"],E58`J00>&Eh*u0f"/UQYJ[a#IJa-?Wlt.q/hMo:@T(_?g9(1UV+uXZ@GpX$knhM]F0f\_srPoE]5&9q8TfTC^JKoM-ioR4"%%RqR2IVJJq,?uld5#fRn,Bm6R3tN#4a1K<klI0a"Q),-FB6-Li6,(?A:/UCo='gr[d1(6-?i6)EIcrO#GOl`%2n2>lMkA9YIN(6j%:)1`[mPIp[er0)g40@#@ia9<Mb*/@000_:6$UhMRqjm@NZ+89K=5K7olK-jOr,bfJ;V!QIh+8o8pa6QHSD7+Non>NlNGf-sm5;Wq%He$:)WMf(QTXM78HJ$3$\U$Q@U`(?(1b[tAbsmmlHM^m4]%sdC7eM.Wl*f#g9]'`*l\F5kg;iV'Y&5obB]cms*W.Zj34f#IW]o:K%gQ^)9c-I8(Cd7'>9'*AH5O;[id*B:BT(P/Igu#0C"*=F'\:"U:eE[=+%J$XX#r&Mi+Vp54!Cd2"npLTkOn]%[isM)Cg_DO<7JSVO%?sLO"hd4>)$qM$1pk$%o-3b;gY[A2XQ`DsZM\M!Q!XpiU0eO)b6&,FK9=1id(H,(O\'?J,[D?Ku5.S"2,ee)5Sh4cc8r^i9^\iPC%qC4CA<Y&</$.*a31eT;q,t0SDME-]t:JX)Uk&HmRr&j;d$QgI+nE]Y#j[]<=U03[oQ=^F=:2AP,?rGATqt6j^P$9;:51-p5'`OM0%IkE#_=[#^RkJ!7UYJ"9oor7Tfo7[NsXYKj^RFaKd'_5E84'5]]#nLc,V,dMfZmb"C0&Bp9o*7>p0luRLa/1l?O_gnp-FmK[bgu'l%OOm['H)n:p4:l,]g.;CR(Zq"BomM_MUQgPjT)m%qH7G*_Fo<Kg9^d5D*;bRlIXnjV8OYcq=75BC@_b7D'!u<<kN1FI&[;2nUC>Ci%?+g0)JNkeuRbSel#A6'2;_nYk?RfZ2#4PEl9U"Pg/:I-7^'U0>4q"WdhCb*M[?]FAO4N)TFeti20e=H[qCGA'b%_;&a^/ga#*o,g%/@8Ca5HJ_K8DH,)1:K/Ak//Nio-]7i<cqoTISTGJo*!h"1<8Hs`Q\4\,b%TY%+/s-RO,/FOD=^TLaKE>WQ&9t1@,@\>YFY2r_=)T%h8q2Sn&qK3<nL:-e6Zl>rM<1PFc+6$fIO@SbCtQY8O\VGhp,ka#keA*>M?2s2J_4Jcc"P[F6rDuA0IdDr`n8A4PH_\p9k<M.N%>_%UQ[fIA*IDn2IQJ[h`NQas&>-t^!CHQofeA?U,8A+3]^V!Ud5bWD'@Fi0/`am)5(YEK5,3G0k[:ic>K4\<dlr&>KKdNoY)[Ta\9WI%Y`V?(.keAuT,X-c(KHV]3YH'*eo1/FfBdS,p7+?I#,TX3FaKlFr<W%ph+d4EqV/-k>jm[lF3JA^PX1]"(H0WL\(HY3+)`\N-'5J\%=#RHaZ!:O=Wd!YReRWHaVl-\Gd'UGTo'/d$P.l6b]9;s\H!f'Bmuk=0D^:in@I*k[qOhdi4+C9_-f7Z)*F!ubDE_Pp*9og)Z\\Y:%09O>rL"(-kBspUZr:YKL=alG+c2leRg?.77Z>YB;E#/g@gK))[;LdR*\TALnS#noJX(<*Rfd/?dpreh\S'+g(T8pM;;bI@$QJ.nB%SNUYSH*)qNS?[alr#E&5dlc+"D2.'%?R]=Mi3>ch!S6A#3hA326'"t5oGf3#?=\./X!Nm!-%WpLi1EXkH$e]")Qe3kPVmtM/gX]n%!,JH>dJGc4qskN,;-F.>\T63.7&mI.Ku[g$K0?4Ha9to3RBsB9H'Ue.'^r70YAGhpN7/nrSc02G_"'?qpX2D(LP8Jpib><-*+F,_%;&s$XI"-o#1[R"AFqJi$U)pL5(&,15c8SPV5J#tN`Od@M9DT'@nKP4eXh:8uZ?4Qp/=aIf.Z_!@)fi[&efl/_LLsUjb?]"PT"g.S%D#;&=p<+tEAuF(n`j;r(lR?Xc)O^3c9M2^](b#(:pA+%]]i+7tG:euE$\bqtG:/iG(&4';jeA0l6*oE2l8CgEXlr)^3Ki(NOl_MP%>J&Ukf?`d_m[)\3KC=,e+'jb92U=uW48E^'rn;h%8(lMDSFBs<_MruV&ka*F^1rcY]OL]MYk<^q`3o0JFL*l))+E@f79?]lRWEm'%Q9;f3`"kNUTBK.ENhlqQB;jFI@uJcdJs)7+I8Ic9oN)"+,u/^'D9A/6#PHKPeX+O7cJe32?D4iohd3ic=514<AYja'/!Y%R2s8`A%c.,n47BG2(Bo/#R"\ql9*OE[UJ-%)8!B+PHP5kb]=I.!I8t6#4E!!Cog_(t8$Cm3jbN"jI#uKQuW3/.,M3@oC:=q+kl:h];+nr*U%JpPbA,6ff:!gl)R@?XN!9d9*>$_)f!CD)Jb=P+lu=VHteB9^7[TurgsFu<0+P>Ggb@$]1IRtN8,JpB(@.Vt7T;q<3,+0i%AW3Ra4%,BE"b-DASN!#HTVYXte!-:X9&Y_>e<Pr4DW>1b*"=VHpUKdpmOWiQM=HQ&lf8Z8pA`-+47@2$,U-:Hh9g12P(?JM'q#E)^:;QFGq%2t#Sq3]l]c[!-)-GUTE[(X;(b2>s9\%^>pI*TB(s+(F_[r8[2%'T9*ME$#Q;#:]'&f]q@YD--*lW&o4c&8-(j/l?40.T-#8qD>)q%^Pb+b9aT1A4s[dj8_-r>R4$]'[XLrI:l*12D">gPH+^,dBBJ\N4`<OI2m2:Y!Si`,`NY&Lpbg+6pSN4UkiR>Y#iKtAM0o'TUtar*%34pYV!WnJZ#L=?h!!M9n`dj^n9H`8.^'+0T;H90;T\MUb5]AB.?uU<X5[]'*&qI1t!!ql08Ktu9:g6/iJ7-LuM(br;^q.25$h&fc%&ILXp&gr[tL.7+8F&#J8oNQX7+Tu$Yjp,K.^ab!NK>r^7ciMK:ch0JXh?WI9e>BZPj/df2$o:_#U`kPba89$rmfW;-6@7hI#!gb,%)9]L//gsaiii_oF`(T"Bm;TNJ-<=RZf9(e!Z#VZ.P7[7^*$XT\,Xe_e!JEM=%rU.+%q/qDqe<,bIC8hMo5VC7AjXGZ;339dKU!6\%JVP@mkm,AiRj#j,#nntgmIJp<+6'//SLS=tT2[s,)V_rNYkJN[@ii6SL8''m?aF;L(E<g?k=H?-#_EmQ(Au0"_c&`\N[7+6)eg6<%NgY,eZ3pfmL)Z0KX?jY,A,t="Rk*BgYT]7fUNI%;Y*@8TOZagADrP@'2,K;q+,]bPX[0nJ@>kbG:0h/dD0QqKE7kF4SKefU^Ab%%%+_hd=9r*^Y:#G0L6kr-'[XrLelVhkoVle/.o#Gi^*jrFNeEs.f4SmE&?Q@&qm<E$g,5tT_"'5*eQQ6UX13"t^l?H^^nsbXE`9i(Y%'S"O#J@HV-Xd+`(*cQPaiZSjFWm$4k3H,tcBfs%n^Yj!;F#K]S13%L?S$PC+r[[C@2J3-i!r35l"u^+H8GlQE%;a;o&an7+=a't;%ZU#l9/+*U"B7ibQ=547$c3BF+YIGP(S.,I-^Ys'<F#JimJ&U6Zk%k#Wp)EE(2J3,n*:aL*"u^+H8:2D$K4PThG%CEJdWuT*#U8du%[%,\D"0AQ6PC4q358p[&g>DR@7#o^q8FR`!2ckgX8j97cZg`_Ws4r0],`8FhE\b5`MSu,BS)&P(n_.og>IEnVd3WV?51mX&.7]`!%XQ+=X!R$RrT^)d\]`=U2Bho<i\dADMr`<VQr+CHYD+CfA.@nfH$O%Q".!d&/_\P8)bA"McS58;_2&je1(ZDR9n`Jg+d:"?$jR^bs%&f.H7YQ#W*fJ[,l^Yt5Zq!eTXrY:]pkX"k/6&ND8m&,t7=k2!4Y%OMf5YTY[>X=C!Mlh\<>09Dd4BCEB(8b=fACJ,Sf:Y^!d^blO%+AJl;A>??tWhuZDCk4Le.KFF[2WjQc$rbO$\H5$^2!MRq6PI*TkrNZZEdE9n.60;X$6,:&UB49.KrSl+Lg$CWkW'Z4^te1U/EP)&%HrH/8?nEc"P@:/RSg-&,,@$!TVfa:U=/O/$ntqY,?)uVVVc?/a&3BSu%Xo-"0WL?RRq,)`96s@.n!^A4[&2o);)2HaVR%^jO:#l+%#*@nf"J`'7.;*eo[a:I;94U]J#(9J)#%t-eE>2!2fp;1ah6E2;k;81*l=iLiS5GI>(s(HcFC*/VQ8U#o/'G5`)m+)W>#ppQaqZdp%]@C:YSZG=)lcBHM"PWbZ`1D[)2I"OBS"sX2H?t`(jb:-E$Q9@8!Id&77h)03T4V)D+QD1,30I09/T5DE9+Xhh)IK[S.-,'2>0&FW%Q.$'[(2]=X.RdKB;-m8.F<+L$4t<]JYYre_]!W"0dITu;jEReqOa"=gjTpE0^*)\4'X_109<Of3Whm&5R\fMs90(RhPOYXb3#>Oo%kXY+hQ^5a8*1=n+\m1?]01f.Y9,jP'!IUXWDED[,N",[-aouf;$@.5D$N*e5h/":5Y,Ceb$GCKLX,o-@5;_J1<)k/;R`a$3UBZmF%/AZ3+!c[HN-#[YCV,\WS"Lc5;6eI:`n1+`jZ[u22c=Hn7Z'(C:i@.A_9,B$i$+^,1bMuQ<HW`]#&-m`;;(r">BN$(TO<u4r]%BKF%WZ_t\FHd?:._B,C*5N`'%7,U#Ae^'1!hIj)dE4-Q=Y/?G7R[=sU]Qs<[on53p,&J/9.Lpk=$difUQQ91&\R]OPW]$K,NUNhEXEM`%+QWm%KgrRs8C!nTYEGmD$:q[E%EPQFBTrMYJ0a/a[0$>lBqqiJWo<Y_i?B$_7_[B"(@VX!,`UT!$+Q]V_k,geS^:7@TB-@ge,X\"%\j@?I6M6&/)/fT>;WWMW"L#\Y(SlFRm&.^3PPCqq1_ib/Dk.Q1Z<9@=HVmORE`QF0[,fcM-L;E'KV]:KaoSeDQ9ftgE"a#,?n8Ug%,I"6k:d(i[cePud(=GerO56<k1H*5(!A1lL&_L>B&l@LBA2q:V+I^*Q[A^<TUr]hJ+S\m!'S=UW(pOUU-ufLY2=j@P_lJSl]T7'B%`]+/4#h,3?_VR)r$'m.ZOP6(8a*3:P)@4LEYTFJH=<#7."/nO""+JAVVO1G!&ZE1=b:7p-8%/#+B`pF@MmlN8I;/%a<!bu.$0ZgZ%KIk;l_(cL)-ls1pKVk`;E*R@ZZB@'fK;Y\AMA:LG9WVq3$^:ZTjK*5c'M1i%b)3*N<'uq('.#D+?5s0JOTq;[:+%9]eI06@5TBBJ%_G3`Mk@VGASe_l>M+JNGBut;r$W:".(R!YWl"@e2BO\1n)rQ\ucOgMpDe[-q+HNie;6Gk><qAWkXq.a#05#u.>[JP*6;?gWW5(:B%("Q/\;/-3-T9HU?RcYnGh>saV)a`\h89est<7&_g,TVpO('Q6^B;?2C>/!6e"^Dr'UX7"s%Y[#UGZm!uS!5JH2pe?$Q\dI`1+T\4%eLZhP!%Re,/fgfcF`JB5Sq`OW$cs3H=;:>)Z=MX7;0a=%+HGF7?j*l&HV#V"@>h;IPi@#qI?i2g<Pi)ELcC(lBi_N:E2796<Ur&X%!^M68YmHJKU+)7I&4]%09,A;t5HI0",s47#\LC(B8]<;3cnq.C>fD*mmXb#(Op52BB_3<&YNI;g=0fU[N.LM@1^Qts7<q=6U4=`V%aa9]4A9/Z+b:>iA@#7,UD(Xh[O;8;n1qj4$84;*cdIULk%cDer_?Q#M/'1Y]EE[ouD\J*1c:gJ+Cs0pCWauL>.0<*CZu\58jq=tm%bB[7"U9dE.%!4C!QuQVh-7u?O^fYV$IjT#3E4&YD0dI1$NA<d6N$u1bS!6cD<sof.6:QO7TN[!VBN+#o-LbV\dBXtRLPC2Z:p=na%7A`RgM?:YPfR#"U;aP+@--B[#>oXk&,SqWF5fb"3S8+H%g'UtcPUTRBIWAas2tYL?Y2h="!]YIV@>Z4+TGU2<H3Pj-9am>"K-=$X%D5K99Zn]R5Nm5,0\H7sTR4C._PIVd\SBO,p:11rXA/>I>3)_Pu6sh^qJ9*(/S6-<^,l&;>H(,Hb8AR9^JMg\c0QG:s8L=q9/BP\+%D$Y%g+IXm:n1]4pbkmOI)XJ"lh^hUFmg'1UTXs3;2@VJsSIc`BZ<@5PKk;0:5<rpU,1(o.j]*pPTO@p`kHb>doRPAH`[>HA&WQq.%cN.gYDb9$>Th3K1<C#:JmfN]I1ba7V[-3[5UeV#4Tb?Jm6g'RFCB-bj94efuW+]4%R7(_5NTc<tR;G"3X9&ua5`X(*6A,QqURoN,%+LF_5D#rgQ(.Nc#mZ@\@QRs?[+hE]Re\3T)!MsLf6j`X;"=-?D*?pqM*dC%Odl8,bN#S6<G[brXm?kA^6l:j!3Dl)J!!]=:nmDba%3L;ZDaG*"A'Dgo2ji?#H.0'\q\U7F(%=)F'cuVH@3C<qo%:4WD.l+"b=chih3+><RKbep:^o7ncDI->;3Jio/B$(/i?>'AR%3S/I%$`lA/(_TZ:/<2=F'IJ$SRS)`rkcBJ?X2ld^C^"bn=[bG5=9*fPLh>UoK@#_r3"s(WK929T'`<)R(.Jp?nq;Q;r/EUFW]K'L((aIn%dKT,Z%@If9*9EqN$8I4#)[Cm_1Ergb7s$"-7']cgjT-(=!?n07*CLnl0UaS<%J"dLK$X^05R8SQ!Y,K;Fne;<)OJ.QD\ecZn/d$K%no/1J&J'.+[,ge'ArOeGJ;"7\E$He'br3jgpVf$;*>]tRF_cs/^_/p"ZK`A4+P'^k,_,\'1m_*;L6M62)H[-=!8blA>]4#7[\/.%%PniPg\L./R4pMoVR=E+L1o?0#*\sQ>jDPd`[9S8e>0WIUJ<<g6Tl7d)N#lu5SmrR3,jKZ3lS/T<LZp+EgNN.,Pid9O'SR;i`A$$l%g`^@dqdLN6@L9u_4DKiZ-BC_*[buuVFGjf7CZe$o+kl!BWQnCeO,4.h$^c_u-:<\lT_9-gfJ'#>AR](JlojqK9\IEJ-f/I,,o:IW%`20PQ[F1]k:sY&pPE-&Rd9qS"6_^Of_@>F3^7]$h_MrgW!*V.8ikh]T7*QJOGB*#caGD#`h?CRcBNm>aLDJed;<'R?^JPJBka4gY%C)oQ<FD@eQD:kRRW]7H>`0Tm2&K4@`&KBDhKGjR!M4L!e9a(h?PldeD[GV?LWj6N)JY>ZYC>rB*;dSXBac6k1-=Hr;$0+o_[?.l1%$G4lrX9Dgi2!&;L15=@ZL=pr2e5^(?*.1e#e<NA:ng^Yd=^Bebd8dMU$dKl32Rj(2)-dK7XuZ!)`GlFs9a9;WN@#)L)qjm#VU19m%nWaA\)d%,]QY^7Q1ns/D0(9Fa%14Z1j?r$+BOHPt6"W!jBo'4[db'K?d;WPE*$F\P(G1seLG<d7R*NVfrgn[BL6QN6T-,JMQtk&K%!Qd?%[5Lml$;C_1'cK*=Z])qMU2XiG^Xg],f90XC_S>%,LGQ1<K=7ecni;Aub@jO&J;,+KNA3u2I:ZXFmh=T9aK40FqFVQ\=a+uT%H=Y$:`JX""3&g/oU:9k?GD#;.Ag-N(,IGC?r.-an,=Y3A$O)D1.p@mZiL%p@UAPVr9ZVl"*M.ND=([nN;?6UG3[TN(ob!7`,C'C2%eh:+(!=qpt!&$>aSl<:bG?IfWB"jqLDM+gA0"ck.G`i\RNoa^B3'qe7O2a@U'h`X\bGAg68L(:B44Z-i*63a!dcKuUAJs*%?+9Vi%I2[LY'+1u\O2ajj1T54I@>=D+^Ug^Z+qen0J=Q<Gfqt%gIE@do`&d1,8m+A\,&bT$b-$oFJ<rs54a1MM&fj1/.DtL*Hc)f2Ch7TI%k8s7PQg?c11gMsWlaA1oAQO)W^=';\/fQ5Xg32T.[EKn,B90a?]!Q,Bfn6X*.2fLOGK_=HZ/E/*de>]0A8+jO+WJJG8\O5TNbFC:%f6%$h&>VJR)b`2s:pFP;F>t76-@;V2PA.WAIJ<AUV3M:\?)QR79)+]t1[[DRPPDCo5>cd\B31dEB=IiPoEi3#"5jqPbLBJ]53"6&%kLgbf9l8cn`(*K#h\l+Mc/RuJ$s?UqjVY]o#qHmY4?]Nidit)X02`0)D=<\i2-]<"C>CQ0<P:<&SaEAkLaB;0&8#]B>V]N@9Itaf%E=!fmcDq=,898.4(fl4BnlJoL*s"mK?,=.VrB*0n4>TPn4"s+S6JTFicDKfrq?3fK9c[B(Q!]<UM5Es0;Aq0j%I6UoCr\!\Y>eNh%I$0WC[i>O3-1*0B\WECM=Q_5!LK@Ha/BA;k50A?9r?^O+NJ@9+0E1n)$U%MFKng98qW1:>i)*l^QV9GQ>9BtfMc?$2ad^JZEG$D]%n-j!d'!A:9`G;3K8qUol+/7H&"HP$i/g_9@`7kapf?eYC5>1E1W5&YcZUh6`,+,>$2S0c\p.P16,)j3I<?hoLUDc'[]=LM)&D8_]%T,fM]rAr]Sh?:Km]7G9hX3ZRp^mM<iUcAV*Mf2;s'2L*@B\t<VRU8\Uc90;sIaD=5qtrL#+`$=mn\!5IoPD#X&CdON#&&l@"T<Q;%8_C7R=oV^Ui1lrWRjb`Fl)1'V5bfISL!aJ9`N)Llns__FJm/HT]mg,9P>n;?k05^;Uh[4HQBe7lV;7;u>uf0_M[/o9;Vs,0;(\dC%c%Zc7!gVrmA#pFS3F8(>rS@S]D+H]/g95LNYIm:Eeqnb/>A0&@Z4Lpfgd:Tgq=+9X*.-leE$ib)f"#L;?:qeCFeK"QU"*FSKQ>9a%TOHiKdGd=/ZW:]oh4AgZbgc2@n*3M_;NCAA8ZbR.qX\hGNNfbXGD"aO`qc^eA?$q?]c9:Ug-=L^=7U7Cr6XH^PYI^WpW2H4qo[`u%[[)+N`ATi,!h)\nkckLeH^.3kR\Wl%b]I;N3Rf%kZpa=,Jn;Bn]7&R=W9k5jb;k5ohf>62Na:s%\h,QKIHAX)],[:B!_k7'aO6gT%8ogq\PHTofB@b\V/6/6+e?L'Y"_G!WgrufjZI<f4MSq,FK=\K"i6^lqb@uXqbd@`p2.mR$8j:@;O3#287.?(>]O,5Yr60#(gh)#D%Me!U,<!3B/J;7f12+k$V&:Il]Nj_S3bUL`J7?(KLJ]SnWRBr64\_3rBo1YRC4LiL,+"UcKm?jZC%Bu733CmsBigNVd7$,XOj>`(A%RA,['e9fV,3KUX?pfc4q[u:_B=]oFA=gXL)/$%D-``[PiS)j1a>2T4W9.a=C9\Eh(@ene)T5XC*10_Rf=HZot[=>5iTRkkXYXNm%%g[As.<:u>4FM,%REkIR7OXKJ'A"Fqj;tUe(Z5_M:cJ,JN/4[.Fg*FN(I/AXY9J0b+9.;2hX3M^[ZHI%dM/*R7VCJk%SK,]pH<4Q^%,AaY*]l-NjWW-.hkU:W#>=-rW_9lItGpCS!:.qifT4Rk7pFF8mf?%_1jP+#5Y,h-f1O9]9mB9BtC0QpWcCJ8GIt)6.%VfgCbM-0<%hcM2Un!9"'Xo$h?=r49%[<%q;"[_TibHi[QZ=#l?Pqor/K/d8>a@_fOIWVh:DB):lM`]7RDUDSA?o*WZQ9-DU_G6HA8t/+[VNa22%S?\st/Sa3OmcQsC/`+'PI4R$AV7T<,+QWI-G]T:i:S4h?pLiU'Nm6O='?K<L9f]F;\Wkc?qKS0dWM@Xtr<D-nhS9)O8WpPQX!/uQ%QIWgJ,VZ)D(CJ*[<f_8)Ia%.D$ZSKI0F7ohPcZc\?FhP1i)`I:4<nLV'34T<e[r^F[#@-:e*NqFCJg+\e#QE'RR\%!R"4N=P-+cc%kb^@DOH.,,)EF:nW9mT8*4T?5;p#+kHelcDPV]h@<g)WO6mYB+Z*2f5G%[P:H'9D7qhT]*K1oH-$-E)F+fO-q*Q)XKMer#S3h=<_%Q@Sh_(93;V'A&W&Nj:m-Ob)5YT4KA3(U&`FjKh)+dDmO6#HhUTn[f@$hQ$RMn)VI7E<`CV9_+<6h=h]'5>UueC]"7P-)]\'2JL&U%C(Md]m^n0SG5(cV'&q;shlhts#ln%#+1,@ORaE1$F%d_,^8n$+-%_monJ*/=Yn<r!iOc?;*50ZfQ?!H4<M$i/D`<j&HRBH]#Gd3s%QLFE][5lWm/rR']6$4=NI'Ur&Auh'7ZT=rX&[t]Sm6O-D&m!ZE8kStLBef6X1^Db@b]H&<mH%KJO&SV&:Y89M%%:R<IcR=d!T2M4%^p;2n[9!LDpn832R%U("!nEP@[H?o4(UfD#(7#C^bl0T^7GK5s;eS?Yp$Cl6)tn$=o]6,#P6-8XGA(MME)Q-\DPGK%<,2dlmEX6t%W(hNU+9uaSf7c'7='ZA?["cQDq5g3Wdg\S>Jl'H>=L(poU]S0WZ,jQ@ZW8]TnoPmLo[#qPj2_3p(+$'5&ZAQtd,E8"3P^afq7RCT%7<LKOCEa+uFDWI@6pC<M[Tgj,QX/f-4eHNYnJ;@nG;<75hR<b&<Pn*,]I@Y"F\^'ffN%KQ(bU^8qr%$W&P0,:/`AL>+!.=(Sh4:j%:+U@P[\pM%lIV]M^-t^t!'\02CdNAuj&3\HKK(hQ*Xt+",Y%9\Ui3BC>JcERHaGSG=.,hu;@-Z;-I(=6oOjhh&0c#NA_6I#'dui]%c<6kaC:G:d'Y%$5$J,ubQJ!XfC+k.T\nbU;nb&mcR.`0dj7R?ip@[>Be\aIUeW]@-%Sqbl4:-jOluJkUk`KV+C>C7f6;h.^<Lk=V%AsScf0W8s9;(3PQ<)"&hCS7TkEq9p'a(rI@,)/.!!@p,`"HB(8q+E_)Qm?>#7(u-VQ.Dl!n2)HY2mZ5?$hT2Y$=]mns*DF"eO5i4%Z@@K)1oe^oWLoH-=Lsmf-,G-ENDnXLN]bY.MXKT>7Bm=$&L!rsJiQ&eKZ1K.4JFp@b`^XY^d&iK1-*]5Q-\7Sf\iY@='cbsR:VOW%*'O7[N3!8[HXBZc+McK-$@m4BC5uX.oDAIFB!,;?O?/SBcp2V*M7Fi3fX0^e;N@Hg_r3G`*D,q.$-e9R!9J/H346>0C,XJIkgrTs%=,]J60B<V+1F>f!mcoA^"WMuQW5i5?P%T)a/!5XRC_)Zg(9t)B"de_`):AECV9el\QJV(KZKu)ul*MY"_@!m'f[OCl*-D>U8[GsN%d>R]W$/8`iG[%[kDs*;eIpOu3p"hdcaH<uF<Ok>/7*>>e8I4TT48i8<r+Q1,9g6nZGE;hp=6+NGU,D+j^<?(8giiha[*Qh!-X,r`%"94t@`-l1DgWN<p5d)HrHG/b'"5_!WApZ>:X$/5Gh$qEi9Wd&r./L<`^YC@h[SJU)iD%/CGn?c.>e2p+?KA][3r.4[n$X!V'?*F'%I08[;aiWR7#ej:(lh1T1rgaRhDmGVK5Kr#1WS?Ipr\enBS;/0oYZ1@'VbP/!oj"A5^YJP3\N?:gh7Io=\+][4gX:rWWCqHDT2#i"%L37:kAm)UcDO.]0p0,+5a4:lAU=b@4Dcol'<jD/N;_3$27+Po#%<57'QK2igQ^EMVK"'uE&>Bh[%47u"&d<Vek!mPQ`)F?g`#2s4%&"j"ad[Z8@ZRV$o&/*AK8bQ-DmH'WG19GAJ]6h_oTa,^^EATp>at[$YPjq+0/0=YT5ZU1ja';]5LqkeC@VM4a8$s.XQH3NCS14M2%7,,GoI/B,GEjid)P\.[ejkWs-X,.a*Z67b/\5;ooderMm!OTZgfBhX"Wt;fV@-:3H1e;En/D&*.g0p"n2g;8KP,'OdB:3=_/8(C?%`?p6"I,n#AkaS?fRj>s#*f_,P]g-[3=2:B;3"IEaB3W.ngu\j:28P':5D>aeqYi`lJc"eL8n-L>4207C=1',NJ]duNja9e.cEo/u%&kJ:[Q4P&Rp"\,$qg4jf?CV'lo<r.I0,i`=O[_EJbGEVc\5$Z>A81,Kd[G!MM5:f2/KCfW<D(Z<e;4QVc06HKVV>$fCn88<)TCAj%VDn3:r=I=RS:8Y#>)cqERq;]U;.iDsXSL@9+24qaBM/\@K)6[t,i%YEb6M/F,-D1PDqZu\$JBA?k,]W:eIeCUZS)P'@R2R9Lqo/h%i=DW]SjpZ^3Z,(6?o^fG+eN*)<[gmga([%-I7Qu$`:^GFOm]&:JkP)::p&eQ2Dj5I>rDMQ&Zk*g#PIF1ZBt,]+Jq#$7++]dFEhaq%StcqAEh?]P9$=?\?aV`&$8G=7c9/]G"?Oal8Z!Ik5>"cWb1Rk3j@nueI5at^hD.mX;M+n/,,M%S1Y75Le#;PHjLf.Fr$SB`Oi\(G%/b0/0PL44;Wq6]q^WRIan/Qu`nfbLX[*ou_9#kep@E;504Ei:W+[_8;alaIP(MeK2$85^0dr/:%^F#ip`8fKSZh$gW+F5Oqk2h^V%4I3`)RfVP@7Y/_oLR5g+.-A6b1eKnj*<I3L0gB8r6C>nVT4Q^dIkp[:.fk\H&;LP`)6Tff@ca/+$fL/$RRNApH!6fhE;3%3q1*`(%87VVP'7#dd,A-$QFt4DUD3bm[b&/ki&mJE9M9dV7N-PPt"3KpIIC#$j!YF#NLl%nW)j?3`+Bf[<Abh2HVaDP2<c#e_7eN-e8h66a%V3>(._7_8n2)V.?,Ht$>db?KnKKj0e@Wkal<tb*g<EX_P=pD4=Y'$)dK\_G'G$TNB2()\YD,[W%/^A?Q6!W#*j00-kgl"Qh!0]r;%DED7Z<-@IrjUii+J?.eM'r\)=rH*r2&k'Kdg7[Np+lNl)d.TVjRrUkI,M:/L`DH%:=b`<EcO9-lXc\QgGf>N\pDZu/6f5\));aa=%CC,L"VXK<lfH-ef1&n.Kfug![@j2CAUBKOF'qejTOW+cUCZSHUR[9A&o>9nF#jf:!KdUiNc*SCXZ6*En.@nTDWWhb6_Z7Pm7$2B#%D3fgQ*\6$Ul0+Y&>fLA;2`#jdKhqQJ"(J7QBZFi@m$u(Jb@2p>/%S0.$YQ^0oQ6X<GYdo3`"Di=4rNGU=,n`dY'?$L+3cU?2-#qK%Z%]V5OFu;nTk;K_?u00^bYW/5EEeP\-e]Ac>)HNPp[.E5Icj$%V"K1RL3]%V[O?MnDBV,;FT$e8Hq$L84*)4cM%W([$`j"E[8:.W%#+A#J9=gb31a!jYU=>SLdh&WFLVY\Yc;:DtU!I:ZcqhP6Onqa4.R8_J,o@iFP;c0&BX]4+G8tr-Q5&"b.W81EJK_Tj6Zi^B;Fb%^%/gShi8D'4kM-bOp[[:.@j391`'=2gb6=43Q'D-WO_q53tHfntG`&E+^Q)7d7$p*:me)W?a$"V1W3.,.8geoBRq!]&i-[#8;=P8@l%E7=_=[?W.?-2O?MT4O-88EmRlMZVR2#:JE,p%4Ao8\,,lDaPZO5L6MA$=rMKolM3qPN!_@"snbIok/pR8pJnUs'o2mp(>\'?>%,V%H]Y+jT6O9sWTD?F;3"T,c.`2REW,X*BJp^'IBItN8WOX_Z=VP2X.7%^KRNpC&utQeNk6)fmTgH#kOZm';!NX:d>gTDd^j./^cNj5%H!])FE[F".U]l&(+ebOY^at/;S"fNOa_nJu(%QC5[QHt]W=lhR?!$2t$J\@3Ko*sK6&k]i2^t`Tbon%"R?+O^SH2d94Il"!#,LBe%"NI57o2un7H-CQ][D;5hkO%S!`rH!5U/QFn7H-O'm&t(jD1:sTaol^4aW@qX_j*JV25#9qqV0HcpHRDr^NkF)%O\p$0o(rTr]e[R%KL@.N6P5lWEs>cl[JDFseV'/68/4lWT$FW+hZ**(VgW89a&6SL2NensndA-No<n1m3Vb[Q`UY(/i:'`3`X!7dT`\:m=Ye'<bWOp/%++C6DEEMLWjtU]s=bY]h?CTYiIbb0pP*0Rgm*0:aHn/0'iU6gR4k/FT^rpF1CFfQ*WBmBW51R9m:Z:,nD@Sn@:,3Y1p.9Y?E/Y<r%/$XSXnVJ9u8.CMG3'Gc[+j2@g2CBqsq?%S*6Z5DdDr/rT`L4^GS&j".Tl/9J:_68jI)I=2[Kg:_[t@m8,S,?OP91r+bai$g,Y+A6%`\B"uA_#i_7IBX(1G7Un3itu[751f6UH8bjbmojp?s5Em4%KXp$"T6g=+V.3+SuIW;09+"%UQNP6TJUngR!K/E)6Xo%g]r]mu5rC%_744Nn=\e.i'N"]I97M\_I>:"EVef!)_.6-Eo\GtUShD:&(J(p\$-mtrQnE*J?luG07..(>D'I0Ea30N7Ja0No5&J]nF\aNND2^R%R/V%;&`6&A5nCC)Ya4?u*.[UKrP17d5.mZp2g+15oFG/ZXOA?!HF*b).RO5l[Y8,mYcLOqQGa9UQ>,q@$+<`Kkg;QXBN,H[a?$r6%_H8]^;_=fEUdO8@eW^&];"8>ia,t[qMf4-+V<HSgR"lTN&Ckd%eJU67:N:][XLX%??Ek/t/`FkIBLHGsQM!R]ohH=&C9hf*U%Zb3%UNWsYlaDk0n,RU_Qmu\:Wh&bR2>\#WH#]Bm[Y8P7mP3XH\lSo1*Y@tZ!/!bc@ApB]i?sDlTYlscJ[r]V@'rQX0E!F2T:s-9Fm91o%13JV(_4Y2-!.cs_g^C:U7;g7*RW56/;apc'S>2Br&U<oh:OHX4&c;(X($&om^<'Mr++:KrGSJI"n-O;gea!QEik32o^Fh_Toh>N<%RZp0M[>Oi.!Og;e?qEblA044E_R[<_<a./nPUJLNLdmoGM.TnL-iE.HY/q8X#/VnlG$FPF@ONsQ[Y2f^`3u5Qd](_%[Xbrhq6l^3%3W"9+U17$Br]k[\a^918QGk"-[a!RMB@6P#r=a<-UflQ_&314uH5;KBXm2_'X?K#.7>W7!L2LQ]Dh:_oNA[gH7%2&<@QT?#8*=/_%m!,EN3TGe=V%Z6^YTGQ@DBciGc>mBPV7[n\6=9tsMor:FHH>&I,h#=]ERF>,,kFWWU]ogUcUb8+TY`Zn;'$^7PH"!&RmV_G'sKn2%ZD(HJ"eCe7(sKfoS/<P!I\5$u:)4mG?^F,X/)mp`%7d(WKRcRdK1rZmb("Gnf&<<6Tg9Trj]@c^*?La<1]hO<A)O@c0Yif-QUL]P%g_):fd<jn1+Y`UBT3a(*6!d815UAuFX)q"u:>p^D]CL-R,efu?WHE&r<cVq*B$:(6`=r[plX>_[C+4l:.3a"ceM4C0&tm<re<&=;%%nA$t<r+(Adb-QHrNPR+#6TOTU'YpK&o*D?(4HFDH]\&nN\C021K7#QGH#uWFe.-)S[,f/!S,JP.QU,^iCu-i.YffD/Ahjgg8_o-%?2SH-4p&R24%&7-N`lOp3L:WsOEMnIU&ak@cAAde-T@5A0XcMcfNQqbeNIW2baItPP.3gB#_s&5CtpHG[$]uiMqT^n*Y_%(UE8+/%(Lb4i9AgB"?iWpl,=*q=e]=CYS^L2!Fa3p[(fn#U%u26Wbrs%Eo)r=OV,-2,Q4@1^SNc:n"?q[Wh'Gisa#lH*XS!2RXrT^&BF_ss%Vl4.(f`9(6r'Bp5i)hR7"UktjSK!aJZKsq@Xa<=[5<\]*66)Qj+Dd-,W10!X3H^E@A6LR^mWJ6K_7C9crIL&BRl9_KE<&H!U!)kV%<Y$dIq>h.6nsH=)-pE'pa&QaoY\X;B+*9Vg.^>dN!5o&N!=XN[QoMs)[)a$9L+.(f9^:jX.Do2\>h!SK,GZ@6kSf3h2,i\($U5>9%*!=XnJ+NbBP./bW<>d=p#f1LS&I[]E3';6lEs[m@H(*7Nb`T5]<SL@?r&"YI`jDd%42;Cu-XV8lf1Y_`@r;l"ZSI=_qEnt^U>(+L%Tjna6OM5jD=*AP&$">)+k?Fa=>><SA=$TK/N\[.9nheOH"gGEp5R9W4>*W")gHV>6A`QR[IYYg'9*P`N"D[9T[St:SH$ukBDphWo%49]D)n1XuN2'4]gVA'J3Oa&&I':$@cW@r2JOq=CB$qLcKk.(W]:G4b:6APV5#>,Ne978=3mCda)V#_cCREff$Ga@Lb'Rnde;$*&D%N<_s$$L<XT*UP^1IlJBA-NL6K+FK`/5&&4*qn^KX/tWEgGufncMH;oJG]cA*%H'Kl]HDQB*hI[Lk4l*#eOJCB!bk\Z:C.t+cC>0.%j&*KXI]*,fr.^KL2l1Fp>a\)2Zusl;NRNM_5X-c@M/H>HKXn0o$ENn>.&qZbp:\k(kPSn,qeIbQnb<%_9Dn&;J(O]Qn_qC/GMiAJ%%mU$fcbKJK?iU)bY:i-=p;7t:^AdWncbKDW_s]hhg&C++VdFrOmIst:rUKQis8:u.OP!@kjkkL\VgnW"Qi@4B'cG9~>%AI9_PrivateDataEnd